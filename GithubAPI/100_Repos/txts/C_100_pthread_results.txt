https://github.com/torvalds/linux
- tools/mm/Makefile:11 CFLAGS += -Wall -Wextra -I../lib/ -pthread
- Documentation/block/ublk.rst:119   pthread & io_uring for handling ublk IO), this command is sent to the
- tools/perf/ui/ui.h:34 void pthread__block_sigwinch(void);
- tools/usb/testusb.c:2 /* $(CROSS_COMPILE)cc -Wall -Wextra -g -lpthread -o testusb testusb.c */
- Documentation/locking/rt-mutex.rst:6 which enable pthread_mutex_t priority inheritance attributes

https://github.com/Genymobile/scrcpy
- app/src/sys/unix/process.c:138         // https://github.com/libsdl-org/SDL/blob/release-2.0.18/src/thread/pthread/SDL_systhread.c#L167

https://github.com/netdata/netdata
- build/m4/ax_pthread.m4:2 #        https://www.gnu.org/software/autoconf-archive/ax_pthread.html
- aclk/aclk_query.h:12 extern pthread_cond_t query_cond_wait;
- aclk/aclk_query.c:11 pthread_cond_t query_cond_wait = PTHREAD_COND_INITIALIZER;
- libnetdata/locks/locks.h:9 typedef pthread_mutex_t netdata_mutex_t;
- libnetdata/locks/locks.c:33         int ret = pthread_setcancelstate(PTHREAD_CANCEL_DISABLE, &old);

https://github.com/redis/redis
- src/bio.c:81 static pthread_t bio_threads[BIO_WORKER_NUM];
- src/Makefile:142 	FINAL_LIBS+= -ldl -lnsl -lsocket -lresolv -lpthread -lrt
- src/config.h:288 #define redis_set_thread_title(name) pthread_setname_np(pthread_self(), name)
- src/modules/helloblock.c:37 #include <pthread.h>
- src/debug.c:69 static pthread_mutex_t bug_report_start_mutex = PTHREAD_MUTEX_INITIALIZER;

https://github.com/ventoy/Ventoy
- ExFAT/buidexfat.sh:32 ./configure --prefix="$CUR" CFLAGS='-static -O2 -D_FILE_OFFSET_BITS=64' FUSE_CFLAGS="-I$CUR/LIBFUSE/include/" FUSE_LIBS="$CUR/LIBFUSE/lib/libfuse.a -pthread $opt -ldl"
- LinuxGUI/build.sh:43         -l pthread \
- Plugson/src/Core/ventoy_log.c:30 static pthread_mutex_t g_log_mutex;
- LinuxGUI/build_gtk.sh:10         GTKFLAG="-pthread -I$EXD/usr/include/gtk-3.0 -I$EXD/usr/include/atk-1.0 -I$EXD/usr/include/at-spi2-atk/2.0 -I$EXD/usr/include/pango-1.0 -I$EXD/usr/include/gio-unix-2.0/ -I$EXD/usr/include/cairo -I$EXD/usr/include/gdk-pixbuf-2.0 -I$EXD/usr/include/glib-2.0 -I$EXD/usr/lib64/glib-2.0/include -I$EXD/usr/include/at-spi-2.0 -I$EXD/usr/include/dbus-1.0 -I$EXD/usr/lib64/dbus-1.0/include -I$EXD/usr/include/harfbuzz -I$EXD/usr/include/freetype2 -I$EXD/usr/include/pixman-1 -I$EXD/usr/include/libpng15 -I$EXD/usr/include/libdrm"
- Plugson/src/Core/ventoy_util.h:40 typedef HANDLE pthread_mutex_t;

https://github.com/obsproject/obs-studio
- libobs/obs-view.c:26 	pthread_mutex_init_value(&view->channels_mutex);
- UI/platform-x11.cpp:44 #include <pthread_np.h>
- libobs/obs-audio.c:507 		pthread_mutex_lock(&audio->task_mutex);
- libobs/util/task.c:7 	pthread_t thread;
- libobs/obs-scene.h:81 	pthread_mutex_t actions_mutex;

https://github.com/git/git
- compat/win32/pthread.h:2  * Header used to adapt pthread-based POSIX code to Windows API threads.
- compat/win32/pthread.c:11 #include "pthread.h"
- name-hash.c:173 static pthread_mutex_t *lazy_dir_mutex_array;
- config.mak.uname:268 		PTHREAD_LIBS = -pthread
- thread-utils.h:5 #include <pthread.h>

https://github.com/ggerganov/llama.cpp
- README.md:128 I CFLAGS:   -I.            -O3 -std=c11   -fPIC -DNDEBUG -Wall -Wextra -Wpedantic -Wcast-qual -Wdouble-promotion -Wshadow -Wstrict-prototypes -Wpointer-arith -Wmissing-prototypes -pthread -DGGML_USE_K_QUANTS -DGGML_USE_ACCELERATE
- Makefile:250 	MK_CFLAGS   += -pthread
- examples/server/httplib.h:189 #include <pthread.h>
- docs/BLIS.md:15 ./configure --enable-cblas -t openmp,pthreads auto

https://github.com/FFmpeg/FFmpeg
- libavcodec/pthread.c:36 #include "pthread_internal.h"
- libavcodec/pthread_slice.c:30 #include "pthread_internal.h"
- libavcodec/pthread_internal.h:39  * an uninitialized mutex/condition, ff_pthread_init() stores the number
- libavcodec/pthread_frame.c:37 #include "pthread_internal.h"
- compat/atomics/pthread/stdatomic.c:24 #include <pthread.h>

https://github.com/wg/wrk
- src/ssl.c:3 #include <pthread.h>
- src/atomicvar.h:16  *  pthread_mutex_t myvar_mutex;
- src/wrk.c:123         if (!t->loop || pthread_create(&t->thread, NULL, &thread_main, t)) {
- src/zmalloc.c:43 #include <pthread.h>
- Makefile:2 LIBS    := -lm -lssl -lcrypto -lpthread

https://github.com/curl/curl
- lib/easy_lock.h:98 #include <pthread.h>
- lib/curl_threads.h:30 #  define curl_mutex_t           pthread_mutex_t
- docs/examples/Makefile.example:46 # We need -lpthread for the pthread example
- lib/vtls/mbedtls_threadlock.c:32 #  include <pthread.h>
- configure.ac:780     LIB_HYPER="-lhyper -ldl -lpthread -lm"

https://github.com/bilibili/ijkplayer
- ijkmedia/ijksdl/ijksdl_mutex.h:29 #include <pthread.h>
- ijkmedia/ijksdl/ijksdl_mutex.c:38     if (pthread_mutex_init(&mutex->id, NULL) != 0) {
- ijkmedia/ijksdl/ijksdl_thread.c:40     pthread_setname_np(pthread_self(), thread->name);
- ijkmedia/ijkplayer/ijkplayer.c:53     pthread_mutex_destroy(&mp->mutex);
- ijkmedia/ijkplayer/ijkplayer_internal.h:35     pthread_mutex_t mutex;

https://github.com/coolsnowwolf/lede
- include/site/linux:32 ac_cv_func_pthread_key_delete=yes
- package/wwan/app/fibocom-dial/src/util.c:19 static pthread_mutex_t printfMutex = PTHREAD_MUTEX_INITIALIZER;
- package/network/services/shellsync/Makefile:12   DEPENDS:=+libpthread +kmod-macvlan
- package/wwan/app/fibocom-dial/src/udhcpc.c:205 	pthread_attr_t udhcpc_thread_attr;
- scripts/ext-toolchain.sh:36 	pthread:  libpthread-* libpthread

https://github.com/jqlang/jq
- m4/ax_pthread.m4:2 #        https://www.gnu.org/software/autoconf-archive/ax_pthread.html
- src/jv_alloc.c:46 #include <pthread.h>
- configure.ac:125 dnl Find pthread, if we have it. We do this first because we may set -pthread on CFLAGS
- src/jv_thread.h:10 /* Copied from Heimdal: pthread-like mutexes for WIN32 -- see lib/base/heimbase.h in Heimdal */
- src/jv_dtoa_tsd.c:9 static pthread_once_t dtoa_ctx_once = PTHREAD_ONCE_INIT;

https://github.com/ggerganov/whisper.cpp
- Makefile:98 	CFLAGS   += -pthread
- README.md:96 cc  -I.              -O3 -std=c11   -pthread -DGGML_USE_ACCELERATE   -c ggml.c -o ggml.o
- examples/server/httplib.h:195 #include <pthread.h>
- CMakeLists.txt:341             set(CMAKE_C_FLAGS   "${CMAKE_C_FLAGS}   -pthread")

https://github.com/ggreer/the_silver_searcher
- m4/ax_pthread.m4:2 #        http://www.gnu.org/software/autoconf-archive/ax_pthread.html
- src/log.c:7 pthread_mutex_t print_mtx = PTHREAD_MUTEX_INITIALIZER;
- src/log.h:9 #include <pthread.h>
- configure.ac:21 m4_include([m4/ax_pthread.m4])
- src/main.c:19 #include <pthread.h>

https://github.com/pbatard/rufus
- src/ext2fs/config.h:78 /* Define to 1 if you have the <pthread.h> header file. */

https://github.com/pjreddie/darknet
- src/demo.c:199     pthread_t detect_thread;
- src/data.h:3 #include <pthread.h>
- examples/tag.c:18     pthread_t load_thread;
- examples/voxel.c:71     pthread_t load_thread = load_data_in_thread(args);
- examples/swag.c:43     pthread_t load_thread = load_data_in_thread(args);

https://github.com/mpv-player/mpv
- misc/jni.c:31 static pthread_key_t current_env;
- DOCS/man/stats.rst:216 If the underlying platform does not support pthread per thread times, the
- osdep/threads-posix.h:21 #include <pthread.h>
- osdep/macos/precise_timer.swift:41     var thread: pthread_t!
- osdep/threads-posix.c:27 #include <pthread_np.h>

https://github.com/openssl/openssl
- crypto/threads_pthread.c:50     if ((lock = CRYPTO_zalloc(sizeof(pthread_rwlock_t), NULL, 0)) == NULL)
- doc/man3/OPENSSL_fork_prepare.pod:34 Platforms with fork(2) but without pthread_atfork(3) will probably need
- util/platform_symbols/unix-symbols.txt:81 pthread_attr_destroy
- crypto/thread/arch/thread_posix.c:38     pthread_attr_t attr;
- INSTALL.md:1820 OpenSSL provides built-in support for two threading models: pthreads (found on

https://github.com/libuv/libuv
- m4/ax_pthread.m4:2 #        https://www.gnu.org/software/autoconf-archive/ax_pthread.html
- tsansupp.txt:2 race:pthread_barrier_destroy
- docs/src/threading.rst:8 synchronization primitives. The API largely follows the pthreads API.
- src/unix/thread.c:25 #include <pthread.h>
- include/uv/unix.h:43 #include <pthread.h>

https://github.com/taosdata/TDengine
- cmake/pthread_CMakeLists.txt.in:2 # pthread
- utils/TSZ/zstd/README.md:75 - on POSIX systems : compile with pthread (`-pthread` compilation flag for `gcc`)
- include/os/osDef.h:213     pthread_setname_np((name)); \
- source/os/CMakeLists.txt:8     PUBLIC "${TD_SOURCE_DIR}/contrib/pthread"
- cmake/cmake.options:13     MESSAGE("build pthread Win32")

https://github.com/robertdavidgraham/masscan
- src/pixie-threads.c:11 #include <pthread.h>
- Makefile:39 LIBS = -lm -lrt -ldl -lpthread

https://github.com/facebook/zstd
- lib/common/pool.c:26 #include "threading.h"   /* pthread adaptation */
- programs/Makefile:67 HAVE_PTHREAD := $(shell printf '$(NUM_SYMBOL)include <pthread.h>\nint main(void) { return 0; }' > have_pthread.c && $(CC) $(FLAGS) -o have_pthread$(EXT) have_pthread.c -pthread 2> $(VOID) && rm have_pthread$(EXT) && echo 1 || echo 0; rm have_pthread.c)
- lib/common/threading.h:49 #define ZSTD_pthread_mutex_t           CRITICAL_SECTION
- lib/README.md:26 - for POSIX systems : compile with pthread (`-pthread` compilation flag for `gcc`)
- build/meson/meson_options.txt:30   description: 'Enable multi-threading when pthread is detected')

https://github.com/arendst/Tasmota
- lib/lib_rf/RF24/utility/RPi/spi.cpp:2 #include <pthread.h>
- lib/lib_rf/RF24/utility/RPi/interrupt.c:22 #include <pthread.h>
- lib/lib_basic/IRremoteESP8266/IRremoteESP8266/tools/Makefile:28 CXXFLAGS += -g -Wall -Wextra -pthread -std=gnu++11
- lib/lib_rf/RF24/utility/SPIDEV/interrupt.c:22 #include <pthread.h>
- lib/lib_basic/IRremoteESP8266/IRremoteESP8266/test/Makefile:31 CXXFLAGS += -g -Wall -Wextra -Werror -pthread -std=gnu++11

https://github.com/nginx/nginx
- auto/lib/perl/conf:55         # FreeBSD port wants to link with -pthread non-threaded perl
- src/os/unix/ngx_thread.h:17 #include <pthread.h>
- src/core/ngx_thread_pool.c:110     pthread_t       tid;
- src/os/unix/ngx_thread_id.c:28 #include <pthread_np.h>
- src/os/unix/ngx_thread_cond.c:17     err = pthread_cond_init(cond, NULL);

https://github.com/Awesome-HarmonyOS/HarmonyOS
- Huawei_LiteOS/components/security/mbedtls/mbedtls-2.6.0/programs/ssl/ssl_pthread_server.c:2  *  SSL server demonstration program using pthread for handling multiple
- Huawei_LiteOS/components/security/mbedtls/mbedtls-2.6.0/programs/Makefile:76 APPS +=	ssl/ssl_pthread_server$(EXEXT)
- Huawei_LiteOS/components/security/mbedtls/mbedtls-2.6.0/library/CMakeLists.txt:3 option(LINK_WITH_PTHREAD "Explicitly link mbed TLS library to pthread." OFF)
- Huawei_LiteOS/components/security/mbedtls/mbedtls-2.6.0/library/threading.c:33 static void threading_mutex_init_pthread( mbedtls_threading_mutex_t *mutex )
- Huawei_LiteOS_Kernel/Huawei_LiteOS/kernel/base/include/los_task.ph:284     VOID                        *pThreadJoin;               /**< pthread adaption            */

https://github.com/koekeishiya/yabai
- src/manifest.m:30 #include <pthread.h>
- src/event_loop.h:66     pthread_t thread;
- src/osax/loader.m:31 "\x48\xB8"                         // movabs     rax, pthread_create_from_mach_thread
- src/osax/payload.m:22 #include <pthread.h>
- src/window_manager.c:451     pthread_mutex_lock(&g_window_manager.window_animations_lock);

https://github.com/hashcat/hashcat
- src/affinity.c:28 static int pthread_setaffinity_np (pthread_t thread, size_t cpu_size, cpu_set_t *cpu_set)
- include/thread.h:14 #include <pthread.h>
- src/brain.c:3320       brain_logging (stderr, 0, "pthread_create: %s\n", strerror (errno));
- include/affinity.h:13 #include <pthread.h>
- include/types.h:75 #include <pthread.h>

https://github.com/iovisor/bcc
- tools/tplist_example.txt:36 $ tplist -l pthread     # list probes in libpthread
- tools/deadlock.py:11 # This traces pthread mutex lock and unlock calls to build a directed graph
- tools/deadlock_example.txt:4 attaches uprobes on `pthread_mutex_lock` and `pthread_mutex_unlock` to build
- tools/threadsnoop.py:42 # Since version 2.34, pthread features are integrated in libc
- man/man8/trace.8:134 The USDT probe name. For example, "pthread_create".

https://github.com/kingToolbox/WindTerm
- src/libssh/src/threads/pthread.c:28 #include <pthread.h>
- src/libssh/config.h.cmake:82 /* Define to 1 if you have the <pthread.h> header file. */
- src/libssh/doc/threading.dox:6  - Your system must support libpthread or, in Windows environment,
- src/libssh/include/libssh/threads.h:29 #include <pthread.h>
- src/Onigmo/ltmain.sh:4554 	   # Do not include libc_r directly, use -pthread flag.

https://github.com/micropython/micropython
- ports/unix/mpthreadport.h:27 #include <pthread.h>
- ports/unix/mpthreadport.c:32 #include "py/mpthread.h"
- ports/unix/Makefile:112 # Flags to link with pthread library
- py/mpthread.h:38 #include <mpthreadport.h>
- ports/unix/mpbtstackport_usb.c:27 #include <pthread.h>

https://github.com/jarun/nnn
- src/nnn.c:84 #include <pthread.h>
- patches/restorepreview/mainline.diff:228 +					pthread_t tid;
- misc/musl/musl-static-ubuntu.sh:61 musl-gcc -O3 -DNORL -DNOMOUSE -std=c11 -Wall -Wextra -Wshadow -I./netbsd-curses/libcurses -I./musl-fts -o "$BIN" src/nnn.c -Wl,-Bsymbolic-functions -lpthread -L./netbsd-curses/libs -lcurses -lterminfo -static -L./musl-fts/.libs -lfts
- Makefile:154 LDLIBS += $(LDLIBS_CURSES) -lpthread
- CHANGELOG:250 - multi-threaded disk usage calculation using pthreads and FTS

https://github.com/allinurl/goaccess
- src/ui.h:44 #include <pthread.h>
- configure.ac:28 # pthread
- src/gdns.c:40 #include <pthread.h>
- src/gwsocket.c:298   pthread_t writer, reader;
- src/goaccess.h:38 extern int active_gdns;         /* kill dns pthread flag */

https://github.com/openwrt/openwrt
- toolchain/gcc/patches-11.x/701-riscv-linux-Don-t-add-latomic-with-pthread.patch:4 Subject: [PATCH] riscv/linux: Don't add -latomic with -pthread
- include/site/linux:32 ac_cv_func_pthread_key_delete=yes
- scripts/ext-toolchain.sh:37 	pthread:  libpthread-* libpthread
- package/utils/busybox/Makefile:97 LDLIBS += $(call BUSYBOX_IF_ENABLED,PAM,pam pam_misc pthread)
- toolchain/gcc/common.mk:76 export ac_cv_search_ZSTD_compress=$(STAGING_DIR_HOST)/lib/libzstd.a -pthread

https://github.com/raysan5/raylib
- examples/CMakeLists.txt:35         add_if_flag_compiles("-pthread" CMAKE_C_FLAGS)
- examples/core/core_loading_thread.c:5 *   NOTE: This example requires linking with pthreads library on MinGW, 
- cmake/LibraryConfigurations.cmake:29         find_library(pthread NAMES pthread)
- src/Makefile:309     # NOTE: When using multi-threading in the user code, it requires -pthread enabled
- examples/build.zig:19         // zig's mingw headers do not include pthread.h

https://github.com/ish-app/ish
- util/sync.c:9     pthread_condattr_t attr;
- app/IOSCalls.m:11 #include <pthread.h>
- util/sync.h:5 #include <pthread.h>
- util/timer.h:6 #include <pthread.h>
- fs/tty-real.c:6 #include <pthread.h>

https://github.com/HandBrake/HandBrake
- contrib/libvpx/A01-pthreads.patch:12 -	$(qexec)echo 'Libs.private: -lm -lpthread' >> $@
- libhb/qsv_libav.c:203             qsv->qts_seq_mutex = av_mallocz(sizeof(pthread_mutex_t));
- libhb/module.defs:98 ifneq ($(HAS.pthread),1)
- libhb/handbrake/compat.h:15  * Some MinGW-w64 distributions #define strtok_r in pthread.h,
- libhb/ports.c:20 #include <pthread.h>

https://github.com/lvgl/lvgl
- src/osal/lv_pthread.h:2  * @file lv_pthread.h
- src/osal/lv_pthread.c:2  * @file lv_pthread.c
- src/osal/lv_os.h:28 #include "lv_pthread.h"
- docs/porting/project.rst:109 :cpp:func:`lv_global_default` using ``__thread`` or ``pthread_key_t``.
- src/dev/x11/lv_x11_display.c:16 #include <pthread.h>

https://github.com/postgres/postgres
- config/ax_pthread.m4:2 #        https://www.gnu.org/software/autoconf-archive/ax_pthread.html
- src/port/pthread-win32.h:2  * src/port/pthread-win32.h
- src/include/port/pg_pthread.h:5  *	  Currently this supplies an implementation of pthread_barrier_t for the
- src/port/pthread_barrier_wait.c:3  * pthread_barrier_wait.c
- src/interfaces/libpq/pthread-win32.c:3 * pthread-win32.c

https://github.com/reactos/reactos
- sdk/include/c++/stlport/pthread.h:24 #  include "/usr/include/pthread.h"
- sdk/include/c++/stlport/pthread_alloc:38 # include <stl/_pthread_alloc.h>
- sdk/include/c++/stlport/stl/_pthread_alloc.h:93 typedef _STLP_PRIV _Pthread_alloc __pthread_alloc;
- sdk/include/c++/stlport/stl/_threads.h:27 // Supported threading models are native SGI, pthreads, uithreads
- modules/rosapps/applications/net/dhcpd/config.h.in:10 /* Define if you have the <pthread.h> header file.  */

https://github.com/swaywm/sway
- sway/realtime.c:4 #include <pthread.h>
- meson.build:86 threads = dependency('threads') # for pthread_setschedparam

https://github.com/jart/cosmopolitan
- libc/intrin/pthread_tid.c:23 int _pthread_tid(struct PosixThread *pt) {
- libc/calls/pthread_yield.c:30 int pthread_yield(void) {
- libc/thread/pthread_self.c:27 pthread_t pthread_self(void) {
- libc/thread/pthread_exit.c:38 void _pthread_unwind(struct PosixThread *pt) {
- libc/intrin/pthread_next.c:25 intptr_t _pthread_syshand(struct PosixThread *pt) {

https://github.com/alibaba/tengine
- auto/lib/perl/conf:55         # FreeBSD port wants to link with -pthread non-threaded perl
- src/os/unix/ngx_thread.h:17 #include <pthread.h>
- src/core/ngx_thread_pool.c:110     pthread_t       tid;
- src/os/unix/ngx_thread_id.c:28 #include <pthread_np.h>
- modules/ngx_http_xquic_module/config:36            -L$XQUIC_LIB -lxquic -Wl,-rpath=$XQUIC_LIB -lrt -pthread -lm"

https://github.com/cloudwu/skynet
- Makefile:110 	$(CC) $(CFLAGS) $(SHARED) $^ -o $@ -lpthread
- skynet-src/rwlock.h:50 #include <pthread.h>
- skynet-src/skynet_start.c:13 #include <pthread.h>
- HISTORY.md:189 * Add an option of pthread mutex lock.
- lualib-src/lua-clientsocket.c:11 #include <pthread.h>

https://github.com/ExistentialAudio/BlackHole
- BlackHole/BlackHole.c:18 #include <pthread.h>

https://github.com/videolan/vlc
- contrib/src/pthread-stubs/rules.mak:2 PTHREAD_STUBS_URL := https://xcb.freedesktop.org/dist/libpthread-stubs-$(PTHREAD_STUBS_VERSION).tar.bz2
- contrib/src/openjpeg/openjp2_pthread.patch:17     add_definitions( -DMUTEX_pthread)
- contrib/src/gcrypt/fix-pthread-detection.patch:7 -have_pthread=no
- contrib/src/protobuf/protobuf-no-mingw-pthread.patch:1 --- protobuf/m4/acx_pthread.m4.orig	2022-02-23 11:15:51.818483000 +0100
- bin/vlc.c:39 # include <pthread.h>

https://github.com/twitter/twemproxy
- configure.ac:77 AC_CHECK_LIB([pthread], [pthread_create])
- src/nc_core.h:99 #include <pthread.h>
- src/nc_stats.h:101     pthread_t           tid;             /* stats aggregator thread */
- src/nc_stats.c:872     status = pthread_create(&st->tid, NULL, stats_loop, st);
- src/Makefile.am:25 AM_LDFLAGS += -lm -lpthread -rdynamic

https://github.com/systemd/systemd
- src/basic/pthread-util.h:4 #include <pthread.h>
- src/libudev/libudev.pc.in:19 Libs.private: -lrt -pthread
- src/shared/async.c:75          * It is important to us that we don't use threads (via glibc pthread) in PID 1, hence we'll do a
- src/nss-systemd/nss-systemd.c:4 #include <pthread.h>
- src/basic/signal-util.c:246         r = pthread_sigmask(SIG_SETMASK, NULL, &ss);

https://github.com/openresty/openresty
- util/package-win32.sh:30     cp $mingw32/bin/libwinpthread-1.dll $name/ || exit 1

https://github.com/sumatrapdfreader/sumatrapdf
- ext/lcms2/m4/acx_pthread.m4:1 ##### http://autoconf-archive.cryp.to/acx_pthread.html
- ext/libwebp/m4/ax_pthread.m4:2 #        http://www.gnu.org/software/autoconf-archive/ax_pthread.html
- mupdf/Makerules:153   LDFLAGS += -pthread
- ext/unrar/makefile:11 LDFLAGS=-pthread
- ext/dav1d/src/mem.c:35     pthread_mutex_destroy(&pool->lock);

https://github.com/webview/webview
- examples/bind.c:9 #include <pthread.h>

https://github.com/jedisct1/libsodium
- m4/ax_pthread.m4:2 #        https://www.gnu.org/software/autoconf-archive/ax_pthread.html
- src/libsodium/sodium/core.c:9 # include <pthread.h>
- configure.ac:132 AC_ARG_WITH(pthreads, AS_HELP_STRING([--with-pthreads],
- dist-build/wasm32-wasi.sh:33   --disable-ssp --disable-shared --without-pthreads; then
- ChangeLog:276  - The pthreads library is not required any more when using MingW.

https://github.com/espressif/esp-idf
- components/newlib/pthread.c:6 #include <pthread.h>
- docs/en/api-reference/system/pthread.rst:9 ESP-IDF is based on FreeRTOS but offers a range of POSIX-compatible APIs that allow easy porting of third-party code. This includes support for common parts of the POSIX Threads ``pthread`` API.
- components/pthread/pthread_rwlock.c:9 #include <pthread.h>
- examples/system/pthread/pytest_pthread.py:10 def test_pthread(dut: Dut) -> None:
- examples/cxx/pthread/main/cpp_pthread.cpp:1 /* pthread/std::thread example

https://github.com/glfw/glfw
- src/posix_thread.h:28 #include <pthread.h>
- src/posix_thread.c:46     if (pthread_key_create(&tls->posix.key, NULL) != 0)
- deps/tinycthread.c:65   pthread_mutexattr_t attr;
- deps/tinycthread.h:40 * classes, while for other systems, the POSIX threads API (pthread) is used.

https://github.com/haiwen/seafile
- common/log.c:7 #include <pthread.h>
- configure.ac:80 AC_CHECK_LIB(pthread, pthread_create, [echo "found library pthread"], AC_MSG_ERROR([*** Unable to find pthread library]), )
- daemon/cevent.c:20     pthread_mutex_init (&manager->mutex, NULL);
- common/branch-mgr.c:81     pthread_mutex_t db_lock;
- daemon/wt-monitor-macos.c:25     pthread_mutex_t hash_lock;

https://github.com/SoftEtherVPN/SoftEtherVPN
- src/Cedar/winpcap/pthread.h:15  *      http://sources.redhat.com/pthreads-win32/contributors.html
- src/BUILD_UNIX.md:25 - POSIX threads library (pthread)
- src/Mayaqua/Network.h:20 #include <pthread.h>
- src/Cedar/BridgeUnix.c:1455 	pthread_t thread;
- src/Cedar/winpcap/sched.h:22  *      http://sources.redhat.com/pthreads-win32/contributors.html

https://github.com/EZLippi/Tinyhttpd
- httpd.c:9  *  1) Comment out the #include <pthread.h> line.
- README.md:9   1) Comment out the #include <pthread.h> line.
- Makefile:2 LIBS = -lpthread #-lsocket

https://github.com/h2o/h2o
- lib/common/cache.c:23 #include <pthread.h>
- fuzz/driver.cc:263     pthread_t twriter;
- lib/core/context.c:117     static pthread_mutex_t mutex = PTHREAD_MUTEX_INITIALIZER;
- lib/common/hostinfo.c:44     pthread_mutex_t mutex;
- lib/common/memcached.c:32     pthread_mutex_t mutex;

https://github.com/audacity/audacity
- lib-src/lv2/sord/wscript:65         if conf.check(cflags=['-pthread'], mandatory=False):
- lib-src/libsbsms/src/sms.h:7 #include "pthread.h"
- lib-src/libsbsms/src/sbsms.cpp:6 #include <pthread.h>
- lib-src/lv2/lv2/waflib/extras/boost.py:72 #include <pthread.h>
- lib-src/lv2/lv2/waflib/extras/halide.py:145 		#conf.env.LIB_HALIDE += ['ncurses', 'dl', 'pthread']

https://github.com/ImageMagick/ImageMagick
- m4/ax_pthread.m4:2 #        https://www.gnu.org/software/autoconf-archive/ax_pthread.html
- m4/Makefile.am:31   ax_pthread.m4  \
- MagickCore/mutex.h:40 static pthread_mutex_t
- MagickCore/semaphore.c:215     pthread_mutexattr_t
- Magick++/lib/Magick++/Thread.h:23 # include <pthread.h>

https://github.com/raspberrypi/linux
- tools/perf/perf.h:15 void pthread__unblock_sigwinch(void);
- Documentation/block/ublk.rst:119   pthread & io_uring for handling ublk IO), this command is sent to the
- tools/virtio/Makefile:8 CFLAGS += -pthread
- scripts/sorttable.h:104 pthread_t orc_sort_thread;
- Documentation/locking/pi-futex.rst:64 locks (such as futex-based pthread mutexes) is priority inheritance:

https://github.com/blender/blender
- build_files/build_environment/cmake/pthreads.cmake:13   set(PTHREADS_BUILD cd ${BUILD_DIR}/pthreads/src/external_pthreads/ && cd && nmake VC-static /e CPPFLAGS=${PTHREAD_CPPFLAGS})
- intern/clog/clog.c:17  * to avoid having to link with pthreads. */
- intern/cycles/util/thread.h:17 #  include <pthread.h>
- source/creator/symbols_unix.map:36   pthread_*;
- intern/cycles/util/thread.cpp:20   pthread_attr_t attribute;

https://github.com/cesanta/mongoose
- examples/multi-threaded/main.c:23 #include <pthread.h>
- Makefile:24 COMMON_CFLAGS ?= $(C_WARN) $(WARN) $(INCS) $(DEFS) -DMG_ENABLE_IPV6=$(IPV6) $(TFLAGS) -pthread
- examples/esp8266/http-client-server/src/sdkconfig:404 CONFIG_PTHREAD_TASK_NAME_DEFAULT="pthread"
- examples/multi-threaded/Makefile:17   CFLAGS += -lpthread                 # Link against POSIX threads library
- test/unit_test.c:3163 #include <pthread.h>

https://github.com/fogleman/Craft
- deps/glfw/src/mir_init.c:67     error = pthread_mutex_init(&_glfw.mir.event_mutex, NULL);
- deps/glfw/src/posix_tls.c:37     if (pthread_key_create(&_glfw.posix_tls.context, NULL) != 0)
- deps/glfw/src/posix_tls.h:31 #include <pthread.h>
- deps/glfw/deps/tinycthread.c:65   pthread_mutexattr_t attr;
- deps/glfw/deps/tinycthread.h:40 * classes, while for other systems, the POSIX threads API (pthread) is used.

https://github.com/coturn/coturn
- src/apps/relay/ns_sm.h:40 #include <pthread.h>
- src/apps/common/ns_turn_utils.c:39 #include <pthread.h>
- src/apps/relay/dbdrivers/dbdriver.c:43 static void make_connection_key(void) { (void)pthread_key_create(&connection_key, NULL); }
- src/apps/relay/CMakeLists.txt:5 check_function_exists("pthread_barrier_init" HAVE_THREAD_BARRIERS)
- ChangeLog:1095 		* pthread test fixed.

https://github.com/Tencent/wcdb
- android/jni/Mutex.h:20 #include <pthread.h>
- src/swift/util/Lock.swift:43     private var mutex = pthread_mutex_t()
- backup/mm_backup.c:24 #include <pthread.h>
- src/common/base/Thread.hpp:47            pthread_t pthreadId
- src/common/platform/CrossPlatform.h:52 #pragma mark - pthread

https://github.com/openzfs/zfs
- cmd/zed/zed_exec.c:28 #include <pthread.h>
- cmd/zed/Makefile.am:44 zed_LDFLAGS = -pthread
- lib/libzfs/libzfs.pc.in:14 Libs.private: -luutil -lm -pthread
- lib/libzpool/taskq.c:37 static pthread_key_t taskq_tsd;
- lib/libuutil/uu_avl.c:36 static pthread_mutex_t	uu_apool_list_lock = PTHREAD_MUTEX_INITIALIZER;

https://github.com/huangz1990/redis-3.0-annotated
- src/bio.c:90 static pthread_t bio_threads[REDIS_BIO_NUM_OPS];
- src/zmalloc.c:43 #include <pthread.h>
- src/Makefile:61 	FINAL_LIBS+= -ldl -lnsl -lsocket -lpthread
- src/redis.h:48 #include <pthread.h>
- deps/jemalloc/src/mutex.c:24 static void	pthread_create_once(void);

https://github.com/cockpit-project/cockpit
- src/tls/server.c:28 #include <pthread.h>
- src/tls/httpredirect.c:25 #include <pthread.h>
- src/Makefile.am:57 	-pthread \
- src/tls/socket-activation-helper.c:25 #include <pthread.h>
- src/tls/connection.c:32 #include <pthread.h>

https://github.com/FreeRDP/FreeRDP
- winpr/CMakeLists.txt:244 		CHECK_LIBRARY_EXISTS(pthreads pthread_mutex_timedlock "" WINPR_HAVE_PTHREAD_MUTEX_TIMEDLOCK_LIBS)
- server/Mac/mf_info.c:35 	int status = pthread_mutex_lock(&mfi->mutex);
- server/Mac/mf_types.h:24 #include <pthread.h>
- server/Mac/mf_event.c:91 	pthread_mutex_lock(&(event_queue->mutex));
- winpr/libwinpr/thread/apc.h:28 #include <pthread.h>

https://github.com/OpenVPN/openvpn
- src/openvpn/errlevel.h:181 /*#define D_THREAD_DEBUG       LOGLEV(4, 70, M_DEBUG)*/  /* show pthread debug information */

https://github.com/libgit2/libgit2
- src/util/unix/pthread.h:8 #ifndef INCLUDE_unix_pthread_h__
- src/util/thread.c:111 	if (pthread_key_create(key, destroy_fn) != 0)
- examples/CMakeLists.txt:17 	target_link_libraries(lg2 libgit2package pthread)
- src/util/runtime.c:88  * pthread_spinlock_t.
- src/util/thread.h:74 #   include "unix/pthread.h"

