https://github.com/Genymobile/scrcpy
- app/src/sys/unix/process.c:138         // https://github.com/libsdl-org/SDL/blob/release-2.0.18/src/thread/pthread/SDL_systhread.c#L167

https://github.com/netdata/netdata
- build/m4/ax_pthread.m4:2 #        https://www.gnu.org/software/autoconf-archive/ax_pthread.html
- build/m4/ax_pthread.m4:40 #   Also HAVE_PTHREAD_PRIO_INHERIT is defined if pthread is found and the
- build/m4/ax_pthread.m4:52 #   from M. Frigo), as well as ac_pthread and hb_pthread macros posted by
- build/m4/ax_pthread.m4:98 ax_pthread_ok=no
- build/m4/ax_pthread.m4:100 # We used to check for pthread.h first, but this fails if pthread.h

https://github.com/redis/redis
- src/bio.c:81 static pthread_t bio_threads[BIO_WORKER_NUM];
- src/bio.c:82 static pthread_mutex_t bio_mutex[BIO_WORKER_NUM];
- src/bio.c:83 static pthread_cond_t bio_newjob_cond[BIO_WORKER_NUM];
- src/bio.c:120     pthread_attr_t attr;
- src/bio.c:121     pthread_t thread;

https://github.com/ventoy/Ventoy
- ExFAT/buidexfat.sh:32 ./configure --prefix="$CUR" CFLAGS='-static -O2 -D_FILE_OFFSET_BITS=64' FUSE_CFLAGS="-I$CUR/LIBFUSE/include/" FUSE_LIBS="$CUR/LIBFUSE/lib/libfuse.a -pthread $opt -ldl"
- ExFAT/buidexfat.sh:50 ./configure --prefix="$CUR" CFLAGS='-O2 -D_FILE_OFFSET_BITS=64' FUSE_CFLAGS="-I$CUR/LIBFUSE/include/" FUSE_LIBS="$CUR/LIBFUSE/lib/libfuse.a -lpthread -ldl $opt"
- LinuxGUI/build.sh:43         -l pthread \
- Plugson/src/Core/ventoy_log.c:30 static pthread_mutex_t g_log_mutex;
- Plugson/src/Core/ventoy_log.c:43     pthread_mutex_init(&g_log_mutex, NULL);

https://github.com/obsproject/obs-studio
- libobs/obs-view.c:26 	pthread_mutex_init_value(&view->channels_mutex);
- libobs/obs-view.c:28 	if (pthread_mutex_init(&view->channels_mutex, NULL) != 0) {
- libobs/obs-view.c:62 	pthread_mutex_destroy(&view->channels_mutex);
- libobs/obs-view.c:83 	pthread_mutex_lock(&view->channels_mutex);
- libobs/obs-view.c:85 	pthread_mutex_unlock(&view->channels_mutex);

https://github.com/git/git
- compat/win32/pthread.h:2  * Header used to adapt pthread-based POSIX code to Windows API threads.
- compat/win32/pthread.h:17  * Defines that adapt Windows API threads to pthreads API
- compat/win32/pthread.h:19 #define pthread_mutex_t CRITICAL_SECTION
- compat/win32/pthread.h:24 #define pthread_mutex_init(a,b) return_0((InitializeCriticalSection((a)), 0))
- compat/win32/pthread.h:25 #define pthread_mutex_destroy(a) DeleteCriticalSection((a))

https://github.com/ggerganov/llama.cpp
- README.md:128 I CFLAGS:   -I.            -O3 -std=c11   -fPIC -DNDEBUG -Wall -Wextra -Wpedantic -Wcast-qual -Wdouble-promotion -Wshadow -Wstrict-prototypes -Wpointer-arith -Wmissing-prototypes -pthread -DGGML_USE_K_QUANTS -DGGML_USE_ACCELERATE
- README.md:129 I CXXFLAGS: -I. -I./common -O3 -std=c++11 -fPIC -DNDEBUG -Wall -Wextra -Wpedantic -Wcast-qual -Wno-unused-function -Wno-multichar -pthread -DGGML_USE_K_QUANTS
- Makefile:250 	MK_CFLAGS   += -pthread
- Makefile:251 	MK_CXXFLAGS += -pthread
- Makefile:391 	MK_LDFLAGS   += -lcublas -lculibos -lcudart -lcublasLt -lpthread -ldl -lrt -L/usr/local/cuda/lib64 -L/opt/cuda/lib64 -L$(CUDA_PATH)/targets/x86_64-linux/lib

https://github.com/FFmpeg/FFmpeg
- libavcodec/pthread.c:36 #include "pthread_internal.h"
- libavcodec/pthread.c:91 av_cold void ff_pthread_free(void *obj, const unsigned offsets[])
- libavcodec/pthread.c:99         pthread_mutex_destroy((pthread_mutex_t*)((char*)obj + *cur_offset));
- libavcodec/pthread.c:101         pthread_cond_destroy ((pthread_cond_t *)((char*)obj + *cur_offset));
- libavcodec/pthread.c:104 av_cold int ff_pthread_init(void *obj, const unsigned offsets[])

https://github.com/wg/wrk
- src/ssl.c:3 #include <pthread.h>
- src/atomicvar.h:16  *  pthread_mutex_t myvar_mutex;
- src/atomicvar.h:60 #include <pthread.h>
- src/atomicvar.h:102 /* Implementation using pthread mutex. */
- src/atomicvar.h:105     pthread_mutex_lock(&var ## _mutex); \

https://github.com/bilibili/ijkplayer
- ijkmedia/ijksdl/ijksdl_mutex.h:29 #include <pthread.h>
- ijkmedia/ijksdl/ijksdl_mutex.h:35     pthread_mutex_t id;
- ijkmedia/ijksdl/ijksdl_mutex.h:45     pthread_cond_t id;
- ijkmedia/ijksdl/ijksdl_mutex.c:38     if (pthread_mutex_init(&mutex->id, NULL) != 0) {
- ijkmedia/ijksdl/ijksdl_mutex.c:49         pthread_mutex_destroy(&mutex->id);

https://github.com/coolsnowwolf/lede
- include/site/linux:32 ac_cv_func_pthread_key_delete=yes
- package/wwan/app/fibocom-dial/src/util.c:19 static pthread_mutex_t printfMutex = PTHREAD_MUTEX_INITIALIZER;
- package/wwan/app/fibocom-dial/src/util.c:31        pthread_cond_timedwait just turns around and makes this
- package/wwan/app/fibocom-dial/src/util.c:37 int pthread_cond_timeout_np(pthread_cond_t *cond, pthread_mutex_t *mutex,
- package/wwan/app/fibocom-dial/src/util.c:43 	return pthread_cond_timedwait(cond, mutex, &ts);

https://github.com/jqlang/jq
- m4/ax_pthread.m4:2 #        https://www.gnu.org/software/autoconf-archive/ax_pthread.html
- m4/ax_pthread.m4:40 #   Also HAVE_PTHREAD_PRIO_INHERIT is defined if pthread is found and the
- m4/ax_pthread.m4:52 #   from M. Frigo), as well as ac_pthread and hb_pthread macros posted by
- m4/ax_pthread.m4:98 ax_pthread_ok=no
- m4/ax_pthread.m4:100 # We used to check for pthread.h first, but this fails if pthread.h

https://github.com/ggerganov/whisper.cpp
- Makefile:98 	CFLAGS   += -pthread
- Makefile:99 	CXXFLAGS += -pthread
- Makefile:209 	LDFLAGS     += -lcublas -lculibos -lcudart -lcublasLt -lpthread -ldl -lrt -L/usr/local/cuda/lib64 -L/opt/cuda/lib64 -L$(CUDA_PATH)/targets/$(UNAME_M)-linux/lib
- README.md:96 cc  -I.              -O3 -std=c11   -pthread -DGGML_USE_ACCELERATE   -c ggml.c -o ggml.o
- README.md:97 c++ -I. -I./examples -O3 -std=c++11 -pthread -c whisper.cpp -o whisper.o

https://github.com/ggreer/the_silver_searcher
- m4/ax_pthread.m4:2 #        http://www.gnu.org/software/autoconf-archive/ax_pthread.html
- m4/ax_pthread.m4:36 #   Also HAVE_PTHREAD_PRIO_INHERIT is defined if pthread is found and the
- m4/ax_pthread.m4:48 #   from M. Frigo), as well as ac_pthread and hb_pthread macros posted by
- m4/ax_pthread.m4:91 ax_pthread_ok=no
- m4/ax_pthread.m4:93 # We used to check for pthread.h first, but this fails if pthread.h

https://github.com/pbatard/rufus
- src/ext2fs/config.h:78 /* Define to 1 if you have the <pthread.h> header file. */
- src/ext2fs/config.h:81 /* Define if the <pthread.h> defines PTHREAD_MUTEX_RECURSIVE. */

https://github.com/pjreddie/darknet
- src/demo.c:199     pthread_t detect_thread;
- src/demo.c:200     pthread_t fetch_thread;
- src/demo.c:237         if(pthread_create(&fetch_thread, 0, fetch_in_thread, 0)) error("Thread creation failed");
- src/demo.c:238         if(pthread_create(&detect_thread, 0, detect_in_thread, 0)) error("Thread creation failed");
- src/demo.c:248         pthread_join(fetch_thread, 0);

https://github.com/openssl/openssl
- crypto/threads_pthread.c:50     if ((lock = CRYPTO_zalloc(sizeof(pthread_rwlock_t), NULL, 0)) == NULL)
- crypto/threads_pthread.c:54     if (pthread_rwlock_init(lock, NULL) != 0) {
- crypto/threads_pthread.c:59     pthread_mutexattr_t attr;
- crypto/threads_pthread.c:62     if ((lock = CRYPTO_zalloc(sizeof(pthread_mutex_t), NULL, 0)) == NULL)
- crypto/threads_pthread.c:69     pthread_mutexattr_init(&attr);

https://github.com/libuv/libuv
- m4/ax_pthread.m4:2 #        https://www.gnu.org/software/autoconf-archive/ax_pthread.html
- m4/ax_pthread.m4:36 #   Also HAVE_PTHREAD_PRIO_INHERIT is defined if pthread is found and the
- m4/ax_pthread.m4:48 #   from M. Frigo), as well as ac_pthread and hb_pthread macros posted by
- m4/ax_pthread.m4:93 ax_pthread_ok=no
- m4/ax_pthread.m4:95 # We used to check for pthread.h first, but this fails if pthread.h

https://github.com/taosdata/TDengine
- cmake/pthread_CMakeLists.txt.in:2 # pthread
- cmake/pthread_CMakeLists.txt.in:3 ExternalProject_Add(pthread
- cmake/pthread_CMakeLists.txt.in:4         GIT_REPOSITORY https://github.com/GerHobbelt/pthread-win32
- cmake/pthread_CMakeLists.txt.in:6         SOURCE_DIR "${TD_CONTRIB_DIR}/pthread"
- utils/TSZ/zstd/README.md:75 - on POSIX systems : compile with pthread (`-pthread` compilation flag for `gcc`)

https://github.com/robertdavidgraham/masscan
- src/pixie-threads.c:11 #include <pthread.h>
- src/pixie-threads.c:41     pthread_t thread = pthread_self();
- src/pixie-threads.c:42     pthread_attr_t thAttr;
- src/pixie-threads.c:46     pthread_attr_init(&thAttr);
- src/pixie-threads.c:47     pthread_attr_getschedpolicy(&thAttr, &policy);

https://github.com/facebook/zstd
- lib/common/pool.c:26 #include "threading.h"   /* pthread adaptation */
- lib/common/pool.c:37     ZSTD_pthread_t* threads;
- lib/common/pool.c:53     ZSTD_pthread_mutex_t queueMutex;
- lib/common/pool.c:55     ZSTD_pthread_cond_t queuePushCond;
- lib/common/pool.c:57     ZSTD_pthread_cond_t queuePopCond;

https://github.com/arendst/Tasmota
- lib/lib_rf/RF24/utility/RPi/spi.cpp:2 #include <pthread.h>
- lib/lib_rf/RF24/utility/RPi/spi.cpp:5 static pthread_mutex_t spiMutex = PTHREAD_MUTEX_INITIALIZER;
- lib/lib_rf/RF24/utility/RPi/spi.cpp:26 	pthread_mutex_lock (&spiMutex);
- lib/lib_rf/RF24/utility/RPi/spi.cpp:33 	pthread_mutex_unlock (&spiMutex);
- lib/lib_rf/RF24/utility/RPi/interrupt.c:22 #include <pthread.h>

https://github.com/Awesome-HarmonyOS/HarmonyOS
- Huawei_LiteOS/components/security/mbedtls/mbedtls-2.6.0/programs/ssl/ssl_pthread_server.c:2  *  SSL server demonstration program using pthread for handling multiple
- Huawei_LiteOS/components/security/mbedtls/mbedtls-2.6.0/programs/ssl/ssl_pthread_server.c:95     long int thread_id = (long int) pthread_self();
- Huawei_LiteOS/components/security/mbedtls/mbedtls-2.6.0/programs/ssl/ssl_pthread_server.c:116     pthread_t       thread;
- Huawei_LiteOS/components/security/mbedtls/mbedtls-2.6.0/programs/ssl/ssl_pthread_server.c:117 } pthread_info_t;
- Huawei_LiteOS/components/security/mbedtls/mbedtls-2.6.0/programs/ssl/ssl_pthread_server.c:120 static pthread_info_t   threads[MAX_NUM_THREADS];

https://github.com/koekeishiya/yabai
- src/manifest.m:30 #include <pthread.h>
- src/event_loop.h:66     pthread_t thread;
- src/osax/loader.m:31 "\x48\xB8"                         // movabs     rax, pthread_create_from_mach_thread
- src/osax/loader.m:64 "\x49\x01\x00\x10"                 // adr        x9, #0x28 ; pthread_create_from_mach_thread
- src/osax/loader.m:163     uint64_t pcfmt_address = (uint64_t) dlsym(RTLD_DEFAULT, "pthread_create_from_mach_thread");

https://github.com/hashcat/hashcat
- src/affinity.c:28 static int pthread_setaffinity_np (pthread_t thread, size_t cpu_size, cpu_set_t *cpu_set)
- src/affinity.c:39   return thread_policy_set (pthread_mach_thread_np (thread), THREAD_AFFINITY_POLICY, (thread_policy_t) &policy, 1);
- src/affinity.c:44 #include <pthread_np.h>
- src/affinity.c:49 #include <pthread.h>
- src/affinity.c:159   pthread_t thread = pthread_self ();

https://github.com/iovisor/bcc
- tools/tplist_example.txt:36 $ tplist -l pthread     # list probes in libpthread
- tools/tplist_example.txt:37 /lib64/libpthread.so.0 libpthread:pthread_start
- tools/tplist_example.txt:38 /lib64/libpthread.so.0 libpthread:pthread_create
- tools/tplist_example.txt:39 /lib64/libpthread.so.0 libpthread:pthread_join
- tools/tplist_example.txt:40 /lib64/libpthread.so.0 libpthread:pthread_join_ret

https://github.com/kingToolbox/WindTerm
- src/libssh/src/threads/pthread.c:28 #include <pthread.h>
- src/libssh/src/threads/pthread.c:30 static int ssh_pthread_mutex_init (void **mutex)
- src/libssh/src/threads/pthread.c:38     *mutex = malloc(sizeof(pthread_mutex_t));
- src/libssh/src/threads/pthread.c:43     rc = pthread_mutex_init ((pthread_mutex_t *)*mutex, NULL);
- src/libssh/src/threads/pthread.c:52 static int ssh_pthread_mutex_destroy (void **mutex)

https://github.com/micropython/micropython
- ports/unix/mpthreadport.h:27 #include <pthread.h>
- ports/unix/mpthreadport.h:30 typedef pthread_mutex_t mp_thread_mutex_t;
- ports/unix/mpthreadport.c:32 #include "py/mpthread.h"
- ports/unix/mpthreadport.c:57     pthread_t id;           // system id of thread
- ports/unix/mpthreadport.c:63 STATIC pthread_key_t tls_key;

https://github.com/jarun/nnn
- src/nnn.c:84 #include <pthread.h>
- src/nnn.c:480 /* pthread related */
- src/nnn.c:487 static pthread_mutex_t running_mutex = PTHREAD_MUTEX_INITIALIZER;
- src/nnn.c:488 static pthread_mutex_t hardlink_mutex = PTHREAD_MUTEX_INITIALIZER;
- src/nnn.c:926 	pthread_mutex_lock(&hardlink_mutex);

https://github.com/openwrt/openwrt
- toolchain/gcc/patches-11.x/701-riscv-linux-Don-t-add-latomic-with-pthread.patch:4 Subject: [PATCH] riscv/linux: Don't add -latomic with -pthread
- toolchain/gcc/patches-11.x/701-riscv-linux-Don-t-add-latomic-with-pthread.patch:10 The use of atomic operations is also independent of the use of libpthread.
- toolchain/gcc/patches-11.x/701-riscv-linux-Don-t-add-latomic-with-pthread.patch:29 -  " %{pthread:" LD_AS_NEEDED_OPTION " -latomic " LD_NO_AS_NEEDED_OPTION "}"
- toolchain/gcc/patches-11.x/701-riscv-linux-Don-t-add-latomic-with-pthread.patch:36  #define CPP_SPEC "%{pthread:-D_REENTRANT}"
- include/site/linux:32 ac_cv_func_pthread_key_delete=yes

https://github.com/raysan5/raylib
- examples/CMakeLists.txt:35         add_if_flag_compiles("-pthread" CMAKE_C_FLAGS)
- examples/CMakeLists.txt:62     # Items requiring pthreads
- examples/core/core_loading_thread.c:5 *   NOTE: This example requires linking with pthreads library on MinGW, 
- examples/core/core_loading_thread.c:19 #include "pthread.h"                        // POSIX style threads management
- examples/core/core_loading_thread.c:44     pthread_t threadId = { 0 };     // Loading data thread id

https://github.com/ish-app/ish
- util/sync.c:9     pthread_condattr_t attr;
- util/sync.c:10     pthread_condattr_init(&attr);
- util/sync.c:12     pthread_condattr_setclock(&attr, CLOCK_MONOTONIC);
- util/sync.c:14     pthread_cond_init(&cond->cond, &attr);
- util/sync.c:17     pthread_cond_destroy(&cond->cond);

https://github.com/HandBrake/HandBrake
- contrib/libvpx/A01-pthreads.patch:12 -	$(qexec)echo 'Libs.private: -lm -lpthread' >> $@
- contrib/libvpx/A01-pthreads.patch:13 +	$(qexec)echo 'Libs: -L$${libdir} -lvpx -lm -lpthread' >> $@
- libhb/qsv_libav.c:203             qsv->qts_seq_mutex = av_mallocz(sizeof(pthread_mutex_t));
- libhb/qsv_libav.c:205                 mut_ret = pthread_mutex_init(qsv->qts_seq_mutex, NULL);
- libhb/qsv_libav.c:207                     hb_log("QSV: pthread_mutex_init issue[%d] at %s", mut_ret, __FUNCTION__);

https://github.com/lvgl/lvgl
- src/osal/lv_pthread.h:2  * @file lv_pthread.h
- src/osal/lv_pthread.h:18 #include <pthread.h>
- src/osal/lv_pthread.h:30     pthread_t thread;
- src/osal/lv_pthread.h:35 typedef pthread_mutex_t lv_mutex_t;
- src/osal/lv_pthread.h:38     pthread_mutex_t mutex;

https://github.com/reactos/reactos
- sdk/include/c++/stlport/pthread.h:24 #  include "/usr/include/pthread.h"
- sdk/include/c++/stlport/pthread.h:27 #    include_next <pthread.h>
- sdk/include/c++/stlport/pthread.h:29 #    include _STLP_NATIVE_C_HEADER(pthread.h)
- sdk/include/c++/stlport/pthread_alloc:38 # include <stl/_pthread_alloc.h>
- sdk/include/c++/stlport/stl/_pthread_alloc.h:93 typedef _STLP_PRIV _Pthread_alloc __pthread_alloc;

https://github.com/swaywm/sway
- sway/realtime.c:4 #include <pthread.h>
- sway/realtime.c:13 	int ret = pthread_setschedparam(pthread_self(), SCHED_OTHER, &param);
- sway/realtime.c:25 	ret = pthread_getschedparam(pthread_self(), &old_policy, &param);
- sway/realtime.c:33 	ret = pthread_setschedparam(pthread_self(), SCHED_RR, &param);
- sway/realtime.c:39 	pthread_atfork(NULL, NULL, child_fork_callback);

https://github.com/jart/cosmopolitan
- libc/intrin/pthread_tid.c:23 int _pthread_tid(struct PosixThread *pt) {
- libc/intrin/pthread_tid.c:26     pthread_pause_np();
- libc/calls/pthread_yield.c:30 int pthread_yield(void) {
- libc/calls/pthread_yield.c:32     __syslib->__pthread_yield_np();
- libc/calls/pthread_yield.c:34     pthread_pause_np();  // sched_yield() is punishingly slow on OpenBSD

https://github.com/alibaba/tengine
- auto/lib/perl/conf:55         # FreeBSD port wants to link with -pthread non-threaded perl
- auto/lib/perl/conf:56         ngx_perl_ldopts=`echo $ngx_perl_ldopts | sed 's/ -pthread//'`
- src/os/unix/ngx_thread.h:17 #include <pthread.h>
- src/os/unix/ngx_thread.h:20 typedef pthread_mutex_t  ngx_thread_mutex_t;
- src/os/unix/ngx_thread.h:28 typedef pthread_cond_t  ngx_thread_cond_t;

https://github.com/cloudwu/skynet
- Makefile:110 	$(CC) $(CFLAGS) $(SHARED) $^ -o $@ -lpthread
- skynet-src/rwlock.h:50 #include <pthread.h>
- skynet-src/rwlock.h:53 // todo: check the result of pthread api
- skynet-src/rwlock.h:56 	pthread_rwlock_t lock;
- skynet-src/rwlock.h:61 	pthread_rwlock_init(&lock->lock, NULL);

https://github.com/ExistentialAudio/BlackHole
- BlackHole/BlackHole.c:18 #include <pthread.h>
- BlackHole/BlackHole.c:244 static pthread_mutex_t              gPlugIn_StateMutex                  = PTHREAD_MUTEX_INITIALIZER;
- BlackHole/BlackHole.c:257 static pthread_mutex_t              gDevice_IOMutex                     = PTHREAD_MUTEX_INITIALIZER;
- BlackHole/BlackHole.c:653 		pthread_mutex_lock(&gPlugIn_StateMutex);
- BlackHole/BlackHole.c:655 		pthread_mutex_unlock(&gPlugIn_StateMutex);

https://github.com/videolan/vlc
- contrib/src/pthread-stubs/rules.mak:2 PTHREAD_STUBS_URL := https://xcb.freedesktop.org/dist/libpthread-stubs-$(PTHREAD_STUBS_VERSION).tar.bz2
- contrib/src/pthread-stubs/rules.mak:4 $(TARBALLS)/libpthread-stubs-$(PTHREAD_STUBS_VERSION).tar.bz2:
- contrib/src/pthread-stubs/rules.mak:5 	$(call download_pkg,$(PTHREAD_STUBS_URL),pthreads)
- contrib/src/pthread-stubs/rules.mak:7 .sum-pthread-stubs: libpthread-stubs-$(PTHREAD_STUBS_VERSION).tar.bz2
- contrib/src/pthread-stubs/rules.mak:9 libpthread-stubs: libpthread-stubs-$(PTHREAD_STUBS_VERSION).tar.bz2 .sum-pthread-stubs

https://github.com/twitter/twemproxy
- configure.ac:77 AC_CHECK_LIB([pthread], [pthread_create])
- src/nc_core.h:99 #include <pthread.h>
- src/nc_stats.h:101     pthread_t           tid;             /* stats aggregator thread */
- src/nc_stats.c:872     status = pthread_create(&st->tid, NULL, stats_loop, st);
- src/nc_stats.c:917     st->tid = (pthread_t) -1;

https://github.com/systemd/systemd
- src/basic/pthread-util.h:4 #include <pthread.h>
- src/basic/pthread-util.h:8 static inline pthread_mutex_t* pthread_mutex_lock_assert(pthread_mutex_t *mutex) {
- src/basic/pthread-util.h:9         assert_se(pthread_mutex_lock(mutex) == 0);
- src/basic/pthread-util.h:13 static inline void pthread_mutex_unlock_assertp(pthread_mutex_t **mutexp) {
- src/basic/pthread-util.h:15                 assert_se(pthread_mutex_unlock(*mutexp) == 0);

https://github.com/openresty/openresty
- util/package-win32.sh:30     cp $mingw32/bin/libwinpthread-1.dll $name/ || exit 1

https://github.com/sumatrapdfreader/sumatrapdf
- ext/lcms2/m4/acx_pthread.m4:1 ##### http://autoconf-archive.cryp.to/acx_pthread.html
- ext/lcms2/m4/acx_pthread.m4:44 #   (with help from M. Frigo), as well as ac_pthread and hb_pthread
- ext/lcms2/m4/acx_pthread.m4:91 acx_pthread_ok=no
- ext/lcms2/m4/acx_pthread.m4:93 # We used to check for pthread.h first, but this fails if pthread.h
- ext/lcms2/m4/acx_pthread.m4:105         AC_MSG_CHECKING([for pthread_join in LIBS=$PTHREAD_LIBS with CFLAGS=$PTHREAD_CFLAGS])

https://github.com/webview/webview
- examples/bind.c:9 #include <pthread.h>
- examples/bind.c:28   pthread_t thread;
- examples/bind.c:29   int error = pthread_create(&thread, NULL, start_routine, arg);
- examples/bind.c:31     pthread_detach(thread);

https://github.com/espressif/esp-idf
- components/newlib/pthread.c:6 #include <pthread.h>
- components/newlib/pthread.c:9 const static char *TAG = "esp32_asio_pthread";
- components/newlib/pthread.c:11 int pthread_setcancelstate(int state, int *oldstate)
- components/newlib/pthread.c:16 //  This functions (pthread_sigmask(), sigfillset) are called from ASIO::signal_blocker to temporarily silence signals
- components/newlib/pthread.c:17 //  Since signals are not yet supported in ESP pthread these functions serve as no-ops

https://github.com/glfw/glfw
- src/posix_thread.h:28 #include <pthread.h>
- src/posix_thread.h:39     pthread_key_t   key;
- src/posix_thread.h:47     pthread_mutex_t handle;
- src/posix_thread.c:46     if (pthread_key_create(&tls->posix.key, NULL) != 0)
- src/posix_thread.c:60         pthread_key_delete(tls->posix.key);

https://github.com/haiwen/seafile
- common/log.c:7 #include <pthread.h>
- common/log.c:250 static pthread_mutex_t event_lock = PTHREAD_MUTEX_INITIALIZER;
- common/log.c:292     pthread_mutex_lock (&event_lock);
- common/log.c:298     pthread_mutex_unlock (&event_lock);
- configure.ac:80 AC_CHECK_LIB(pthread, pthread_create, [echo "found library pthread"], AC_MSG_ERROR([*** Unable to find pthread library]), )

https://github.com/SoftEtherVPN/SoftEtherVPN
- src/Cedar/winpcap/pthread.h:15  *      http://sources.redhat.com/pthreads-win32/contributors.html
- src/Cedar/winpcap/pthread.h:66 #   pragma comment(lib, "pthread")
- src/Cedar/winpcap/pthread.h:73  * Module: pthread.h
- src/Cedar/winpcap/pthread.h:137  *		http://sources.redhat.com/pthreads-win32/
- src/Cedar/winpcap/pthread.h:145  * FIXME: The pthreadGCE.dll build gets linker unresolved errors

https://github.com/EZLippi/Tinyhttpd
- httpd.c:9  *  1) Comment out the #include <pthread.h> line.
- httpd.c:11  *  3) Comment out the two lines that run pthread_create().
- httpd.c:25 #include <pthread.h>
- httpd.c:496     pthread_t newthread;
- httpd.c:509         if (pthread_create(&newthread , NULL, (void *)accept_request, (void *)(intptr_t)client_sock) != 0)

https://github.com/h2o/h2o
- lib/common/cache.c:23 #include <pthread.h>
- lib/common/cache.c:44     pthread_mutex_t mutex; /* only used if (flags & H2O_CACHE_FLAG_MULTITHREADED) != 0 */
- lib/common/cache.c:60         pthread_mutex_lock(&cache->mutex);
- lib/common/cache.c:66         pthread_mutex_unlock(&cache->mutex);
- lib/common/cache.c:126         pthread_mutex_init(&cache->mutex, NULL);

https://github.com/audacity/audacity
- lib-src/lv2/sord/wscript:65         if conf.check(cflags=['-pthread'], mandatory=False):
- lib-src/lv2/sord/wscript:66             conf.env.PTHREAD_CFLAGS    = ['-pthread']
- lib-src/lv2/sord/wscript:68                 conf.env.PTHREAD_LINKFLAGS = ['-pthread']
- lib-src/lv2/sord/wscript:69         elif conf.check(linkflags=['-lpthread'], mandatory=False):
- lib-src/lv2/sord/wscript:71             conf.env.PTHREAD_LINKFLAGS = ['-lpthread']

https://github.com/ImageMagick/ImageMagick
- m4/ax_pthread.m4:2 #        https://www.gnu.org/software/autoconf-archive/ax_pthread.html
- m4/ax_pthread.m4:40 #   Also HAVE_PTHREAD_PRIO_INHERIT is defined if pthread is found and the
- m4/ax_pthread.m4:52 #   from M. Frigo), as well as ac_pthread and hb_pthread macros posted by
- m4/ax_pthread.m4:98 ax_pthread_ok=no
- m4/ax_pthread.m4:100 # We used to check for pthread.h first, but this fails if pthread.h

https://github.com/raspberrypi/linux
- tools/perf/perf.h:15 void pthread__unblock_sigwinch(void);
- Documentation/block/ublk.rst:119   pthread & io_uring for handling ublk IO), this command is sent to the
- Documentation/block/ublk.rst:126   ublk server will release resources (such as destroying per-queue pthread &
- Documentation/block/ublk.rst:140   pthread and try to allocate buffers in IO thread context.
- Documentation/block/ublk.rst:186 ublk server needs to create per-queue IO pthread & io_uring for handling IO

https://github.com/blender/blender
- build_files/build_environment/cmake/pthreads.cmake:13   set(PTHREADS_BUILD cd ${BUILD_DIR}/pthreads/src/external_pthreads/ && cd && nmake VC-static /e CPPFLAGS=${PTHREAD_CPPFLAGS})
- build_files/build_environment/cmake/pthreads.cmake:15   ExternalProject_Add(external_pthreads
- build_files/build_environment/cmake/pthreads.cmake:19     PREFIX ${BUILD_DIR}/pthreads
- build_files/build_environment/cmake/pthreads.cmake:21     PATCH_COMMAND COMMAND ${PATCH_CMD} -p 1 -d ${BUILD_DIR}/pthreads/src/external_pthreads < ${PATCH_DIR}/pthreads.diff
- build_files/build_environment/cmake/pthreads.cmake:24       ${CMAKE_COMMAND} -E copy ${BUILD_DIR}/pthreads/src/external_pthreads/libpthreadVC3${LIBEXT} ${LIBDIR}/pthreads/lib/pthreadVC3${LIBEXT} &&

https://github.com/cesanta/mongoose
- examples/multi-threaded/main.c:23 #include <pthread.h>
- examples/multi-threaded/main.c:24   pthread_t thread_id = (pthread_t) 0;
- examples/multi-threaded/main.c:25   pthread_attr_t attr;
- examples/multi-threaded/main.c:26   (void) pthread_attr_init(&attr);
- examples/multi-threaded/main.c:27   (void) pthread_attr_setdetachstate(&attr, PTHREAD_CREATE_DETACHED);

https://github.com/fogleman/Craft
- deps/glfw/src/mir_init.c:67     error = pthread_mutex_init(&_glfw.mir.event_mutex, NULL);
- deps/glfw/src/mir_init.c:86     pthread_mutex_destroy(&_glfw.mir.event_mutex);
- deps/glfw/src/posix_tls.c:37     if (pthread_key_create(&_glfw.posix_tls.context, NULL) != 0)
- deps/glfw/src/posix_tls.c:49     pthread_key_delete(_glfw.posix_tls.context);
- deps/glfw/src/posix_tls.c:54     pthread_setspecific(_glfw.posix_tls.context, context);

https://github.com/coturn/coturn
- src/apps/relay/ns_sm.h:40 #include <pthread.h>
- src/apps/common/ns_turn_utils.c:39 #include <pthread.h>
- src/apps/common/ns_turn_utils.c:85     ret = pthread_mutex_lock((pthread_mutex_t *)mutex->mutex);
- src/apps/common/ns_turn_utils.c:99     ret = pthread_mutex_unlock((pthread_mutex_t *)mutex->mutex);
- src/apps/common/ns_turn_utils.c:113     mutex->mutex = malloc(sizeof(pthread_mutex_t));

https://github.com/Tencent/wcdb
- android/jni/Mutex.h:20 #include <pthread.h>
- android/jni/Mutex.h:74     pthread_mutex_t mMutex;
- android/jni/Mutex.h:81     pthread_mutex_init(&mMutex, NULL);
- android/jni/Mutex.h:86     pthread_mutex_init(&mMutex, NULL);
- android/jni/Mutex.h:92         pthread_mutexattr_t attr;

https://github.com/openzfs/zfs
- cmd/zed/zed_exec.c:28 #include <pthread.h>
- cmd/zed/zed_exec.c:64 static pthread_t _reap_children_tid = (pthread_t)-1;
- cmd/zed/zed_exec.c:67 static pthread_mutex_t _launched_processes_lock = PTHREAD_MUTEX_INITIALIZER;
- cmd/zed/zed_exec.c:147 	(void) pthread_mutex_lock(&_launched_processes_lock);
- cmd/zed/zed_exec.c:150 		(void) pthread_mutex_unlock(&_launched_processes_lock);

https://github.com/huangz1990/redis-3.0-annotated
- src/bio.c:90 static pthread_t bio_threads[REDIS_BIO_NUM_OPS];
- src/bio.c:91 static pthread_mutex_t bio_mutex[REDIS_BIO_NUM_OPS];
- src/bio.c:92 static pthread_cond_t bio_condvar[REDIS_BIO_NUM_OPS];
- src/bio.c:140     pthread_attr_t attr;
- src/bio.c:141     pthread_t thread;

https://github.com/cockpit-project/cockpit
- src/tls/server.c:28 #include <pthread.h>
- src/tls/server.c:51   pthread_mutex_t connection_mutex;
- src/tls/server.c:96     pthread_mutex_lock (&server.connection_mutex);
- src/tls/server.c:108     pthread_mutex_unlock (&server.connection_mutex);
- src/tls/server.c:123   pthread_attr_t attr;

https://github.com/FreeRDP/FreeRDP
- winpr/CMakeLists.txt:244 		CHECK_LIBRARY_EXISTS(pthreads pthread_mutex_timedlock "" WINPR_HAVE_PTHREAD_MUTEX_TIMEDLOCK_LIBS)
- winpr/CMakeLists.txt:248 		CHECK_LIBRARY_EXISTS(pthread pthread_mutex_timedlock "" WINPR_HAVE_PTHREAD_MUTEX_TIMEDLOCK_LIB)
- winpr/CMakeLists.txt:251 	list(APPEND CMAKE_REQUIRED_LIBRARIES pthread)
- winpr/CMakeLists.txt:252 	CHECK_SYMBOL_EXISTS(pthread_mutex_timedlock pthread.h WINPR_HAVE_PTHREAD_MUTEX_TIMEDLOCK_SYMBOL)
- winpr/CMakeLists.txt:257 	list(REMOVE_ITEM CMAKE_REQUIRED_LIBRARIES pthread)

https://github.com/OpenVPN/openvpn
- src/openvpn/errlevel.h:181 /*#define D_THREAD_DEBUG       LOGLEV(4, 70, M_DEBUG)*/  /* show pthread debug information */

https://github.com/libgit2/libgit2
- src/util/unix/pthread.h:8 #ifndef INCLUDE_unix_pthread_h__
- src/util/unix/pthread.h:9 #define INCLUDE_unix_pthread_h__
- src/util/unix/pthread.h:12 	pthread_t thread;
- src/util/unix/pthread.h:18 	pthread_create(&(git_thread_ptr)->thread, NULL, start_routine, arg)
- src/util/unix/pthread.h:20 	pthread_join((git_thread_ptr)->thread, status)

