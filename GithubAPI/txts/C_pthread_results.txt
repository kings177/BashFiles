Total Repositories with 'pthread' keyword: 832

https://github.com/netdata/netdata
- build/m4/ax_pthread.m4:2 #        https://www.gnu.org/software/autoconf-archive/ax_pthread.html
- aclk/aclk_query.h:12 extern pthread_cond_t query_cond_wait;
- aclk/aclk_query.c:11 pthread_cond_t query_cond_wait = PTHREAD_COND_INITIALIZER;
- libnetdata/locks/locks.h:9 typedef pthread_mutex_t netdata_mutex_t;
- libnetdata/locks/locks.c:33         int ret = pthread_setcancelstate(PTHREAD_CANCEL_DISABLE, &old);

https://github.com/obsproject/obs-studio
- libobs/obs-view.c:26 	pthread_mutex_init_value(&view->channels_mutex);
- UI/platform-x11.cpp:44 #include <pthread_np.h>
- libobs/obs-audio.c:507 		pthread_mutex_lock(&audio->task_mutex);
- libobs/util/task.c:7 	pthread_t thread;
- libobs/obs-scene.h:81 	pthread_mutex_t actions_mutex;

https://github.com/bilibili/ijkplayer
- ijkmedia/ijksdl/ijksdl_mutex.h:29 #include <pthread.h>
- ijkmedia/ijksdl/ijksdl_mutex.c:38     if (pthread_mutex_init(&mutex->id, NULL) != 0) {
- ijkmedia/ijksdl/ijksdl_thread.c:40     pthread_setname_np(pthread_self(), thread->name);
- ijkmedia/ijkplayer/ijkplayer.c:53     pthread_mutex_destroy(&mp->mutex);
- ijkmedia/ijkplayer/ijkplayer_internal.h:35     pthread_mutex_t mutex;

https://github.com/openssl/openssl
- crypto/threads_pthread.c:50     if ((lock = CRYPTO_zalloc(sizeof(pthread_rwlock_t), NULL, 0)) == NULL)
- doc/man3/OPENSSL_fork_prepare.pod:34 Platforms with fork(2) but without pthread_atfork(3) will probably need
- util/platform_symbols/unix-symbols.txt:81 pthread_attr_destroy
- crypto/thread/arch/thread_posix.c:38     pthread_attr_t attr;
- INSTALL.md:1820 OpenSSL provides built-in support for two threading models: pthreads (found on

https://github.com/libuv/libuv
- m4/ax_pthread.m4:2 #        https://www.gnu.org/software/autoconf-archive/ax_pthread.html
- tsansupp.txt:2 race:pthread_barrier_destroy
- docs/src/threading.rst:8 synchronization primitives. The API largely follows the pthreads API.
- src/unix/thread.c:25 #include <pthread.h>
- include/uv/unix.h:43 #include <pthread.h>

https://github.com/robertdavidgraham/masscan
- src/pixie-threads.c:11 #include <pthread.h>
- Makefile:39 LIBS = -lm -lrt -ldl -lpthread

https://github.com/micropython/micropython
- ports/unix/mpthreadport.h:27 #include <pthread.h>
- ports/unix/mpthreadport.c:32 #include "py/mpthread.h"
- ports/unix/Makefile:112 # Flags to link with pthread library
- py/mpthread.h:38 #include <mpthreadport.h>
- ports/unix/mpbtstackport_usb.c:27 #include <pthread.h>

https://github.com/coreutils/coreutils
- bootstrap.conf:212   pthread-cond
- src/local.mk:330 # for pthread-cond, pthread-mutex, pthread-thread
- src/sort.c:26 #include <pthread.h>
- gnulib-tests/Makefile.am:15 # test-lock.c:148: error: cast from function call of type 'pthread_t' to \
- tests/sort/sort-unique-segv.sh:23   skip_ 'requires pthreads'

https://github.com/troydhanson/uthash
- doc/userguide.txt:1765 For example using pthreads you can create an rwlock like this:
- tests/threads/test1.c:10 #include <pthread.h>
- tests/threads/Makefile:7 CFLAGS += -I$(HASHDIR) -g -pthread
- tests/threads/test2.c:10 #include <pthread.h>
- tests/lru_cache/main.c:2 #include <pthread.h>

https://github.com/plasma-umass/coz
- benchmarks/pca/pca-pthread.c:36 #include <pthread.h>
- benchmarks/kmeans/kmeans-pthread.c:36 #include <pthread.h>
- benchmarks/histogram/histogram-pthread.c:38 #include <pthread.h>
- benchmarks/matrix_multiply/matrix_multiply-pthread.c:40 #include <pthread.h>
- benchmarks/word_count/sort-pthread.h:30 void sort_pthreads(void *base, size_t num_elems, size_t width,

https://github.com/jorisvink/kore
- src/tasks.c:21 #include <pthread.h>
- include/kore/tasks.h:20 #include <pthread.h>
- README.md:71 * pthreads
- Makefile:97 	LDFLAGS+=-lpthread

https://github.com/alibaba/LVS
- kernel/Documentation/pi-futex.txt:63 locks (such as futex-based pthread mutexes) is priority inheritance:
- kernel/Documentation/rt-mutex.txt:5 which enable pthread_mutex_t priority inheritance attributes
- kernel/Documentation/robust-futexes.txt:27 process exits prematurely while holding a pthread_mutex_t lock that is
- kernel/tools/perf/bench/sched-messaging.c:19 #include <pthread.h>
- kernel/Documentation/futex-requeue-pi.txt:16 pthread_cond_broadcast() must resort to waking all the tasks waiting

https://github.com/syslog-ng/syslog-ng
- lib/tls-support.h:34 #include <pthread.h>
- Makefile.am:278   --sim-hints=no-nptl-pthread-stackcache \
- CMakeLists.txt:57 set(MEMORYCHECK_COMMAND_OPTIONS "--num-callers=30 --sim-hints=no-nptl-pthread-stackcache --gen-suppressions=all --leak-check=full --trace-children=yes --freelist-vol=200000000 --freelist-big-blocks=10000000 --malloc-fill=55 --free-fill=AA")
- configure.ac:620 CFLAGS_ADD="${CFLAGS_ADD} -pthread"
- lib/thread-utils.h:26 #include <pthread.h>

https://github.com/omnirom/android_bootable_recovery
- ui.h:21 #include <pthread.h>
- pigz/README:7 pigz was written by Mark Adler, and uses the zlib and pthread libraries.
- pigz/yarn.c:1 /* yarn.c -- generic thread operations implemented using pthread functions
- pigz/pigz.spec:13 pigz, which stands for parallel implementation of gzip, is a fully functional replacement for gzip that exploits multiple processors and multiple cores to the hilt when compressing data. pigz was written by Mark Adler, and uses the zlib and pthread libraries.
- fuse/fuse_i.h:35 	pthread_mutex_t lock;

https://github.com/rsyslog/rsyslog
- action.h:71 	pthread_mutex_t mutAction; /* primary action mutex */
- threads.c:32 #include <pthread.h>
- threads.h:27 	pthread_mutex_t mutThrd;/* mutex for handling long-running operations and shutdown */
- runtime/wti.c:37 #include <pthread.h>
- runtime/wtp.h:25 #include <pthread.h>

https://github.com/rspamd/rspamd
- contrib/zstd/pool.c:26 #include "threading.h"   /* pthread adaptation */
- src/libutil/mem_pool.h:35 #include <pthread.h>
- contrib/replxx/CMakeLists.txt:13 	set(BASE_COMPILER_OPTIONS "-std=c++11 -Wall -D_GNU_SOURCE -pthread")
- contrib/kann/kann.c:263 #include <pthread.h>
- src/libutil/mem_pool.c:1088 	pthread_mutexattr_t mattr;

https://github.com/pmwkaa/sophia
- sophia/build:56  * cc -O2 -DNDEBUG -std=c99 -pedantic -Wall -Wextra -pthread -c sophia.c
- example/makefile:13 	gcc crud.c ../libsophia.a -I../ -pedantic -std=c99 -Wall -Wextra -pthread -g -o crud
- sophia/std/ss_cond.h:15 	pthread_cond_t c;
- documentation/tutorial/build.md:16 cc -O2 -DNDEBUG -std=c99 -pedantic -Wall -Wextra -pthread -c sophia.c
- sophia/mk/sophia:33 CFLAGS_INCLUDE  = -pthread $(INCLUDE)

https://github.com/solusipse/fiche
- fiche.c:19 Compile with Makefile or manually with -O2 and -pthread flags.
- Makefile:2 CFLAGS+=-pthread -O2 -Wall -Wextra -Wpedantic -Wstrict-overflow -fno-strict-aliasing -std=gnu11 -g -O0

https://github.com/libimobiledevice/usbmuxd
- src/Makefile.am:17 	$(libpthread_LIBS)

https://github.com/ellson/MOTHBALLED-graphviz
- lib/sfio/README:30 	Irix, Linux, Solaris systems:	-lpthread

https://github.com/ngs-lang/ngs
- vm.h:174 	VALUE c_pthread_t;
- doc/ngsint.1.md:23 For good example of exposing and wrapping `c_...` functions see `autoload/Thread.ngs` which wraps `c_pthread_attr_t`, `c_pthread_attr_init`, `c_pthread_create` and `c_pthread_join`. 
- obj.h:73 	pthread_t val;
- ngs.h:6 #include <pthread.h>
- vim/syntax/ngs.vim:44 syn keyword ngsType c_ffi_cif c_ffi_type c_pthread_attr_t c_pthread_cond_t c_pthread_mutex_t c_pthread_mutexattr_t c_pthread_t c_sockaddr c_sockaddr_in c_sockaddr_un c_tm

https://github.com/irontec/sngrep
- configure.ac:37 AC_CHECK_LIB([pthread], [pthread_create], [], [
- src/capture.h:36 #include <pthread.h>
- src/capture.c:129     pthread_mutexattr_t attr;
- src/capture_eep.c:188     pthread_exit(NULL);
- src/sip.c:33 #include <pthread.h>

https://github.com/haproxy-unofficial-obsolete-mirrors/haproxy
- src/shctx.c:17 #include <pthread.h>
- contrib/spoa_example/Makefile:8 CFLAGS  = -g -O2 -Wall -Werror -pthread
- contrib/spoa_example/spoa.c:23 #include <pthread.h>
- Makefile:19 #   USE_PTHREAD_PSHARED  : enable pthread process shared mutex on sslcache.

https://github.com/cztomczak/cef2go
- include/internal/cef_mac.h:36 #include <pthread.h>
- include/internal/cef_linux.h:36 #include <pthread.h>

https://github.com/pfalcon/pycopy
- ports/unix/mpthreadport.h:27 #include <pthread.h>
- ports/unix/mpthreadport.c:32 #include "py/mpthread.h"
- ports/unix/Makefile:121 # Flags to link with pthread library
- py/mpthread.h:38 #include <mpthreadport.h>
- ports/unix/mpconfigport.mk:14 # _thread module using pthreads

https://github.com/n64dev/cen64
- os/posix/thread.h:15 #include <pthread.h>
- .github/workflows/msys2-windows.yml:56       - name: Correct pthread to allow static

https://github.com/assaultcube/AC
- source/src/tools.cpp:717     #include <pthread.h>
- source/include/vorbis/Makefile.in:179 pthread_lib = @pthread_lib@
- source/enet/ltmain.sh:5633 	   # Do not include libc_r directly, use -pthread flag.
- source/include/SDL_hints.h:792 *  Support for this hint is currently available only in the pthread, Windows, and PSP backend.
- source/src/Makefile:129 SERVER_LIBS= -L../enet/.libs -lenet -lz -lpthread

https://github.com/SOHUDBA/SOHU-DBProxy
- configure.in:392 EVENT_LIBS="-levent -levent_pthreads"
- src/mysql-proxy-cli.c:356 	/*初始化libevent支持pthread*/

https://github.com/wifidog/wifidog-gateway
- src/auth.c:32 #include <pthread.h>
- configure.in:133 # check for pthread
- src/gateway.c:32 #include <pthread.h>
- src/client_list.h:32 extern pthread_mutex_t client_list_mutex;
- src/conf.h:86 extern pthread_mutex_t config_mutex;

https://github.com/ktap/ktap
- samples/userspace/pthread.kp:3 # This script trace pthread_mutex* related call in libpthread
- userspace/kp_reader.c:29 #include <pthread.h>
- Makefile:27 KTAP_LIBS = -lpthread
- test/benchmark/sembench.c:3  * To compile: gcc -Wall -o sembench sembench.c -lpthread
- test/benchmark/cmp_profile.sh:16 gcc -o sembench sembench.c -O2 -lpthread

https://github.com/tomac/yersinia
- src/arp.c:74 #include <pthread.h>
- src/admin.h:50 extern int8_t attack_kill_th(struct term_node *, pthread_t);
- configure.ac:293 AH_TEMPLATE([PTHREAD_NEED_TESTCANCEL], [pthread need testcancel])
- src/attack.c:131             write_log(0, " attack_launch: %X Attack thread %X is born!!\n", (int)pthread_self(), (u_long) node->protocol[proto].attacks[i].attack_th.id);
- src/attack.h:35 int8_t attack_kill_th(struct term_node *, pthread_t );

https://github.com/FreeGLUTProject/freeglut
- src/android/native_app_glue/android_native_app_glue.c:31     pthread_mutex_lock(&android_app->mutex);
- src/android/native_app_glue/android_native_app_glue.h:22 #include <pthread.h>

https://github.com/intel/libipt
- include/posix/pt_threads.h:39 #include <pthread.h>
- CMakeLists.txt:244     link_libraries(pthread)

https://github.com/openpilot/OpenPilot
- make/unittest.mk:64 # Google Test needs the pthread library
- flight/pios/inc/pios_udp_priv.h:32 #include <pthread.h>
- flight/libraries/PyMite/vm/thread.c:35     pPmThread_t pthread = C_NULL;
- ground/openpilotgcs/src/libs/eigen/bench/btl/cmake/FindMKL.cmake:30   set(MKL_LIBRARIES ${MKL_LIBRARIES} mkl_intel_lp64 mkl_sequential ${MKL_GUIDE} pthread)
- flight/libraries/PyMite/vm/global.h:122     pPmThread_t pthread;

https://github.com/mintomic/mintomic
- cmake/BuildSettings.cmake:12         set(CMAKE_C_FLAGS "-pthread -g")
- src/mintsystem/gcc/mutex.c:6     pthread_mutexattr_t attr;
- include/mintsystem/private/tid_gcc.h:4 #include <pthread.h>
- include/mintsystem/private/mutex_gcc.h:4 #include <pthread.h>
- include/mintsystem/private/thread_gcc.h:4 #include <pthread.h>

https://github.com/att/ast
- src/lib/libtaso/features/pthread:1 header pthread.h
- src/lib/libtaso/taso.c:28 #include "FEATURE/pthread"
- src/lib/libtaso/Mamfile:51 exec - for i in taso pthread ast
- src/lib/libast/sfio/vthread.h:49 #if _may_use_threads && !defined(vt_threaded) && _hdr_pthread
- bin/package:1788 #include <pthread.h>

https://github.com/Ravenbrook/mps
- design/pthreadext.txt:6 :Tag: design.mps.pthreadext
- code/thix.c:6  * .purpose: This is a pthreads implementation of the threads manager.
- design/protix.txt:105 design.mps.pthreadext_ ).
- code/fri3gc.gmk:22 LIBS = -lm -pthread
- code/thxc.c:34 #include <pthread.h>

https://github.com/libimobiledevice/libplist
- m4/ax_pthread.m4:2 #        https://www.gnu.org/software/autoconf-archive/ax_pthread.html
- configure.ac:74     AX_PTHREAD([], [AC_MSG_ERROR([pthread is required to build libplist])])
- src/plist.c:42 #include <pthread.h>

https://github.com/cvxgrp/scs
- CMakeLists.txt:359             pthread
- scs.mk:136 MKLFLAGS = -L$(MKLROOT) -L$(MKLROOT)/lib -Wl,--no-as-needed -lmkl_rt -lmkl_gnu_thread -lmkl_core -lgomp -lpthread -ldl

https://github.com/mindboards/ev3sources
- extra/linux-devkit/arm-none-linux-gnueabi/usr/lib/pkgconfig/pthread-stubs.pc:5 Name: pthread stubs
- extra/linux-devkit/arm-none-linux-gnueabi/usr/lib/opkg/info/libpthread-stubs0.control:1 Package: libpthread-stubs0
- extra/linux-devkit/arm-none-linux-gnueabi/usr/lib/opkg/info/libpthread-stubs-dev.list:1 /usr/lib/libpthread-stubs.la
- extra/linux-03.20.00.13/Documentation/pi-futex.txt:63 locks (such as futex-based pthread mutexes) is priority inheritance:
- extra/linux-03.20.00.13/Documentation/rt-mutex.txt:5 which enable pthread_mutex_t priority inheritance attributes

https://github.com/FreeTDS/freetds
- m4/ax_pthread.m4:2 #        https://www.gnu.org/software/autoconf-archive/ax_pthread.html
- misc/bounce.c:6 #include <pthread.h>
- CMakeLists.txt:271 	clock_gettime fseeko pthread_cond_timedwait pthread_cond_timedwait_relative_np
- vms/config_h.vms:177 /* Define to 1 if you have the `pthread_cond_timedwait' function. */
- src/utils/tds_cond.c:189 	pthread_condattr_t attr;

https://github.com/alexxy/netdiscover
- src/main.c:32 #include <pthread.h>
- src/screen.c:38 #include <pthread.h>
- src/ifaces.c:139          pthread_mutex_lock(data_access);
- src/data_al.h:30 #include <pthread.h>
- src/data_reply.c:30 #include <pthread.h>

https://github.com/vdukhovni/postfix
- postfix/html/DB_README.html:49 <li> <p> Missing <a href="#pthread">pthread</a> library trouble. </p>
- postfix/html/SQLITE_README.html:41 name of the standard POSIX thread library (pthread).  For example:
- postfix/proto/LMDB_README.html:95 undefined reference to `pthread_mutexattr_destroy'
- postfix/src/milter/Makefile.in:71 	cc -g -I/usr/local/include -o $@ $? -L/usr/local/lib -lmilter -lpthread
- postfix/proto/SQLITE_README.html:41 name of the standard POSIX thread library (pthread).  For example:

https://github.com/DC-SWAT/DreamShell
- modules/ffmpeg/ffmpeg-0.6.3/libavcodec/pthread.c:24 #include <pthread.h>
- exports.txt:16 include pthread.h
- lib/mxml/mxml-private.c:154 #  include <pthread.h>
- modules/luaTask/ChangeLog:1 2007-11-24: BUG (fixed): SegFault caused by async pthread cancellation.
- modules/xvid/xvidcore/build/generic/conf.sh:2 ./configure --host=sh-elf CFLAGS="${KOS_CFLAGS} -I${KOS_BASE}/ds/include" LDFLAGS="${KOS_LDFLAGS} -L${KOS_BASE}/ds/lib" LIBS="${KOS_LIBS} -lm" CC="${KOS_CC}" --disable-pthread --disable-shared #--disable-assembly

https://github.com/michaelpq/pg_plugins
- examples/pthread_libpq.c:6  * gcc -o pthread_libpq pthread_libpq.c -lpthread -lpq

https://github.com/signalwareltd/rtl_tcp_andro-
- rtlsdr/src/main/cpp/src/sdrtcp.c:21 #include <pthread.h>
- rtlsdr/src/main/cpp/src/workpool.h:26 #include <pthread.h>
- rtlsdr/src/main/cpp/src/workpool.c:35 	pthread_mutex_lock(&pool->mutexes[id]);
- rtlsdr/src/main/cpp/src/threading.c:24     pthread_mutex_init(&var->locker, NULL);
- rtlsdr/src/main/cpp/src/sdrtcp.h:42     pthread_mutex_t state_locker;

https://github.com/harbour/core
- include/hbthread.h:64 #  include <pthread.h>
- config/bsd/libs.mk:38       SYSLIBS += pthread
- contrib/hbcups/hbcups.hbc:8 {os2}libs=libcups pthread
- contrib/xhb/hbserv.c:229                /* Allow signals to go through pthreads */
- src/vm/thread.c:625    return pthread_cond_signal( HB_COND_GET( cond ) ) == 0;

https://github.com/osresearch/LEDscape
- src/ledscape/util.c:18 #include <pthread.h>
- am335x/app_loader/interface/prussdrv.c:52 #include <pthread.h>
- src/perlin/perlin-ledscape.cpp:37 #include <pthread.h>
- am335x/app_loader/include/prussdrv.h:52 #include <pthread.h>
- am335x/app_loader/interface/__prussdrv.h:206     pthread_t irq_thread[NUM_PRU_HOSTIRQS];

https://github.com/openxc/isotp-c
- Makefile:5 LDLIBS = -lcheck -lm -lrt -lpthread -lsubunit

https://github.com/s-u/Rserve
- tools/m4/ax_pthread.m4:2 #        http://www.gnu.org/software/autoconf-archive/ax_pthread.html
- src/ioc.c:20 #include <pthread.h>
- src/include/sbthread.h:5  * Supported platforms: unix w pthread, Win32                    *
- src/proxy/forward.c:25 #include <pthread.h>
- configure:658 ax_pthread_config

https://github.com/mirror/mingw-w64
- mingw-w64-libraries/winpthreads/include/pthread_unistd.h:30   pthread_atfork(),
- mingw-w64-libraries/winpthreads/include/pthread_compat.h:71 #include "pthread_time.h"
- mingw-w64-libraries/winpthreads/include/pthread_signal.h:27 #define pthread_sigmask(H, S1, S2) 0
- mingw-w64-libraries/winpthreads/include/pthread.h:73 #include "pthread_compat.h"
- mingw-w64-libraries/winpthreads/src/winpthread_internal.h:25 struct _pthread_v * WINPTHREAD_API __pth_gpointer_locked (pthread_t id);

https://github.com/hercules-390/hyperion
- hthreads.h:43 #include <pthread.h>
- pttrace.h:102     ptt_pthread_trace( (_class), (_msg),(void*)(uintptr_t)(_data1),  \
- _build:16 # !                     +- pentium ----+          +-- pthread -+      !
- _TODO.txt:88   of pthread_setname_np and pthread_getname_np functions.
- README.PTT:42 the appropriate "ptt_pthread_xxxx" function that would then add the entry

https://github.com/RFduino/RFduino
- system/CMSIS/CMSIS/Documentation/RTOS/html/search/all_70.html:32 <div class="SRResult" id="SR_pthread">
- system/CMSIS/CMSIS/RTOS/cmsis_os.h:174 /// \note MUST REMAIN UNCHANGED: \b os_pthread shall be consistent in every CMSIS-RTOS.
- system/CMSIS/CMSIS/Documentation/RTOS/html/structos_thread_def__t.html:115 <tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="cmsis__os_8h.html#aee631e5ea1b700fc35695cc7bc574cf7">os_pthread</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structos_thread_def__t.html#ad3c9624ee214329fb34e71f544a6933e">pthread</a></td></tr>
- system/CMSIS/CMSIS/Documentation/RTOS/html/globals_type.html:107 <li>os_pthread
- system/CMSIS/CMSIS/Documentation/RTOS/html/functions.html:142 <li>pthread

https://github.com/wahern/cqueues
- src/thread.c:38 #include <pthread.h>
- config.h.guess:462 #define HAVE_PTHREAD_H ag_test_include(<pthread.h>, !__minix)
- PORTING.md:171     after `kevent`, but before `sigprocmask`/`pthread_sigmask`.
- regress/51-join-defunct-thread.lua:46 	info"calling pthread_exit"
- src/cqueues.c:34 #include <signal.h>	/* sigprocmask(2) pthread_sigmask(3) */

https://github.com/bigfatbrowncat/zetes
- zeteshands/ZetesHands.mk:37   PLATFORM_GENERAL_LINKER_OPTIONS = -lpthread -ldl $(CUSTOM_LIBS)
- zeteswings/ZetesWings.mk:39   PLATFORM_GENERAL_LINKER_OPTIONS = -lpthread -ldl -lXtst -lGL -lX11 $(shell pkg-config --libs gtk+-2.0) $(CUSTOM_LIBS)

https://github.com/AndrewFromMelbourne/raspi2png
- Makefile:7 INCLUDES+=-I/opt/vc/include/ -I/opt/vc/include/interface/vcos/pthreads -I/opt/vc/include/interface/vmcs_host/linux

https://github.com/Xilinx/qemu
- hw/9pfs/9p-util.h:218  * using pthread_fchdir_np is needed. qemu_mknodat is defined in
- docs/devel/atomics.rst:328 - ``pthread_mutex_lock`` has acquire semantics, ``pthread_mutex_unlock`` has
- audio/sdlaudio.c:35 #include <pthread.h>
- scripts/qemugdb/coroutine.py:18        pthread_self().'''
- util/qemu-thread-posix.c:65     err = pthread_mutex_init(&mutex->lock, NULL);

https://github.com/zenkovich/o2
- Framework/3rdPartyLibs/pthreads/pthread.c:2  * pthread.c
- Framework/3rdPartyLibs/pthreads/pthread.dsw:6 Project: "pthread"=.\pthread.dsp - Package Owner=<4>
- Framework/3rdPartyLibs/pthreads/pthread_self.c:2  * pthread_self.c
- Framework/3rdPartyLibs/pthreads/pthread_join.c:2  * pthread_join.c
- Framework/3rdPartyLibs/pthreads/pthread_detach.c:2  * pthread_detach.c

https://github.com/OpenIndiana/oi-userland
- components/desktop/compiz/patches/compiz-07-pthread.patch:7 -compiz_LDFLAGS = -export-dynamic -pthread
- components/x11/libpthread-stubs/libpthread-stubs.p5m:26 file path=usr/lib/$(MACH64)/pkgconfig/pthread-stubs.pc
- components/network/samba/patches/06-memset_for_pthread_mutex_init.patch:10  		pthread_mutex_t *chain = &m->hashchains[i];
- components/x11/libpthread-stubs/Makefile:20 COMPONENT_NAME=    libpthread-stubs
- components/runtime/openjdk-20/patches/README.txt:132 Use pthread variants directly in attachListener_solaris.cpp

https://github.com/jdolan/quetoo
- Quetoo.vs15/libs/glib/include/glib/deprecated/gthread.h:124 #include <pthread.h>
- Quetoo.vs15/build_settings.props:80     <QuetooPthreadPath>$(QuetooObjectivelyLibsPath)pthread\</QuetooPthreadPath>
- linux/sobundler.sh:13 	libpthread.so*
- Quetoo.vs15/libs/xml/include/libxml/threads.h:4  *              should work with pthreads, Windows native or TLS threads

https://github.com/rumpkernel/drv-netif-dpdk
- src/libdpdkif/dpdkif_user.c:35 #include <pthread.h>

https://github.com/atks/vt
- lib/pcre2/sljit/sljitUtils.c:111 #include <pthread.h>
- Makefile:169 	$(CXX) $(CXXFLAGS) -o $@ $(TOOLOBJ) $(LIBHTS) $(LIBRMATH) ${LIBPCRE2} ${LIBDEFLATE} -lz -lpthread -lbz2 -llzma -lcurl -lcrypto
- Makefile.default:165 	$(CXX) $(CXXFLAGS) -o $@ $(TOOLOBJ) $(LIBHTS) $(LIBRMATH) ${LIBPCRE2} -lz -lpthread -lbz2 -llzma -lcurl -lcrypto

https://github.com/sunqm/libcint
- CMakeLists.txt:239 set(CPACK_DEBIAN_LIB_PACKAGE_DEPENDS "libopenblas0-pthread")

https://github.com/iosifpeterfi/openCAPWAP-OpenWRT
- CWThread.h:32 #include <pthread.h>
- configure.ac:25 AC_CHECK_HEADER([pthread.h], [], [AC_MSG_ERROR(You need the pthread headers)])
- timerlib.c:24 #include <pthread.h>
- CWThread.c:52 	if (pthread_create(newThread, NULL, threadFunc, arg) != 0) {
- timerlib.h:58  * pthread_* function. The only limitation is that timer_destroy() MUST

https://github.com/boundary/wireshark
- epan/except.c:54 #include <pthread.h>
- packaging/macosx/ScriptExec/main.c:55 #include <pthread.h>
- README.aix:59 pthread stuff, so the re-entrant C library, libc_r, is needed. 
- epan/dissectors/dcerpc/butc/butc.idl:75  * 	    5. Get rid of any pthread_mutex and pthread_cond operations. Use afslk and
- packaging/macosx/native-gtk/config.h:255 /* Have function pthread_attr_setstacksize */

https://github.com/aligrudi/fbpdf
- Makefile:18 	$(CXX) -o $@ $^ $(LDFLAGS) -ldjvulibre -ljpeg -lm -lpthread

https://github.com/signal11/m-stack
- host_test/test.c:38 #include <pthread.h>
- host_test/control_transfer_out.c:37 #include <pthread.h>
- host_test/control_transfer_in.c:37 #include <pthread.h>
- host_test/feature.c:56 #include <pthread.h>
- host_test/feature_test.c:45 #include <pthread.h>

https://github.com/fnuecke/eris
- src/lgc.c:698 static void sweepthread (lua_State *L, lua_State *L1) {

https://github.com/philberty/cython-book
- chapter5/webserver-gil-example/AsyncMessageServer.c:23 #include <pthread.h>

https://github.com/zeromq/libcurve
- src/selftest:3 gcc -g -o curve_selftest curve_*.c ${CFLAGS} ${LDFLAGS} -lczmq -lzmq -lsodium -lpthread
- c:166     STDLIBS="-lpthread -lm"
- builds/msvc/Makefile:87 LIBS = -lzmq -lpthread 

https://github.com/sphia/sphia
- Makefile:11 LDFLAGS += -pthread -lsophia

https://github.com/Skycrab/Linux-C-Web-Server
- wrap.h:22 #include <pthread.h>
- info.txt:2205 # 1 "/usr/include/i386-linux-gnu/bits/pthreadtypes.h" 1 3 4
- Makefile:5 #If you support https,then LIB=-DHTTPS -lpthread -lssl -lcrypto

https://github.com/arduino/openwrt-yun
- toolchain/uClibc/patches-0.9.33.2/180-pthread_cleanup_fix.patch:1 --- a/libpthread/nptl/cleanup_defer_compat.c
- include/site/linux:32 ac_cv_func_pthread_key_delete=yes
- package/toolchain/Makefile:145 define Package/libpthread
- tools/mklibs/patches/009-uclibc_libpthread_symbols.patch:58 +            if soname == "libpthread.so.0":
- scripts/ext-toolchain.sh:36 	pthread:  libpthread-* libpthread

https://github.com/jpsdr/x264
- x264dll.c:29 /* Callback for our DLL so we can initialize pthread */
- common/osdep.c:39 /* this is a global in pthread-win32 to indicate if it has been initialized or not */
- common/osdep.h:369 #define x264_pthread_t               thread_id
- common/threadpool.c:39     x264_pthread_t *thread_handle;
- encoder/lookahead.c:54         x264_pthread_cond_broadcast( &dst->cv_fill );

https://github.com/jncronin/rpi-boot
- malloc.c:115        pthread mutex, win32 critical section, or a spin-lock if if

https://github.com/naemon/naemon-core
- tap/src/tap.c:45 /* Encapsulate the pthread code in a conditional.  In the absence of
- tap/configure.ac:11 		LDFLAGS="$LDFLAGS -pthread"
- tap/src/tap.3:322 .Lb libpthread

https://github.com/MitchBradley/cforth
- src/app/esp8266-rtos/sdk_src/sdkconfig:403 CONFIG_PTHREAD_TASK_NAME_DEFAULT="pthread"
- build/bluez/Makefile:6 LIBS += -lpthread
- build/bluez64/Makefile:6 LIBS += -lpthread

https://github.com/Lupus/libevfibers
- coro/coro.c:395 /* pthread backend                                                           */
- coro/coro.h:56  * 2008-04-04 New (but highly unrecommended) pthreads backend.
- test/CMakeLists.txt:17 	target_compile_options(evfibers_test PUBLIC "-pthread")

https://github.com/heiher/hev-socks5-server
- src/hev-socks5-proxy.c:15 #include <pthread.h>
- Makefile:16 		-lpthread

https://github.com/fomy/destor
- configure.ac:13 AC_CHECK_LIB([pthread], [pthread_create])
- src/read_phase.c:5 static pthread_t read_t;
- src/hash_phase.c:5 static pthread_t hash_t;
- src/do_restore.c:208 	pthread_t recipe_t, read_t, write_t;
- src/trace_phase.c:144 static pthread_t trace_t;

https://github.com/Qihoo360/kmemcache
- user/umemcached.c:15 #include <pthread.h>
- test/Makefile:3 LDFLAGS = -lpthread
- test/testapp.c:3 #include <pthread.h>

https://github.com/cooperative-computing-lab/cctools
- chirp/src/chirp_fuse.c:20 #include <pthread.h>
- chirp/src/chirp_matrix_roc.c:18 #include <pthread.h>
- devel/tlq/server/parsers/ltrace_parser:122     #31849   0.068299 libpthread.so.0->__clone(0x2b0619359de0, 0x2b061c221d40, 0x3d0f00, 0x2b061c222700) = 0x7c6b
- chirp/src/chirp_matrix_verify.c:18 #include <pthread.h>
- parrot/test/TR_parrot_cloexec.sh:10 	gcc -I../src/ -g $CCTOOLS_TEST_CCFLAGS -o "$exe" -x c - -x none -lpthread -lm <<EOF

https://github.com/swetland/xv6
- include/proc.h:34 // in thread libraries such as Linux pthreads.

https://github.com/DoubleSpout/node-threads-a-gogo2
- src/pthreads.2/pthread.c:2  * pthread.c
- src/pthreads.2/pthread.dsw:6 Project: "pthread"=.\pthread.dsp - Package Owner=<4>
- src/pthreads.2/pthread_self.c:2  * pthread_self.c
- src/pthreads.2/pthread_join.c:2  * pthread_join.c
- src/pthreads.2/pthread_detach.c:2  * pthread_detach.c

https://github.com/CyanogenMod/android_device_samsung_jf-common
- include/hardware/gps.h:23 #include <pthread.h>

https://github.com/CyanogenMod/android_kernel_lge_msm8974
- Documentation/pi-futex.txt:63 locks (such as futex-based pthread mutexes) is priority inheritance:
- tools/usb/Makefile:4 PTHREAD_LIBS = -lpthread
- tools/usb/testusb.c:1 /* $(CROSS_COMPILE)cc -Wall -Wextra -g -lpthread -o testusb testusb.c */
- Documentation/rt-mutex.txt:5 which enable pthread_mutex_t priority inheritance attributes
- Documentation/robust-futexes.txt:27 process exits prematurely while holding a pthread_mutex_t lock that is

https://github.com/CyanogenMod/android_kernel_sony_msm8974
- Documentation/pi-futex.txt:63 locks (such as futex-based pthread mutexes) is priority inheritance:
- tools/usb/Makefile:4 PTHREAD_LIBS = -lpthread
- tools/usb/testusb.c:1 /* $(CROSS_COMPILE)cc -Wall -Wextra -g -lpthread -o testusb testusb.c */
- Documentation/rt-mutex.txt:5 which enable pthread_mutex_t priority inheritance attributes
- Documentation/robust-futexes.txt:27 process exits prematurely while holding a pthread_mutex_t lock that is

https://github.com/ros-drivers/camera_umd
- jpeg_streamer/src/mongoose.c:127 typedef HANDLE pthread_mutex_t;

https://github.com/CyanogenMod/android_kernel_samsung_hlte
- Documentation/pi-futex.txt:63 locks (such as futex-based pthread mutexes) is priority inheritance:
- tools/usb/Makefile:4 PTHREAD_LIBS = -lpthread
- tools/usb/testusb.c:1 /* $(CROSS_COMPILE)cc -Wall -Wextra -g -lpthread -o testusb testusb.c */
- Documentation/rt-mutex.txt:5 which enable pthread_mutex_t priority inheritance attributes
- Documentation/robust-futexes.txt:27 process exits prematurely while holding a pthread_mutex_t lock that is

https://github.com/stargieg/bacnet-stack
- demo/router/Makefile:14 # -pthread
- demo/router/msgqueue.c:33 #include <pthread.h>
- ports/linux/dlmstp.mak:21 	${CC} -pthread -o $@ ${OBJS} 
- ports/linux/rx_fsm.mak:24 	${CC} -pthread -o $@ ${OBJS} 
- demo/router/msgqueue.h:40 extern pthread_mutex_t msg_lock;

https://github.com/amanda99/android-h264-decoder
- jni/ffmpeg-android/armv5te/include/libavcodec/vda.h:45 #include <pthread.h>
- jni/ffmpeg-android/armv7-a/include/libavcodec/avcodec.h:2994      * Also see avcodec_thread_init and e.g. the --enable-pthread configure option.
- jni/ffmpeg-android/armv7-a/include/libavcodec/vda.h:45 #include <pthread.h>
- jni/ffmpeg-android/armv5te/include/libavcodec/avcodec.h:2994      * Also see avcodec_thread_init and e.g. the --enable-pthread configure option.

https://github.com/jakesays-old/tesseract-vs2012
- tesseract-3.02/ccutil/ccutil.h:32 #include <pthread.h>
- tiff-3.9.4/port/Makefile.in:213 acx_pthread_config = @acx_pthread_config@
- tesseract-3.02/ccutil/ccutil.cpp:31   pthread_mutex_init(&mutex_, NULL);
- tesseract-3.02/config/ltmain.sh:5633 	   # Do not include libc_r directly, use -pthread flag.
- tiff-3.9.4/libtiff/Makefile.in:288 acx_pthread_config = @acx_pthread_config@

https://github.com/apache/commons-daemon
- src/native/unix/support/apsupport.m4:34     LIBS="$LIBS -ldl -lpthread"

https://github.com/RT-Thread/realboard-lpc4088
- software/rtthread_examples/examples/6_media_mp3/project.uvproj:354               <IncludePath>.;..\..\drivers;..\..\libraries\CMSIS\Include;..\..\libraries\Device\NXP\LPC407x_8x_177x_8x\Include;..\..\libraries\Drivers\include;E:/rt-thread/components/dfs;E:/rt-thread/components/dfs/filesystems/devfs;E:/rt-thread/components/dfs/include;E:/rt-thread/components/drivers/include;E:/rt-thread/components/finsh;E:/rt-thread/components/init;E:/rt-thread/components/pthreads;E:/rt-thread/include;E:/rt-thread/libcpu/arm/common;E:/rt-thread/libcpu/arm/cortex-m4;applications;.\mp3\pub</IncludePath>
- software/rtthread_examples/scripts/buildbot.py:15     os.system('scons --buildlib=pthreads --director=' + path)
- software/rtthread_examples/examples/6_media_mp3/project.uvopt:1720     <GroupName>pthreads</GroupName>
- software/lpcware_lpc408x/Examples/EMC/Emc_Yaffs/yaffs2/direct/tests/fuzzer.c:22 #include <pthread.h>

https://github.com/mupen64plus/mupen64plus-ui-console
- projects/unix/Makefile:79   CFLAGS += -lpthread
- RELEASE:41    - add -lpthread to LIBS so that GDB will run the emulator without throwing a warning right after starting

https://github.com/RashmiKumari/g_mmpbsa
- cmake/FindGROMACS.cmake:148 		if( NOT ("${GMX_DEP_LIBRARIES}" MATCHES "pthread") AND "${PC_GROMACS_STATIC_LIBRARIES}" MATCHES "pthread")

https://github.com/lhc180/webrtc-based-android-aecm
- eclipse-project/jni/aecm/spl_init.c:120 #include <pthread.h>

https://github.com/alepharchives/hiawatha
- src/log.c:21 #include <pthread.h>
- src/cache.c:21 #include <pthread.h>
- src/client.c:18 #include <pthread.h>
- src/libssl.c:25 #include <pthread.h>
- src/tomahawk.c:21 #include <pthread.h>

https://github.com/lscube/feng
- configure.ac:66   AC_CHECK_FUNCS([pthread_key_create pthread_setspecific pthread_getspecific], [],
- src/network/rtsp_client.c:83 #include <pthread.h>

https://github.com/ajn123/C_Tutorial
- Threading/Mutexes.c:8 #include <pthread.h>
- Threading/threadIntro.c:10 #include <pthread.h>

https://github.com/CyanogenMod/android_kernel_samsung_msm8930-common
- Documentation/pi-futex.txt:63 locks (such as futex-based pthread mutexes) is priority inheritance:
- tools/usb/Makefile:4 PTHREAD_LIBS = -lpthread
- tools/usb/testusb.c:1 /* $(CROSS_COMPILE)cc -Wall -Wextra -g -lpthread -o testusb testusb.c */
- Documentation/rt-mutex.txt:5 which enable pthread_mutex_t priority inheritance attributes
- Documentation/robust-futexes.txt:27 process exits prematurely while holding a pthread_mutex_t lock that is

https://github.com/CyanogenMod/android_kernel_samsung_exynos5410
- Documentation/pi-futex.txt:63 locks (such as futex-based pthread mutexes) is priority inheritance:
- tools/usb/Makefile:4 PTHREAD_LIBS = -lpthread
- tools/usb/testusb.c:1 /* $(CROSS_COMPILE)cc -Wall -Wextra -g -lpthread -o testusb testusb.c */
- Documentation/rt-mutex.txt:5 which enable pthread_mutex_t priority inheritance attributes
- tools/perf/perf.c:406 static void pthread__block_sigwinch(void)

https://github.com/ictxiangxin/larbin
- src/global.h:28 #include <pthread.h>
- src/CMakeLists.txt:61         pthread
- src/utils/thread.cxx:27 pthread_t startThread (StartFun run, void *arg)
- src/utils/thread.h:22 #include <pthread.h>
- src/utils/sync_fifo.h:36         pthread_mutex_t lock;

https://github.com/hanzelpeter/dispmanx_vnc
- makeit:1 gcc -O3 main.c -o dispmanx_vncserver -DHAVE_LIBBCM_HOST -DUSE_EXTERNAL_LIBBCM_HOST -DUSE_VCHIQ_ARM -Wno-psabi -I/opt/vc/include/ -I/opt/vc/include/interface/vcos/pthreads -I/opt/vc/include/interface/vmcs_host/linux -L/opt/vc/lib/ -lbrcmGLESv2 -lbrcmEGL -lopenmaxil -lbcm_host -lvcos -lvchiq_arm -lpthread -lrt -lvncserver
- Makefile:12 	gcc -O3 main.c -o $(APP) -DHAVE_LIBBCM_HOST -DUSE_EXTERNAL_LIBBCM_HOST -DUSE_VCHIQ_ARM -Wno-psabi -I/opt/vc/include/ -I/opt/vc/include/interface/vcos/pthreads -I/opt/vc/include/interface/vmcs_host/linux -L/opt/vc/lib/ -lbrcmGLESv2 -lbrcmEGL -lopenmaxil -lbcm_host -lvcos -lvchiq_arm -lpthread -lrt -lvncserver

https://github.com/agnwinds/python
- software/gsl-2.6/ltmain.sh:5633 	   # Do not include libc_r directly, use -pthread flag.
- source/Makefile:116 # LDFLAGS= -L$(LIB)  -lm -lkpar  -lgslcblas ../duma_2_5_3/libduma.a -lpthread

https://github.com/linappleii/linapple
- inc/SerialComms.h:3 #include <pthread.h>
- inc/Video.h:130 extern pthread_mutex_t video_draw_mutex; // drawing mutex for writing to SDL surface
- Makefile:77 LIB    := $(SDL_LIBS) $(CURL_LIBS) -lz -lzip -pthread -lX11
- src/CPU.cpp:98 #include <pthread.h>
- src/SerialComms.cpp:183 pthread_mutex_t m_CriticalSection = PTHREAD_MUTEX_INITIALIZER;

https://github.com/jihlein/AQ32Plus
- Libraries/CMSIS/Documentation/RTOS/html/search/all_70.js:6   ['pthread',['pthread',['../structos_thread_def__t.html#ad3c9624ee214329fb34e71f544a6933e',1,'osThreadDef_t']]],
- Libraries/CMSIS/Documentation/RTOS/html/search/typedefs_6f.js:3   ['os_5fpthread',['os_pthread',['../cmsis__os_8h.html#aee631e5ea1b700fc35695cc7bc574cf7',1,'cmsis_os.h']]],
- Libraries/CMSIS/RTOS/cmsis_os.h:209 /// \note MUST REMAIN UNCHANGED: \b os_pthread shall be consistent in every CMSIS-RTOS.
- Libraries/CMSIS/Documentation/RTOS/html/structos_thread_def__t.js:4     [ "pthread", "structos_thread_def__t.html#ad3c9624ee214329fb34e71f544a6933e", null ],
- Libraries/CMSIS/Documentation/RTOS/html/structos_thread_def__t.html:128 <tr class="memitem:ad3c9624ee214329fb34e71f544a6933e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="cmsis__os_8h.html#aee631e5ea1b700fc35695cc7bc574cf7">os_pthread</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structos_thread_def__t.html#ad3c9624ee214329fb34e71f544a6933e">pthread</a></td></tr>

https://github.com/DJHartley/QEMU-s5l89xx-port
- compatfd.c:18 #include <pthread.h>
- simpletrace.c:16 #include <pthread.h>
- qemu-thread-posix.h:3 #include "pthread.h"
- qemu-thread.h:26  * IMPORTANT: The implementation does not guarantee that pthread_cond_signal
- qemu-thread-posix.c:31     pthread_mutexattr_t mutexattr;

https://github.com/arduino/linino
- tags/8.09/toolchain/uClibc/patches/140-fix-endless-recursion-in-pthread.patch:1 diff -urN uClibc-0.9.29.orig/libpthread/linuxthreads.old/pthread.c uClibc-0.9.29/libpthread/linuxthreads.old/pthread.c
- packages/libs/libpthread-stubs/Makefile:10 PKG_NAME:=libpthread-stubs
- trunk/include/site/linux:32 ac_cv_func_pthread_key_delete=yes
- tags/8.09/include/site/linux-uclibc:28 ac_cv_func_pthread_key_delete=yes
- packages/net/openssh/patches/140-pam_uclibc_pthreads_fix.patch:7 -		return;	/* terminated by pthread_cancel */

https://github.com/aws/s2n-tls
- s2n.mk:13     LIBS = -lc -pthread
- utils/s2n_init.c:15 #include <pthread.h>
- crypto/s2n_locking.c:19 #include <pthread.h>
- utils/s2n_random.c:52 #include <pthread.h>
- utils/s2n_fork_detection.h:25 bool s2n_is_pthread_atfork_supported(void);

https://github.com/giltene/wrk2
- src/ssl.c:3 #include <pthread.h>
- src/wrk.c:31     pthread_mutex_t mutex;
- src/wrk.h:5 #include <pthread.h>
- src/zmalloc.c:34 #include <pthread.h>
- Makefile:2 LIBS    := -lpthread -lm -lcrypto -lssl

https://github.com/andmarti1424/sc-im
- src/main.c:144 #include <pthread.h>
- src/Makefile:82   LDLIBS += -pthread
- src/file.c:86 #include <pthread.h>

https://github.com/geohot/qira
- middleware/qiradb/Trace/Trace.h:21 #include <pthread.h>
- extra/qiradb/qiradb.cc:2 #include <pthread.h>
- extra/qemu_mods/main.c:101 static pthread_mutex_t cpu_list_mutex = PTHREAD_MUTEX_INITIALIZER;
- tracers/pin/strace/osx_syscalls.h:348 	{.name = "__pthread_kill", .nargs = 2, .args = { ARG_INT, ARG_INT, }},
- ida/build.sh:19 g++ -m32 --shared template.o "-L$IDAROOT" -lida -o $OUTPUT libwebsockets.a -lcrypto -lz -lssl -lpthread

https://github.com/fastos/fastsocket
- demo/Makefile:5 LDFLAGS = -pthread
- kernel/Documentation/pi-futex.txt:63 locks (such as futex-based pthread mutexes) is priority inheritance:
- kernel/tools/perf/ui/ui.h:4 #include <pthread.h>
- kernel/Documentation/rt-mutex.txt:5 which enable pthread_mutex_t priority inheritance attributes
- kernel/tools/perf/ui/browser.c:243 	pthread_mutex_lock(&ui__lock);

https://github.com/satori-com/tcpkali
- m4/ax_pthread.m4:2 #        http://www.gnu.org/software/autoconf-archive/ax_pthread.html
- src/tcpkali_ssl.c:4 #include <pthread.h>
- src/tcpkali_engine.c:39 #include <pthread.h>
- deps/libev/ev.pod:418 C<pthread_atfork> which is even faster).
- deps/libev/ev.c:384 /* on linux, we can use a (slow) syscall to avoid a dependency on pthread, */

https://github.com/joncampbell123/dosbox-x
- vs/sdl2/src/hidapi/m4/ax_pthread.m4:2 #        http://www.gnu.org/software/autoconf-archive/ax_pthread.html
- vs/sdl2/src/thread/pthread/SDL_systls.c:26 #include <pthread.h>
- vs/sdl/src/thread/pthread/SDL_syscond.c:27 #include <pthread.h>
- vs/sdl/src/thread/pthread/SDL_sysmutex.c:24 #include <pthread.h>
- vs/sdl/src/thread/pthread/SDL_systhread.c:24 #include <pthread.h>

https://github.com/concurrencykit/ck
- doc/ck_cohort:91 #include <pthread.h>
- regressions/ck_stack/validate/pair.c:39 #include <pthread.h>
- regressions/ck_stack/validate/push.c:37 #include <pthread.h>
- regressions/common.h:43 #include <pthread_np.h>
- regressions/ck_stack/validate/pop.c:39 #include <pthread.h>

https://github.com/DynamoRIO/drmemory
- drmemory/suppress-default.lin.txt:149 # i#70: pthread_create -> __libc_thread_freeres -> arena_thread_freeres
- drmemory/perturb.c:151     /* FIXME: intercept module load and if see pthreads then intercept
- drsyscall/table_macos_bsd.c:1835     {{SYS___pthread_kill /*328*/}, "__pthread_kill", OK, RLONG, 2,
- drmemory/docs/errors.dox:183 # 0 process                    [/work/drmemory/git/src/tests/pthreads.c:79]
- drheapstat/postprocess.pl:808     my @syslibs = ("libc.so", "libstdc++.so", "libpthreads.so",

https://github.com/osmc/osmc
- package/libamcodec-osmc/files-dev/usr/osmc/include/amadec/alsa-out.h:27     pthread_t playback_tid;
- package/kernel-osmc/initramfs-src/build.sh:59 # NB: can't build static because of pthread, which is part of glibc.
- package/libamcodec-osmc/files-dev/usr/osmc/include/amavutils/itemlist.h:23 #include <pthread.h>
- package/libamcodec-osmc/files-dev/usr/osmc/include/amavutils/amthreadpool.h:21 #include <pthread.h>
- package/lirc-osmc/patches/all-002-do-not-build-with-extras.patch:48  atwf83_la_LDFLAGS           = $(AM_LDFLAGS) -lpthread

https://github.com/rapid7/metasploit-payloads
- c/meterpreter/source/extensions/priv/namedpipe.c:221 		// get the exit code for our pthread
- c/meterpreter/source/extensions/priv/namedpipe_efs.c:146 		// get the exit code for our pthread
- c/meterpreter/source/extensions/python/Python/thread.c:12 /* This means pthreads are not implemented in libc headers, hence the macro
- c/meterpreter/source/extensions/python/README:280 - Systems defining __d6_pthread_create (configure.ac)
- c/meterpreter/source/extensions/stdapi/server/ui/desktop.c:501 		// get the exit code for our pthread

https://github.com/baresip/baresip
- CHANGELOG.md:322 * multicast: remove ref to pthread by @alfredh in https://github.com/baresip/baresip/pull/2379
- docs/ChangeLog:46       audio: set the correct variable to false if pthread_create() fails

https://github.com/tio/tio
- src/tty.c:43 #include <pthread.h>

https://github.com/9fans/plan9port
- acid/pthread-linux-386:6 complex nptl_pthread {
- src/libthread/pthread.c:6 static pthread_mutex_t initmutex = PTHREAD_MUTEX_INITIALIZER;
- INSTALL:54 		echo "LDFLAGS='-L/usr/X11R6/lib -pthread'" >> $PLAN9/config
- acid/thread:2 // pthread-specific access functions
- include/u.h:69 #	include <pthread.h>

https://github.com/traildb/traildb
- Makefile.am:56 tdbcli_tdb_LDFLAGS = -pthread
- tdbcli/thread_util.h:5 #include <pthread.h>
- wscript:170         ldflags      = ["-pthread"],
- tdbcli/thread_util.c:2 #include <pthread.h>

https://github.com/Water-Melon/Melon
- include/mln_log.h:43  * mln_log_init should be called before any pthread_create
- src/mln_iothread.c:43     pthread_mutex_init(&(t->io_lock), NULL);
- docs/book/cn/multithread.md:130    $ cc -o test test.c -I /path/to/melon/include -L /path/to/melon/lib -lmelon -lpthread
- src/mln_thread.c:14 #include <pthread.h>
- include/mln_utils.h:8 #include <pthread.h>

https://github.com/msteinbeck/tinyspline
- src/CMakeLists.txt:853       # Add libwinpthread if it exists, indicating that libstdc++ is linked

https://github.com/ptt/pttbbs
- daemon/mand/Makefile:46 	$(LIBEVENT_LIBS_l) -levent_pthreads \
- daemon/barebone/server.c:132     evthread_use_pthreads();
- daemon/boardd/Makefile:21 	-pthread -lstdc++ \

https://github.com/hyperrealm/libconfig
- aux-build/ltmain.sh:5633 	   # Do not include libc_r directly, use -pthread flag.

https://github.com/happyfish100/libfastcommon
- src/pthread_func.h:21 #include <pthread.h>
- src/pthread_func.c:33 #include "pthread_func.h"
- make.sh:208 pthread_path=''
- src/Makefile.in:10                    http_func.lo md5.lo pthread_func.lo local_ip_func.lo \
- src/avl_tree.h:22 #include <pthread.h>

https://github.com/jgmenu/jgmenu
- Makefile:23 jgmenu:         LIBS   += -pthread -lpng
- src/jgmenu.c:18 #include <pthread.h>

https://github.com/0intro/plan9
- sys/src/cmd/unix/drawterm/Make.pthread:3 PTHREAD=-pthread -DPTHREAD
- sys/src/cmd/gs/src/gp_psync.c:18 /* POSIX pthreads threads / semaphore / monitor implementation */
- sys/src/cmd/gs/src/unixansi.mak:243 # Most platforms require -lpthread for the POSIX threads library;
- sys/src/cmd/unix/drawterm/Make.sun:12 LDADD=-L$(X11)/lib -lX11 -lrt -lpthread -lsocket -lnsl
- sys/src/cmd/unix/drawterm/libc/lock.c:6 static pthread_mutex_t initmutex = PTHREAD_MUTEX_INITIALIZER;

https://github.com/moonlight-stream/moonlight-ios
- libs/OpenSSL.xcframework/ios-arm64/Headers/openssl/crypto.h:415 #   include <pthread.h>
- libs/SDL2/include/SDL_hints.h:1562 *  apply a thread priority.  For example on systems using pthreads the scheduler policy
- libs/OpenSSL.xcframework/tvos-arm64/Headers/openssl/crypto.h:415 #   include <pthread.h>
- libs/OpenSSL.xcframework/ios-arm64_x86_64-simulator/Headers/openssl/crypto.h:415 #   include <pthread.h>
- libs/OpenSSL.xcframework/tvos-arm64_x86_64-simulator/Headers/openssl/crypto.h:415 #   include <pthread.h>

https://github.com/riolet/rix
- ext/Wafer/wafer.h:31 #include <pthread.h>
- ext/Wafer/wafer.c:391     pthread_t con;

https://github.com/radareorg/radare2-book
- src/tools/rabin2/libraries.md:27 libpthread.so.0

https://github.com/ultravideo/kvazaar
- m4/ax_pthread.m4:2 #        http://www.gnu.org/software/autoconf-archive/ax_pthread.html
- src/threadwrapper/src/pthread.cpp:17 #include "pthread.h"
- src/threadwrapper/include/pthread.h:23 typedef void* pthread_cond_t;
- src/threadwrapper/README.md:3 Wraps pthread functions so that they actually call C++ standard functions.
- configure.ac:107 # We need to force AX_PTHREAD to check -pthread -lpthread since otherwise

https://github.com/powturbo/TurboPFor-Integer-Compression
- lib/idxqry.c:293 #include <pthread.h>
- lib/libext.mak:89 LDFLAGS+=-lpthread

https://github.com/thlorenz/learnuv
- learnuv.gyp:7             'cflags': [ '-pthreads' ],

https://github.com/pganalyze/pg_query
- ext/pg_query/pg_query.c:8 #include <pthread.h>
- ext/pg_query/include/pg_config.h:443 /* Define to 1 if you have the `pthread_barrier_wait' function. */
- ext/pg_query/src_backend_postmaster_postmaster.c:99 #include <pthread.h>

https://github.com/sipwise/rtpengine
- lib/auxlib.c:74 int thread_create(void *(*func)(void *), void *arg, bool joinable, pthread_t *handle, const char *name) {
- daemon/Makefile:9 CFLAGS+=	-pthread -fno-strict-aliasing
- lib/auxlib.h:8 #include <pthread.h>
- t/.ycm_extra_conf.py:18     '-pthread',
- lib/loglib.c:8 #include <pthread.h>

https://github.com/JiaoXianjun/BTLE
- host/cmake/modules/FindThreads.cmake:1 # Updated FindThreads.cmake that supports pthread-win32
- host/btle-tools/src/btle_rx.c:3 #include <pthread.h>
- host/btle-tools/src/CMakeLists.txt:56 target_link_libraries(btle_rx ${TOOLS_LINK_LIBS} m -lpthread)

https://github.com/sgminer-dev/sgminer
- util.h:82   pthread_mutex_t mutex;
- doc/windows-build.txt:54 * Install pthreads                                                                   *
- configure.ac:64 PTHREAD_FLAGS="-lpthread"
- compat.h:9 #include <pthread.h>
- events.c:58 	pthread_t pth;

https://github.com/lucasjones/cpuminer-multi
- miner.h:9 #include <pthread.h>
- configure.ac:53 PTHREAD_FLAGS="-pthread"
- util.c:65 	pthread_mutex_t		mutex;
- cpu-miner.c:178 pthread_mutex_t applog_lock;
- README.md:75  * If using MinGW-w64, install pthreads-w64

https://github.com/dstndstn/astrometry.net
- include/astrometry/an-thread-pthreads.h:9 #include <pthread.h>
- util/makefile.common:157 # gcc 3.3 on Mac doesn't support -pthread
- solver/threadtest.c:5 #include <pthread.h>
- include/astrometry/thread-specific.inc:6 #include <pthread.h>
- include/astrometry/an-thread.h:10  Some wrappers for threading functions.  We provide a pthreads

https://github.com/i-rinat/apulse
- src/trace.c:26 #include <pthread.h>
- src/ringbuffer.c:32     pthread_mutex_lock(&rb->lock);
- src/apulse-threaded-mainloop.c:35     pthread_mutex_lock(&m->lock);
- src/apulse.h:32 #include <pthread.h>
- src/ringbuffer.h:27 #include <pthread.h>

https://github.com/mirrorer/afl
- qemu_mode/patches/afl-qemu-cpu-inl.h:151   /* pthread_atfork() seems somewhat broken in util/rcu.c, and I'm
- docs/status_screen.txt:335       ./configure options include --without-threads, --disable-pthreads, or
- docs/ChangeLog:53   - Addressed a libtokencap / pthreads incompatibility issue. Likewise, spotted

https://github.com/notsecure/uTox
- docs/BUILD.md:21 ```clang -o utox *.c png/png.c -g -Wall -Wshadow -pthread -std=gnu99 `pkg-config --libs --cflags fontconfig freetype2 libtoxav libtoxcore openal vpx x11 xext xrender dbus-1 libv4lconvert filteraudio` -pthread -lm  -lresolv -ldl```
- Makefile:29 CFLAGS += -g -Wall -Wshadow -pthread -std=gnu99
- cocoa/video.m:3 #include <pthread.h>
- android/audio.c:44 pthread_mutex_t callback_lock;
- cocoa/main.m:4 #include <pthread.h>

https://github.com/openwrt-mirror/openwrt
- include/site/linux:32 ac_cv_func_pthread_key_delete=yes
- tools/mklibs/patches/009-uclibc_libpthread_symbols.patch:58 +            if soname == "libpthread.so.0":
- package/network/utils/iperf/Makefile:54   DEPENDS+= +libpthread
- scripts/ext-toolchain.sh:36 	pthread:  libpthread-* libpthread
- package/libs/gettext/src/m4/intl.m4:142   dnl because libtool also reorders the -lc to come before the -pthread, and

https://github.com/symisc/vedis
- vedis.h:134  *  Note that you must link Vedis with the POSIX threads library under UNIX systems (i.e: -lpthread).

https://github.com/brackeen/glfm
- examples/deps/file_compat.h:658 #include <pthread.h>
- src/glfm_android.c:15 #include <pthread.h>

https://github.com/getdnsapi/getdns
- src/util/locks.c:60 	if((err=pthread_sigmask(SIG_SETMASK, &sigset, NULL)))
- src/compat/arc4_lock.c:38 #include "pthread.h"
- src/util/orig-headers/locks.h:42  * If pthreads is available, these are used.
- CMakeLists.txt:399   message(WARNING "Neither pthreads nor Windows threading available.")
- src/context.c:66 #include <pthread.h>

https://github.com/nxengine/nxengine-evo
- CMakeLists.txt:143       pthread
- platform/win32/ext/include/SDL_hints.h:792 *  Support for this hint is currently available only in the pthread, Windows, and PSP backend.
- deps/spdlog/details/os.h:331     pthread_threadid_np(nullptr, &tid);

https://github.com/Meulengracht/MollenOS
- librt/compiler-rt/lib/dfsan/done_abilist.txt:180 fun:pthread_sigmask=discard
- librt/compiler-rt/lib/scudo/scudo_tsd.h:21 #include <pthread.h>
- librt/compiler-rt/lib/builtins/emutls.c:16 // There are 4 pthread key cleanup rounds on Bionic. Delay emutls deallocation
- librt/compiler-rt/lib/tsan/dd/CMakeLists.txt:17 append_list_if(COMPILER_RT_HAS_LIBPTHREAD pthread DD_LINKLIBS)
- librt/compiler-rt/lib/safestack/safestack.cpp:11 // for the main thread, as well as all pthreads that are created/destroyed

https://github.com/miranda-ng/miranda-ng
- libs/pthreads/src/pthread.c:2  * pthread.c
- libs/pthreads/src/pthread_exit.c:2  * pthread_exit.c
- libs/pthreads/src/pthread_self.c:2  * pthread_self.c
- libs/pthreads/src/pthread_join.c:2  * pthread_join.c
- libs/pthreads/src/pthread.h:9  *      Homepage: https://sourceforge.net/projects/pthreads4w/

https://github.com/cesanta/fossa
- src/util.c:100   pthread_t thread_id = (pthread_t) 0;
- examples/rules.mk:2 CFLAGS = -W -Wall -I../.. -pthread -DNS_ENABLE_SSL -DNS_ENABLE_IPV6 -DNS_ENABLE_THREADS -lssl -lcrypto $(CFLAGS_EXTRA) $(MODULE_CFLAGS)
- apps/load_balancer/Dockerfile:7     cc load_balancer.c fossa.c -o load_balancer -W -Wall -pthread -DNS_ENABLE_SSL -lssl -lcrypto
- apps/api_server/Makefile:3 CFLAGS = -W -Wall -pthread $(CFLAGS_EXTRA)
- apps/load_balancer/Makefile:7 CFLAGS = -W -Wall -pthread $(CFLAGS_EXTRA)

https://github.com/xiph/Icecast-Server
- ChangeLog:4586 	* trunk/icecast/acinclude.m4, trunk/m4/acx_pthread.m4: separate

https://github.com/oridb/mc
- lib/thread/spawn+osx.myr:50 		(0	: void#), \	/* pthread struct */
- lib/thread/start+osx-x64.s:2 #      %rdi: pthread (0, for us)
- lib/sys/sys+osx-x64.myr:652 	const Sys__pthread_kill	: scno = 0x2000148

https://github.com/opencog/link-grammar
- configure.ac:129 if test -n "$ax_pthread_ok"; then
- link-grammar/tokenize/spellcheck-hun.c:22 #include <pthread.h>
- link-grammar/tokenize/spellcheck-aspell.c:20 #include <pthread.h>

https://github.com/schnaader/precomp-cpp
- contrib/liblzma/Makefile:1 CFLAGS           = -g -c -std=gnu99 -DHAVE__BOOL -D_FILE_OFFSET_BITS=64 -m64 -O2 -Wno-implicit-function-declaration -pthread
- contrib/liblzma/common/mythread.h:100 // Using pthreads //
- changes_before_git.txt:4   to be changed (-static, -lpthread) to static link pthread (instead of depending on
- contrib/mingw_std_threads/mingw.thread.h:31 #error This version of MinGW seems to include a win32 port of pthreads, and probably    \
- contrib/mingw_std_threads/mingw.mutex.h:23 #error This version of MinGW seems to include a win32 port of pthreads, and probably    \

https://github.com/mirror/ncurses
- Ada95/configure.in:288 AC_MSG_CHECKING(if you want to use weak-symbols for pthreads)
- ncurses/term.priv.h:60 #include <pthread.h>
- package/ncursest.sym:6 #	--disable-getcap --disable-leaks --disable-root-environ --disable-termcap --enable-getcap --enable-getcap-cache --enable-hard-tabs --enable-termcap --with-pthread --with-termlib --with-trace --without-cxx-binding
- ncurses/tty/lib_tstp.c:293 	if ((pthread_self) && (pthread_kill) && (pthread_equal))
- ncurses/tinfo/lib_data.c:189     0,				/* use_pthreads */

https://github.com/kriswebdev/android_aircrack
- Android.mk:160 # error: unknown type name 'pthread_cond_t':
- src/osdep/cygwin_tap.c:25 #include <pthread.h>
- src/aircrack-ng.h:270 	pthread_cond_t cond;			/* condition for waiting when buffer is full until keys are tried and new keys can be written */
- src/airodump-ng.h:438     pthread_t input_tid;
- ChangeLog:805     * aircrack: various pthread enhancements & bugfixes

https://github.com/microsoft/PowerShell-DSC-for-Linux
- ext/python/README.txt:13      change: 'CXX= g++ -pthread'
- LCM/dsc/engine/ConfigurationManager/LocalConfigurationManager.c:40 static pthread_mutex_t g_TaskQueueMutex;

https://github.com/b-k/21st-Century-Examples
- pthread_factors.c:2 export CFLAGS="-g -Wall -O3 --std=c99 -pthread -fopenmp"
- pthreads.make:1 P=pthreads
- c_primes.c:2 export CFLAGS="-g -Wall -O3 --std=c11 -pthread -latomic"
- openmp_getmax.c:1 /* See compilation notes in atomic_factors.c, openmp_atoms.c, or pthread_factors.c*/
- c_factors.c:2 export CFLAGS="-g -Wall -O3 --std=c11 -pthread -latomic"

https://github.com/pgodschalk/swiperproxy
- include/streamhtmlparser/libtool:1941 	   # Do not include libc_r directly, use -pthread flag.
- include/streamhtmlparser/ltmain.sh:1589 	   # Do not include libc_r directly, use -pthread flag.

https://github.com/svn2github/word2vec
- makefile:3 CFLAGS = -lm -pthread -O3 -march=native -Wall -funroll-loops -Wno-unused-result
- demo-train-big-model-v1.sh:93 gcc word2vec.c -o word2vec -lm -pthread -O3 -march=native -funroll-loops
- word2vec.c:19 #include <pthread.h>
- word2phrase.c:19 #include <pthread.h>

https://github.com/heiher/hev-socks5-tproxy
- src/hev-jni.c:12 #include <pthread.h>
- Makefile:16 		-lpthread

https://github.com/PDFium/PDFium
- build/standalone.gypi:150       '-pthread', '-fno-exceptions',
- core/src/fxcodec/lcms2/lcms2-2.6/src/lcms2_internal.h:173 // windows does not support pthreads. 
- core/src/fxcodec/lcms2/lcms2-2.6/include/lcms2.h:58 // Uncomment to get rid of pthreads/windows dependency

https://github.com/parallella/pal
- src/base/pal_base_private.h:231 int pthread_yield(void);
- src/wrappers/erlang/erlpiphany/examples/dotproduct/build.sh:30 ${CROSS_PREFIX}gcc src/main.c -o bin/main.elf -I ${EINCS} -L ${ELIBS} -le-hal -le-loader -lpthread

https://github.com/opnsense/src
- lib/libc/gen/_pthread_stubs.c:33 #include <pthread.h>
- lib/libthr/pthread.map:8 	pthread_atfork;
- include/pthread_np.h:40 typedef void	(*pthread_switch_routine_t)(pthread_t, pthread_t);
- contrib/unbound/ax_pthread.m4:2 #        http://www.gnu.org/software/autoconf-archive/ax_pthread.html
- lib/libnetbsd/pthread.h:31 #include_next <pthread.h>

https://github.com/groupgets/LeptonModule
- software/flirpi/leptcam.c:14 #include <pthread.h>
- software/flirpi/Makefile:7 	$(CC) -o leptcam leptcam.c leptsci.o -lpthread $(CFLAGS)
- software/v4l2lepton/v4l2lepton.cpp:14 #include <pthread.h>
- software/v4l2lepton/Makefile:4 CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT -lpthread -lLEPTON_SDK -L/usr/lib/arm-linux-gnueabihf -L../raspberrypi_libs/leptonSDKEmb32PUB/Debug

https://github.com/flightonary/Moscapsule
- mosquitto/lib/dummypthread.h:4 #define pthread_create(A, B, C, D)
- mosquitto/lib/srv_mosq.c:44 		pthread_mutex_lock(&mosq->callback_mutex);
- mosquitto/lib/util_mosq.c:105 	pthread_mutex_lock(&mosq->msgtime_mutex);
- mosquitto/lib/socks_mosq.c:118 		pthread_mutex_lock(&mosq->state_mutex);
- mosquitto/lib/read_handle.c:123 			pthread_mutex_lock(&mosq->callback_mutex);

https://github.com/creationix/dukluv
- uv.cmake:172     pthread

https://github.com/osoumen/C700
- C700TimeThread.h:64 #include <pthread.h>
- CoreAudio/PublicUtility/CAMutex.h:24 	#include <pthread.h>
- CoreAudio/PublicUtility/CAGuard.h:26 //	This is your typical mutex with signalling implemented via pthreads.
- CoreAudio/PublicUtility/CAGuard.cpp:51 	OSStatus theError = pthread_cond_init(&mCondVar, NULL);
- CoreAudio/PublicUtility/CAHostTimeBase.h:24 	#include <pthread.h>

https://github.com/leleliu008/C-examples
- standard/posix/pthread.h/thread.c:2 #include<pthread.h>
- library/mbedTLS/AES/mbedtls/threading.c:71 static void threading_mutex_init_pthread( mbedtls_threading_mutex_t *mutex )
- standard/posix/pthread.h/thread4.c:2 #include<pthread.h>
- standard/posix/pthread.h/thread2.c:2 #include<pthread.h>
- library/libcurl/FindCURL.cmake:38             elseif(item MATCHES "/.*libpthread\\.(a|so|dylib)")

https://github.com/etwmc/Personal-HomeKit-HAP
- Accessory.cpp:17 pthread_mutex_t recordMutex;
- PHKNetworkIP.h:128     pthread_t thread;
- PHKAccessory.h:30 #include <pthread.h>
- PHKNetworkIP.cpp:60 #include <pthread.h>
- PHKAccessory.cpp:393     pthread_t thread;

https://github.com/glv2/bruteforce-luks
- configure.ac:25 AC_CHECK_LIB(pthread, pthread_create, [], AC_MSG_ERROR([POSIX threads library required]))
- src/bruteforce-luks.c:25 #include <pthread.h>

https://github.com/openss7/openss7
- src/lib/pthread.c:3  @(#) File: src/lib/pthread.c
- src/lib/gen.c:74 #include <pthread.h>
- src/lib/pipe.c:121 	pthread_setcanceltype(PTHREAD_CANCEL_DEFERRED, &oldtype);
- src/lib/osi.c:109 #include <pthread.h>
- src/lib/putpmsg.c:72   * Therefore, this function includes a call to pthread_testcancel() even though

https://github.com/cntools/cnping
- Makefile:43 	$(CC) $(CFLAGS) -o $@ $^ -lX11 -lm -lpthread -lGL $(LDFLAGS)

https://github.com/libressl/openbsd
- src/lib/libssl/ssl_init.c:20 #include <pthread.h>
- src/lib/libtls/tls_bio_cb.c:35 static pthread_mutex_t bio_cb_method_lock = PTHREAD_MUTEX_INITIALIZER;
- src/lib/libtls/tls_signer.c:39 static pthread_mutex_t signer_method_lock = PTHREAD_MUTEX_INITIALIZER;
- src/lib/libcrypto/man/CRYPTO_lock.3:123 .Xr pthread_mutex_lock 3
- src/regress/lib/libc/locale/uselocale/Makefile:5 LDFLAGS +=	-pthread

https://github.com/ElektraInitiative/libelektra
- src/tools/race/race.c:14 #include <pthread.h>
- examples/highlevel/README.md:48 use a C++ Compiler for linking and also need to link with `-ldbus-1` (depending on PLUGINS), `-lz`, `-lm` and `-pthread`.
- src/tools/race/CMakeLists.txt:6 	# macOS does not provide pthread_barrier_t and all related functions are not to be found. Thus we exclude the race test from macOS.
- src/plugins/crypto/crypto.c:21 #include <pthread.h>
- src/tools/pythongen/Makefile:23 	LFLAGS=-lelektra-meta `pkg-config --libs elektra` -pthread -Wl,-rpath `pkg-config --variable=libdir elektra`

https://github.com/cheetahmobile/tsunami-udp
- win32compat/pthreads-w32-2-7-0-release/pthread.c:2  * pthread.c
- win32compat/pthreads-w32-2-7-0-release/pthread.dsw:6 Project: "pthread"=.\pthread.dsp - Package Owner=<4>
- win32compat/pthreads-w32-2-7-0-release/pthread_self.c:2  * pthread_self.c
- win32compat/pthreads-w32-2-7-0-release/pthread_join.c:2  * pthread_join.c
- win32compat/pthreads-w32-2-7-0-release/pthread_detach.c:2  * pthread_detach.c

https://github.com/e-lab/torch-toolbox
- Video-decoder/livecam.c:6 #include <pthread.h>
- Video-decoder/video_decoder.c:22 #include <pthread.h>
- Video-decoder/libgl.c:8 #include <pthread.h>
- Face-align-Kazemi/libvideo/video_decoder.c:22 #include <pthread.h>

https://github.com/facebook/tac_plus
- tacacs-F4.0.4.28/aconf/acx_pthread.m4:3 #           http://www.nongnu.org/autoconf-archive/acx_pthread.html
- tacacs-F4.0.4.28/Makefile.in:103 am__aclocal_m4_deps = $(top_srcdir)/aconf/acx_pthread.m4 \
- tacacs-F4.0.4.28/aconf/ltmain.sh:7300 	   # Do not include libc_r directly, use -pthread flag.
- tacacs-F4.0.4.28/aclocal.m4:1205 m4_include([aconf/acx_pthread.m4])

https://github.com/Clover-EFI-Bootloader/clover
- Library/OpensslLib/openssl-1.0.1e/crypto/threads/pthread.sh:3 # build using pthreads
- Library/OpensslLib/openssl-1.0.1e/crypto/threads/th-lock.c:78 #include <pthread.h>
- GrubFS/grub/grub-core/lib/libgcrypt/src/ChangeLog-2011:1029 	* Makefile.am (ltlib_libgcrypt_pthread, ltlib_libgcrypt_pth): Removed.
- Library/OpensslLib/openssl-1.0.1e/crypto/threads/README:12 The Linux pthreads package can be retrieved from 
- Library/OpensslLib/openssl-1.0.1e/crypto/threads/mttest.c:78 #include <pthread.h>

https://github.com/peter-iakovlev/MtProtoKit
- MTProtoKit/MTFileBasedKeychain.m:5 #import <pthread.h>

https://github.com/jacket-code/redlock-cpp
- hiredis/Makefile:88 	$(CC) -o examples/$@ $(REAL_CFLAGS) $(REAL_LDFLAGS) -I. -I$(AE_DIR) $< $(AE_DIR)/ae.o $(AE_DIR)/zmalloc.o $(AE_DIR)/../deps/jemalloc/lib/libjemalloc.a -pthread $(STLIBNAME)

https://github.com/LPD-EPFL/ASCYLIB
- include/mcs.h:48 #include <pthread.h>
- include/barrier.h:33   pthread_cond_t complete;
- common/Makefile.common:88 # (ld.so), and system libraries (libc.so and libpthread.so), so it is
- src/noise/noise.c:94   pthread_t threads[num_threads];
- include/lock_if.h:32 typedef pthread_mutex_t ptlock_t;

https://github.com/baruch/libwire
- src/coro.c:395 /* pthread backend                                                           */
- src/CMakeLists.txt:29 target_link_libraries(wire PUBLIC pthread dl)
- src/wire_io.c:8 #include <pthread.h>
- include/coro.h:56  * 2008-04-04 New (but highly unrecommended) pthreads backend.
- README.md:129 uses pthread mutexes and conditions and may block but hopefully contention on

https://github.com/troglobit/uftpd
- ChangeLog.md:499   - Use `fork()` instead of pthreads for FTP client sessions.

https://github.com/eeertekin/bbcp
- src/bbcp_Pthread.h:31 #include <pthread.h>
- src/bbcp_Pthread.C:48    retc = pthread_cond_wait(&cvar, &cmut);
- src/Makefile:15 AIXLIBS    =  -q64 -L/usr/lib -lz -lpthreads
- src/bbcp_RTCopy.h:30 #include <pthread.h>
- src/bbcp_ProcMon.h:58 pthread_t      mytid;

https://github.com/cztomczak/cefcapi
- include/base/internal/cef_lock_impl.h:40 #include <pthread.h>
- include/internal/cef_thread_internal.h:37 #include <pthread.h>

https://github.com/yonch/fastpass
- src/tcp-benchmark/Makefile:6 LDFLAGS = -lm -pthread -lrt

https://github.com/BarrelfishOS/barrelfish
- lib/libc/gen/_pthread_stubs.c:31 #include <pthread.h>
- lib/posixcompat/pthreads.c:10 #include <pthread.h>
- include/pthread.h:42 #include <sys/_pthreadtypes.h>
- include/pthread_np.h:40 typedef void	(*pthread_switch_routine_t)(pthread_t, pthread_t);
- lib/libc/gen/__pthread_mutex_init_calloc_cb_stub.c:36 #include <pthread.h>

https://github.com/dpryan79/MethylDackel
- main.c:3 #include <pthread.h>
- Makefile:5 CFLAGS ?= -Wall -g -O3 -pthread
- perRead.c:11 #include <pthread.h>
- MethylDackel.h:14 extern pthread_mutex_t positionMutex;
- extract.c:14 #include <pthread.h>

https://github.com/mariusv/Gray-Hacker-and-PenTesting
- Other_Hackings/useful_lists/files_and_dir_lists/passwords/Dictionaries/foldoc.txt:7823 upthread
- Other_Hackings/useful_lists/files_and_dir_lists/passwords/Dictionaries/jargon.txt:8935 upthread

https://github.com/wuxinxinggg/linux_kernel_driver
- example/serial_test/test_ap/test_serial_ap.c:11 #include <pthread.h>

https://github.com/CyanogenMod/android_kernel_oneplus_msm8974
- Documentation/pi-futex.txt:63 locks (such as futex-based pthread mutexes) is priority inheritance:
- tools/usb/Makefile:4 PTHREAD_LIBS = -lpthread
- tools/usb/testusb.c:1 /* $(CROSS_COMPILE)cc -Wall -Wextra -g -lpthread -o testusb testusb.c */
- Documentation/rt-mutex.txt:5 which enable pthread_mutex_t priority inheritance attributes
- Documentation/robust-futexes.txt:27 process exits prematurely while holding a pthread_mutex_t lock that is

https://github.com/CyanogenMod/android_device_qcom_common
- power/power.c:45 #include <pthread.h>

https://github.com/fboris/STM32Cube_FW_F4
- Drivers/CMSIS/Documentation/RTOS/html/search/all_70.js:6   ['pthread',['pthread',['../structos_thread_def__t.html#ad3c9624ee214329fb34e71f544a6933e',1,'osThreadDef_t']]],
- Drivers/CMSIS/Documentation/RTOS/html/search/typedefs_6f.js:3   ['os_5fpthread',['os_pthread',['../cmsis__os_8h.html#aee631e5ea1b700fc35695cc7bc574cf7',1,'cmsis_os.h']]],
- Drivers/CMSIS/RTOS/cmsis_os.h:209 /// \note MUST REMAIN UNCHANGED: \b os_pthread shall be consistent in every CMSIS-RTOS.
- Drivers/CMSIS/Documentation/RTOS/html/structos_thread_def__t.js:4     [ "pthread", "structos_thread_def__t.html#ad3c9624ee214329fb34e71f544a6933e", null ],
- Drivers/CMSIS/Documentation/RTOS/html/structos_thread_def__t.html:128 <tr class="memitem:ad3c9624ee214329fb34e71f544a6933e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="cmsis__os_8h.html#aee631e5ea1b700fc35695cc7bc574cf7">os_pthread</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structos_thread_def__t.html#ad3c9624ee214329fb34e71f544a6933e">pthread</a></td></tr>

https://github.com/LeMaker/WiringBP
- wiringPi/softPwm.c:26 #include <pthread.h>
- examples/wfi.c:40 //	This is interpreted internally as a pthread_mutex by wiringPi
- gpio/Makefile:36 LIBS    = -lwiringPi -lwiringPiDev -lpthread -lm
- wiringPi/mcp23008.c:26 #include <pthread.h>
- wiringPi/mcp23016.c:26 #include <pthread.h>

https://github.com/ChibiOS/ChibiOS-Contrib
- demos/TIVA/RT-TM4C1294-LAUNCHPAD-LWIP/main.c:19 #include "lwipthread.h"

https://github.com/Litchee/LinkIt-ONE-IDE
- hardware/tools/g++_arm_none_eabi/arm-none-eabi/include/pthread.h:1 /*  pthread.h
- hardware/tools/g++_arm_none_eabi/arm-none-eabi/include/sys/types.h:274 typedef __uint32_t pthread_t;            /* identify a thread */
- hardware/tools/g++_arm_none_eabi/arm-none-eabi/include/sys/signal.h:15 #include <sys/types.h>   /* for pthread data types */
- hardware/tools/g++_arm_none_eabi/arm-none-eabi/include/c++/4.4.1/arm-none-eabi/bits/gthr-tpf.h:39 /* Some implementations of <pthread.h> require this to be defined.  */
- hardware/tools/g++_arm_none_eabi/arm-none-eabi/include/time.h:202 /* values for the pthread cputime_clock_allowed attribute */

https://github.com/scheduler-tools/rt-app
- configure.ac:15 AC_CHECK_LIB([pthread], [pthread_create])
- src/rt-app_types.h:29 #include <pthread.h>
- doc/tutorial.txt:154 create the structures of the task but will not create a pthread.
- src/rt-app.c:31 #include <pthread.h>
- src/rt-app_parse_config.c:197 	pthread_mutexattr_init(&data->res.mtx.attr);

https://github.com/CyanogenMod/android_kernel_htc_msm8974
- Documentation/pi-futex.txt:63 locks (such as futex-based pthread mutexes) is priority inheritance:
- tools/usb/Makefile:4 PTHREAD_LIBS = -lpthread
- tools/usb/testusb.c:1 /* $(CROSS_COMPILE)cc -Wall -Wextra -g -lpthread -o testusb testusb.c */
- Documentation/rt-mutex.txt:5 which enable pthread_mutex_t priority inheritance attributes
- Documentation/robust-futexes.txt:27 process exits prematurely while holding a pthread_mutex_t lock that is

https://github.com/OpenAutomationTechnologies/openPOWERLINK_V2
- apps/demo_cn_console/linux.cmake:35 SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wall -Wextra -pedantic -std=c99 -pthread")
- stack/src/user/sdo/sdoudp-linux.c:50 #include <pthread.h>
- apps/common/src/system/system-linux.c:48 #include <pthread.h>
- stack/src/user/event/eventucal-linux.c:52 #include <pthread.h>
- stack/src/user/timer/timer-linuxuser.c:50 #include <pthread.h>

https://github.com/scorelab/OpenDF
- sleuthkit/m4/ax_pthread.m4:2 #        http://www.gnu.org/software/autoconf-archive/ax_pthread.html
- sleuthkit/man/Makefile:38 am__aclocal_m4_deps = $(top_srcdir)/m4/ax_pthread.m4 \
- sleuthkit/tsk/img/aff.h:20 // mingw's pthread.h will try to read a config.h if HAVE_CONFIG_H
- sleuthkit/tsk/libtsk.la:17 inherited_linker_flags=' -pthread'
- sleuthkit/configure.ac:8 m4_include([m4/ax_pthread.m4])

https://github.com/gameplay3d/gameplay-deps
- vorbis-1.3.4/configure.ac:235 AC_CHECK_LIB(pthread, pthread_create, pthread_lib="-lpthread", :)
- openal-1.16.0/config.h.in:130 /* Define if we have pthread_np.h */
- curl-7.39.0/lib/curl_threads.c:27 #    include <pthread.h>
- openal-1.16.0/common/threads.c:487 #include <pthread.h>
- openal-1.16.0/include/threads.h:125 #include <pthread.h>

https://github.com/betolj/ndpi-netfilter
- nDPI-patch/src/include/ndpi_unix.h:34 #include <pthread.h>
- nDPI-patch/src/lib/ndpi_main.c:4750   int pthread_mutex_init(pthread_mutex_t *mutex, void *unused) {
- nDPI-patch/src/include/ndpi_main.h:36 #include <pthread.h>
- nDPI-patch/src/include/ndpi_includes.h:45 #include <pthread.h>

https://github.com/JMQCode/iBooks
- jni/djvu/atomic.cpp:40 // #include <pthread.h>
- jni/djvu/GThreads.cpp:382 #define pthread_key_create pthread_keycreate
- jni/readium/jni_concurrent.c:14 #include <pthread.h>
- jni/djvu/config.h:110 /* Define if pthreads are available */
- jni/jpeg/libtool:5060 	   # Do not include libc_r directly, use -pthread flag.

https://github.com/tobetter/wiringPi
- wiringPi/softPwm.c:27 #include <pthread.h>
- examples/wfi.c:40 //	This is interpreted internally as a pthread_mutex by wiringPi
- wiringPi/pcf8574.c:26 #include <pthread.h>
- gpio/Makefile:40 LIBS    = -lwiringPi -lwiringPiDev -lpthread -lrt -lm -lcrypt
- examples/Makefile:36 LDLIBS    = -lwiringPi -lwiringPiDev -lpthread -lm -lcrypt -lrt

https://github.com/ni/linux
- tools/perf/perf.h:15 void pthread__unblock_sigwinch(void);
- Documentation/block/ublk.rst:119   pthread & io_uring for handling ublk IO), this command is sent to the
- tools/virtio/Makefile:8 CFLAGS += -pthread
- scripts/sorttable.h:104 pthread_t orc_sort_thread;
- Documentation/locking/pi-futex.rst:64 locks (such as futex-based pthread mutexes) is priority inheritance:

https://github.com/NetEase/libpomelo2
- src/pc_mutex.h:42 #include <pthread.h>
- deps/uv/configure.ac:40 # TODO(bnoordhuis) Check for -pthread vs. -pthreads
- deps/uv/src/unix/thread.c:25 #include <pthread.h>
- deps/uv/Makefile.am:39 libuv_la_CFLAGS += -pthread
- deps/uv/ChangeLog:32 * unix: check Android support for pthread_cond_timedwait_monotonic_np (Leith

https://github.com/regehr/itc-benchmarks
- 01.w_Defects/stubs.c:9 #include <pthread.h>
- include/HeaderFile.hpp:13 #include<pthread.h>
- 01.w_Defects/Makefile.am:2 AM_CFLAGS = -pthread
- 01.w_Defects/livelock.c:19 pthread_mutex_t livelock_001_glb_A;
- 01.w_Defects/sleep_lock.c:12 * #include <pthread.h>

https://github.com/ofiwg/fabtests
- include/freebsd/osd.h:37 #include <pthread_np.h>

https://github.com/aressky/TSF4G
- tutorials/tconnd/tconnd_client/source/tconnd_client.c:7 #include <pthread.h>
- tutorials/tconnd/tconnd_client/Makefile:6 DEPLIBS=-ltlibc -lpthread

https://github.com/Kalroth/cgminer-3.7.2-kalroth
- util.h:72 	pthread_mutex_t mutex;
- configure.ac:64 PTHREAD_FLAGS="-lpthread"
- findnonce.c:16 #include <pthread.h>
- driver-avalon.h:144 	pthread_t read_thr;
- driver-hashfast.h:83 	pthread_mutex_t lock;

https://github.com/jorya/raw-os
- extension/posix/pthread.c:31 #include <posix/pthread.h>
- extension/posix/pthread_cond.c:31 #include <posix/pthread.h>
- extension/posix/pthread_mutex.c:31 #include <posix/pthread.h>
- extension/include/posix/pthread.h:16 typedef RAW_S32 pthread_condattr_t;
- extension/posix/time.c:31 #include <posix/pthread.h>

https://github.com/NamelessRom/android_kernel_samsung_smdk4412
- Documentation/pi-futex.txt:63 locks (such as futex-based pthread mutexes) is priority inheritance:
- tools/usb/Makefile:4 PTHREAD_LIBS = -lpthread
- tools/usb/testusb.c:1 /* $(CROSS_COMPILE)cc -Wall -Wextra -g -lpthread -o testusb testusb.c */
- Documentation/rt-mutex.txt:5 which enable pthread_mutex_t priority inheritance attributes
- tools/perf/util/top.c:39 	pthread_mutex_lock(&top->active_symbols_lock);

https://github.com/shengjuntu/onvif-ipcam
- threads.h:82 # include <unistd.h>	/* defines _POSIX_THREADS if pthreads are available */
- wsseapi.c:1396     mutex_buf = (MUTEX_TYPE*)malloc(CRYPTO_num_locks() * sizeof(pthread_mutex_t));

https://github.com/coolsee/OpenMugen
- src/thread/pthread/SDL_syscond.c:27 #include <pthread.h>
- src/thread/pthread/SDL_sysmutex.c:24 #include <pthread.h>
- src/thread/pthread/SDL_systhread.c:24 #include <pthread.h>
- src/thread/pthread/SDL_sysmutex_c.h:28 	pthread_mutex_t id;
- src/thread/pthread/SDL_systhread_c.h:24 #include <pthread.h>

https://github.com/jerryscript-project/jerryscript
- tests/unit-doc/CMakeLists.txt:75 # Disable 02.API-REFERENCE-create-context.c on Windows, because there is no pthread on it.

https://github.com/stanfordnlp/GloVe
- Makefile:3 # CFLAGS = -lm -pthread -Ofast -march=native -funroll-loops -Wno-unused-result
- src/glove.c:34 // windows pthread.h is buggy, but this #define fixes it

https://github.com/machyve/xhyve
- src/pm.c:32 #include <pthread.h>
- src/mem.c:38 #include <pthread.h>
- src/ps2kbd.c:37 #include <pthread.h>
- src/atkbdc.c:39 #include <pthread.h>
- src/pci_irq.c:32 #include <pthread.h>

https://github.com/microsoft/WinObjC
- include/pthread.h:42 #include <sys/_pthreadtypes.h>
- Frameworks/Starboard/pthread.cpp:30 #include "pthread.h"
- tools/include/WOCStdLib/sys/_pthreadtypes.h:44 struct pthread;
- include/Foundation/NSRunLoop.h:21 #import <pthread.h>
- Frameworks/Foundation/NSThread.mm:25 #include <pthread.h>

https://github.com/greenplum-db/gpdb
- config/ax_pthread.m4:2 #        https://www.gnu.org/software/autoconf-archive/ax_pthread.html
- src/port/pthread-win32.h:2  * src/port/pthread-win32.h
- src/interfaces/libpq/pthread-win32.c:3 * pthread-win32.c
- src/interfaces/ecpg/include/ecpg-pthread-win32.h:1 /* src/interfaces/ecpg/include/ecpg-pthread-win32.h */
- src/port/thread.c:23  *	strerror().  Other operating systems use pthread_setspecific()

https://github.com/akopytov/sysbench
- m4/acx_pthread.m4:1 ##### http://autoconf-archive.cryp.to/acx_pthread.html
- src/sysbench.h:33 # include <pthread.h>
- configure.ac:209 pthread.h \
- src/sb_thread.c:20    Wrappers around pthread_create() and friends to provide necessary
- src/sb_logger.c:60 static pthread_mutex_t text_mutex;

https://github.com/libfuse/sshfs
- cache.c:16 #include <pthread.h>
- compat/darwin_compat.c:52     if (pthread_cond_init(&sem->__data.local.count_cond, NULL)) {
- compat/darwin_compat.h:9 #include <pthread.h>
- sshfs.c:31 #include <pthread.h>

https://github.com/premake/premake-core
- contrib/mbedtls/programs/ssl/ssl_pthread_server.c:2  *  SSL server demonstration program using pthread for handling multiple
- contrib/curl/lib/curl_threads.c:29 #    include <pthread.h>
- contrib/mbedtls/library/CMakeLists.txt:3 option(LINK_WITH_PTHREAD "Explicitly link mbed TLS library to pthread." OFF)
- contrib/mbedtls/programs/README.md:82 * [`ssl/ssl_pthread_server.c`](ssl/ssl_pthread_server.c): a simple HTTPS server using one thread per client to send a fixed response. This program requires the pthread library.
- contrib/mbedtls/library/threading.c:65 static void threading_mutex_init_pthread( mbedtls_threading_mutex_t *mutex )

https://github.com/google/honggfuzz
- subproc.h:27 #include <pthread.h>
- subproc.c:552     honggfuzz_t* hfuzz, pthread_t* thread, void* (*thread_func)(void*), bool joinable) {
- honggfuzz.c:188     if (pthread_sigmask(SIG_UNBLOCK, &ss, NULL) != 0) {
- Makefile:30 COMMON_LDFLAGS := -pthread -L/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib -lm
- examples/bind/bind-9.16.0.patch:20  		pthread_t thread;

https://github.com/mofarrell/p2pvc
- src/p2pvc.c:149     pthread_t thr;
- src/audio.c:82 static pthread_mutex_t conslock;
- src/p2plib.c:229 int p2p_broadcast(connection_t **cons, size_t *conslen, pthread_mutex_t *consmutex, const void *buf, size_t buflen) {
- src/inc/p2plib.h:11 #include <pthread.h>
- src/pa_unix_util.c:44 #include <pthread.h>

https://github.com/gozfree/gear-lib
- gear-lib/libposix/pthreads4w/pthread.c:2  * pthread.c
- gear-lib/libposix/pthreads4w/pthread_join.c:2  * pthread_join.c
- gear-lib/libposix/pthreads4w/pthread_once.c:2  * pthread_once.c
- gear-lib/libposix/pthreads4w/pthread_self.c:2  * pthread_self.c
- gear-lib/libposix/pthreads4w/pthread_exit.c:2  * pthread_exit.c

https://github.com/xroche/httrack
- config.h.in:115 /* Check for pthread in pthreads */
- configure.ac:203 ### Check for pthread
- src/htsthread.c:146     pthread_attr_t attr;
- src/htsthread.h:38 #include <pthread.h>
- ltmain.sh:7135 	   # Do not include libc_r directly, use -pthread flag.

https://github.com/GStreamer/gstreamer
- subprojects/gstreamer/meson.build:289                #include <pthread.h>
- subprojects/gstreamer/docs/random/wtay/states:10   !      its pthread etc..)
- subprojects/gst-python/testsuite/gstpython.supp:2    pthread leak
- subprojects/gst-examples/vulkan/android/jni/vulkan-1.c:9 #include <pthread.h>
- subprojects/gstreamer/docs/random/matth/scheduling.txt:19    for pthread versions of Thread and Queue.

https://github.com/jedisct1/minisign
- CMakeLists.txt:77   target_compile_options(minisign PUBLIC "-pthread")

https://github.com/cyring/CoreFreq
- README.md:82 cc -Wall -pthread -c corefreqd.c -o corefreqd.o
- Makefile:109 	$(CC) $(OPTIM_FLG) $(WARNING) -pthread -c corefreqd.c \
- corefreqm.c:8 #include <pthread.h>
- corefreqd.c:23 #include <pthread.h>

https://github.com/Snaipe/Criterion
- src/mutex.c:48     static pthread_mutex_t once = PTHREAD_MUTEX_INITIALIZER;
- src/compat/time.c:44 # include <pthread.h>
- doc/debug.rst:108     0x00007f9ea3780f3d in raise () from /usr/lib/libpthread.so.0
- src/mutex.h:46 # include <pthread.h>

https://github.com/arkdb/inception
- mysys/my_pthread.c:33 /* To allow use of pthread_getspecific with two arguments */
- include/my_pthread.h:18 #ifndef _my_pthread_h
- sql/ndb_share.h:158   pthread_mutex_t mutex;
- sql/sql_connect.h:19 #include "my_sys.h"                          /* pthread_handler_t */
- dbug/my_main.c:11 #include <my_pthread.h>

https://github.com/mattiasgustavsson/libs
- thread.h:622     #include <pthread.h>

https://github.com/wb2osz/direwolf
- src/direwolf.h:124 //#include "pthreads/pthread.h"
- src/tq.c:70 static pthread_cond_t wake_up_cond[MAX_CHANS];		/* Notify transmit thread when queue not empty. */
- src/dlq.c:74 static pthread_mutex_t dlq_mutex;		/* Critical section for updating queues. */
- src/dns_sd_avahi.c:43 #include <pthread.h>
- src/kiss.c:196 	pthread_t kiss_pterm_listen_tid;

https://github.com/cloudflare/cloudflare-blog
- 2021-05-branch-prediction/main.c:16 #include <pthread.h>
- 2021-05-branch-prediction/perf.c:128 #include <pthread.h>

https://github.com/seppo0010/rlite
- src/Makefile:45 LIBS=-lm -lpthread
- tests/pubsub-test.c:5 #include <pthread.h>
- tests/signal-test.c:5 #include <pthread.h>
- tests/wal-test.c:3 #include <pthread.h>
- tests/Makefile:1 LIBS=-lm -lpthread

https://github.com/dibyendumajumdar/ravi
- mir/mir.h:88 #include <pthread.h>
- mir/mir.c:3741 #include <pthread.h>
- src/ravi_alloc.c:116        pthread mutex, win32 critical section, or a spin-lock if if
- mir/mir-gen.c:142   pthread_t gen_thread;

https://github.com/btrask/stronglink
- res/experiments/2014-05-22-efs-server.c:16 #include <pthread.h>
- res/experiments/2014-07-28-efs-profile.txt:19 | + 12.2%, _pthread_start, libSystem.B.dylib
- res/experiments/2014-10-27-db-leveldb.c:252 		pthread_mutex_unlock(env->wlock);
- Makefile:161 LIBS += -lpthread -lobjc -lm
- res/experiments/2015-08-05-libuv-runloop-death.c:7 $ cc -Wall -Wextra -Wno-unused-parameter ./2015-08-05-libuv-runloop-death.c -luv -lpthread -o 2015-08-05-libuv-runloop-death && ./2015-08-05-libuv-runloop-death

https://github.com/szcom/rnnlib
- hdf5_snap/src/H5TS.c:74  *    H5TS_pthread_first_thread_init
- hdf5_snap/src/H5TSprivate.h:81     pthread_t owner_thread;		/* current lock owner */
- hdf5_snap/src/H5win32defs.h:92 /* Don't use actual pthread_self on Windows because the return
- hdf5_snap/src/H5config.h.in:217 /* Define to 1 if you have the `pthread' library (-lpthread). */
- CMakeLists.txt:167 	LIST ( APPEND rnnlib_LIBS pthread dl ) 

https://github.com/autoas/as
- com/as.infrastructure/system/kernel/askar/kernel/kernel_internal.h:393 struct pthread
- com/as.infrastructure/system/kernel/askar/kernel/posix/pthread.c:18 #include "pthread.h"
- com/as.infrastructure/system/kernel/askar/kernel/posix/pthread_attr.c:18 #include "pthread.h"
- com/as.infrastructure/system/kernel/askar/kernel/posix/include/pthread.h:39 struct pthread;
- com/as.application/Kconfig:41 	bool "askar pthread test case"

https://github.com/leenjewel/openssl_for_ios_and_android
- example/ios/test_cpphttplib_by_app/http/openssl/crypto.h:406 #   include <pthread.h>
- example/ios/test_cpphttplib_by_app/http/httplib.h:52 #include <pthread.h>
- example/ios/test_cpphttplib_by_app/http/httplib copy.h:52 #include <pthread.h>
- example/ios/demo2/test_curl_with_ssl_and_http2_ios/test/include/openssl/crypto.h:415 #   include <pthread.h>
- example/android/test_cpphttplib_for_app_on_android/app/src/main/cpp/http/httplib.h:52 #include <pthread.h>

https://github.com/dzavalishin/phantomuserland
- include/pthread.h:9 typedef tid_t pthread_t; // funny
- include/acpi/acphantom.h:41 /* On Cygwin, pthread_t is a pointer */
- etc/experiments/cpfs/os.c:30 #include <pthread.h>
- phantom/vm/unix_hal_unix.c:15 #include <pthread.h>
- etc/experiments/cpfs/main.c:31 #include <pthread.h>

https://github.com/google/packetdrill
- gtests/net/packetdrill/run.h:60 #include <pthread.h>
- gtests/net/packetdrill/CMakeLists.txt:88 set(packetdrill-ext-libs pthread pcap dl)
- gtests/net/packetdrill/run.c:82 	if (pthread_mutex_init(&state->mutex, NULL) != 0)
- gtests/net/packetdrill/run_system_call.h:30 #include <pthread.h>
- gtests/net/packetdrill/Makefile.NetBSD:1 packetdrill-ext-libs := -lpthread -lpcap

https://github.com/avluis/Hentoid
- app/ai-upscale/src/main/cpp/libwebp/m4/ax_pthread.m4:2 #        http://www.gnu.org/software/autoconf-archive/ax_pthread.html
- app/ai-upscale/src/main/cpp/libwebp/src/dsp/cpu.h:178 #include <pthread.h>  // NOLINT
- app/ai-upscale/src/main/cpp/libwebp/src/utils/thread_utils.c:24 typedef HANDLE pthread_t;
- app/ai-upscale/src/main/cpp/libwebp/sharpyuv/sharpyuv.c:432 #include <pthread.h>  // NOLINT
- app/ai-upscale/src/main/cpp/libwebp/ChangeLog:491 170a8712 Fix check_c_source_compiles with pthread.

https://github.com/dovecot/core
- src/lib-sql/driver-cassandra.c:23 #include <pthread.h>

https://github.com/boazsegev/iodine
- ext/iodine/fiobj_str.c:40 #include <pthread.h>
- ext/iodine/fiobj_hash.c:39 #include <pthread.h>
- ext/iodine/iodine_defer.c:11 #include <pthread.h>
- ext/iodine/iodine_caller.c:8 #include <pthread.h>
- ext/iodine/fiobj_numbers.c:15 #include <pthread.h>

https://github.com/seccomp/libseccomp
- tests/47-live-kill_process.c:24 #include <pthread.h>
- tests/Makefile.am:25 AM_LDFLAGS = ${DBG_STATIC} -lpthread

https://github.com/alexandervdm/gummi
- configure.ac:69 GUI_LIBS="$GUI_LIBS -pthread -lm -lz"

https://github.com/owntracks/recorder
- mongoose.c:144 #include <pthread.h>
- Makefile:24 LIBS += -lpthread

https://github.com/MaJerle/stm32fxxx-hal-libraries
- 00-STM32_LIBRARIES/FreeRTOS/CMSIS_RTOS/cmsis_os.h:271 /// \note MUST REMAIN UNCHANGED: \b os_pthread shall be consistent in every CMSIS-RTOS.
- 00-STM32_LIBRARIES/FreeRTOS/CMSIS_RTOS/cmsis_os.c:190   if (xTaskCreate((TaskFunction_t)thread_def->pthread,(const portCHAR *)thread_def->name,

https://github.com/riverloopsec/killerbee
- scripts/zbfind:874         self.stopthread = Event()

https://github.com/McGill-DMaS/Kam1n0-Community
- kam1n0/kam1n0-commons/src/main/java/ca/mcgill/sis/dmas/kam1n0/framework/disassembly/LibcUtils.java:9 	public static final Set<String> c_calls = Arrays.asList("*pthread_getspecific", "*sbrk", "*sem_open", "__fbufsize",

https://github.com/facebook/openbmc
- common/recipes-lib/ipc/files/ipc.h:5 #include <pthread.h>
- common/recipes-core/kcsd/files/Makefile:5 LDFLAGS += -pthread -lipmi -lgpio-ctrl -llog
- common/recipes-lib/ipc/files/ipc.c:23 #include <pthread.h>
- common/recipes-lib/ipmb/files/ipmb.c:32 #include <pthread.h>
- common/recipes-core/kcsd/files/kcsd.c:52 #include <pthread.h>

https://github.com/saprykin/plibsys
- src/pmutex-posix.c:30 #include <pthread.h>
- src/puthread-posix.c:39 #include <pthread.h>
- cmake/ThreadNameDetect.cmake:24 function (plibsys_detect_thread_name has_pthread_np_h result)
- src/psysclose-darwin.c:49  * with __DARWIN_NON_CANCELABLE, which prevents them from being pthread
- platforms/aix-gcc/platform.cmake:8 set (PLIBSYS_PLATFORM_LINK_LIBRARIES c_r -pthread)

https://github.com/jmk-foofus/medusa
- config.h.in:42 /* Define to 1 if you have the `pthread' library (-lpthread). */
- src/medusa.h:30 #include <pthread.h>
- src/medusa-thread-ssl.c:17    OpenSSL in a multi-threaded environment. OpenSSL 1.1.0 now finds pthreads
- src/medusa-thread-pool.c:36   pthread_t active_tid; /* active thread id */
- configure.ac:44 AS_MESSAGE([checking for pthread support...])

https://github.com/RasPlex/OpenPHT
- lib/gtest/m4/acx_pthread.m4:2 #    http://svn.0pointer.de/viewvc/trunk/common/acx_pthread.m4?revision=1277&root=avahi
- lib/ffmpeg/libavfilter/pthread.c:36 #include <pthread.h>
- lib/ffmpeg/libavcodec/pthread_slice.c:28 #include <pthread.h>
- lib/libdvd/libdvdnav/msvc/include/pthreads/pthread.h:29 #   pragma comment(lib, "pthread")
- lib/ffmpeg/libavcodec/pthread_frame.c:30 #include <pthread.h>

https://github.com/JonDoNym/peinjector
- peinjector/libpeserver.h:12 #include <pthread.h>
- peinjector/libpeserver.c:96   if (pthread_mutex_lock(&server->debug_mutex)) {
- peinjector/libpeprotocol.c:82   if (pthread_mutex_lock(&server->debug_mutex)) {
- peinjector/libpeprotocol.h:13 #include <pthread.h>
- peinjector/peinjector_make.sh:20 gcc -s -o peinjector peinjector.o libpetool.o libpeserver.o libpeprotocol.o minIni.o libpeinfect.o libpeinfect_obfuscator.o libpefile.o -lpthread

https://github.com/scottdraves/electricsheep
- client_generic/mk/autoconf/acx_pthread.m4:38 dnl help from M. Frigo), as well as ac_pthread and hb_pthread macros
- client_generic/Common/SmartPtr.h:140 	#include	<pthread.h>
- client_generic/ContentDownloader/ContentDownloader.cpp:127 		pthread_setschedparam( (pthread_t)m_gDownloadThread->native_handle(), SCHED_RR, &sp );
- client_generic/ContentDecoder/ContentDecoder.cpp:832 	pthread_setschedparam( (pthread_t)m_pNextSheepThread->native_handle(), SCHED_RR, &sp );
- client_generic/Client/client.h:517 					pthread_setschedparam( (pthread_t)th->native_handle(), SCHED_RR, &sp );

https://github.com/gingerBill/gb
- gb.h:310 	#include <pthread.h>

https://github.com/navit-gps/navit
- navit/support/glib/fake.h:6 #include <pthread.h>
- navit/support/espeak/event.c:33 #include <pthread.h>
- navit/support/espeak/fifo.c:33 #include <pthread.h>
- navit/graphics/sdl/event_sdl.c:23 #include <pthread.h>
- CMakeLists.txt:313 		list(APPEND NAVIT_LIBS pthread)

https://github.com/aleaxit/gmpy
- mingw64/msys2_build.txt:51       cp /ucrt64/bin/libwinpthread-1.dll  ~/temp/gmpy/mingw64/winlibs
- setup.py:13            'libgcc_s_seh-1.dll','libwinpthread-1.dll']

https://github.com/soedinglab/hh-suite
- src/hhviterbirunner.h:23 	ViterbiConsumerThread(int pthread_id, Parameters& par, HMMSimd* q_simd,
- src/hhposteriordecoderrunner.cpp:10  *		This class inherits from the pthread class. It is used to read the hits from the input map and

https://github.com/erikkaashoek/Comskip
- win32_pthread.c:10 #include "win32_pthread.h"
- win32_pthread.h:2  * Header used to adapt pthread-based POSIX code to Windows API threads.
- platform.h:78 #include <compat/w32pthreads.h>  // Is already defined in ffmpeg
- configure.ac:8 AC_CHECK_LIB([pthread],[sem_post])

https://github.com/evilpan/P2P-Over-MiddleBoxes-Demo
- p2pchat/Makefile:6 	gcc $^ -o $@ $(CFLAGS) -pthread
- p2pchat/client.c:5 #include <pthread.h>
- tools/udp_client.c:8 #include <pthread.h>
- tools/Makefile:8 	gcc $^ -o $@ $(CFLAGS) -lpthread

https://github.com/leonindy/camel
- Dengine/tengine/src/os/unix/ngx_pthread_thread.c:16 static pthread_attr_t  thr_attr;
- Dengine/tengine/auto/lib/perl/conf:51         # FreeBSD port wants to link with -pthread non-threaded perl
- Dengine/tengine/src/os/unix/ngx_thread.h:23 #else /* use pthreads */
- Dengine/tengine/auto/sources:225 PTHREAD_SRCS="src/os/unix/ngx_pthread_thread.c"
- Dengine/tengine/src/event/ngx_event.h:178      * and pthread_getspecific() is too costly

https://github.com/awslabs/pgbouncer-fast-switchover
- Makefile.diff:48 +python_LDFLAGS = -lpthread -ldl -lutil -lm -lpython3.9 -Xlinker -export-dynamic

https://github.com/lexxmark/winflexbison
- common/misc/error.c:306   __libc_ptf_call (pthread_setcancelstate, (PTHREAD_CANCEL_DISABLE, &state),
- common/misc/glthread/tls.h:89 # include <pthread.h>
- common/misc/glthread/lock.c:263 glthread_rwlock_init_for_glibc (pthread_rwlock_t *lock)
- common/m4/lib/asyncsafe-spin.h:23    handlers, because the pthread_spin_* functions are not async-safe; see
- common/misc/glthread/threadlib.c:28 # include <pthread.h>

https://github.com/james34602/JamesDSPManager
- Main/DSPManager/jni/main/cpthread.c:1 #include "cpthread.h"
- Main/DSPManager/jni/main/cpthread.h:6 typedef void pthread_attr_t;
- Main/DSPManager/jni/main/JdspImpResToolbox.c:241 #include "cpthread.h"
- Main/CLI/main.c:122 	pthread_exit(NULL);
- Main/libjamesdsp/jni/jamesdsp/jdsp/Effects/eel2/ns-eel-int.h:124 #include "cpthread.h"

https://github.com/intel/QAT_Engine
- qat_prov.txt:223 QAT_R_PTHREAD_CREATE_FAILURE:309:pthread create failure
- plock.c:1 /* pthread_rwlock emulation (version without exponential back-off)
- qat_fork.h:58  *   This function is registered, by the call to pthread_atfork(), as
- qat_fork.c:59 #include <pthread.h>
- qat_utils.c:47 #include <pthread.h>

https://github.com/df8oe/UHSDR
- mchf-eclipse/basesw/mcHF/Drivers/CMSIS/RTOS/Template/cmsis_os.h:133 /// \note MUST REMAIN UNCHANGED: \b os_pthread shall be consistent in every CMSIS-RTOS.
- mchf-eclipse/basesw/ovi40-h7/Drivers/CMSIS/RTOS2/Template/cmsis_os1.c:39   return osThreadNew((osThreadFunc_t)thread_def->pthread, argument, &thread_def->attr);
- mchf-eclipse/basesw/ovi40-h7/Drivers/CMSIS/RTOS2/Template/cmsis_os.h:178 typedef void (*os_pthread) (void const *argument);
- mchf-eclipse/basesw/ovi40/Drivers/CMSIS/RTOS/Template/cmsis_os.h:133 /// \note MUST REMAIN UNCHANGED: \b os_pthread shall be consistent in every CMSIS-RTOS.
- mchf-eclipse/basesw/ovi40-h7/Drivers/CMSIS/RTOS/Template/cmsis_os.h:133 /// \note MUST REMAIN UNCHANGED: \b os_pthread shall be consistent in every CMSIS-RTOS.

https://github.com/Wargus/wargus
- StormLib/src/libtomcrypt/src/headers/tomcrypt_custom.h:392 #include <pthread.h>

https://github.com/clpsz/linux-ipcs
- fifo/main.c:4 #include <pthread.h>
- IPC_mutex/main_good.c:7 #include <pthread.h>
- POSIX_sem/thread_sem.c:2 #include <pthread.h>
- mutex/main.c:6 #include <pthread.h>
- fifo/Makefile:2 LDFLAGS = -lpthread

https://github.com/mudongliang/LinuxFlaw
- CVE-2017-8890/poc.c:13 #include <pthread.h>
- CVE-2007-6454/fix-const-char.patch:19 -libpeercastcommon_la_CPPFLAGS = -DENABLE_BINRELOC -pthread  -D__cplusplus -D_UNIX -D_REENTRANT -I../../core -I../../core/common
- CVE-2002-1496/README.md:37 server.c(.text+0xfe1): undefined reference to `pthread_detach'
- CVE-2017-7533/poc.c:6  * $ gcc -o exploit exploit.c -lpthread
- CVE-2013-4788/ptr_mangle-eglibc-2.17.patch:4 @@ -38,6 +38,12 @@ extern void __pthread_initialize_minimal

https://github.com/SimFlowCFD/RapidCFD-dev
- wmake/rules/General/mplibSYSTEMOPENMPI:4 PINC       = $(shell mpicc --showme:compile | sed 's/-pthread/-Xcompiler -pthread/g')

https://github.com/tizian/Cendric2
- CMakeLists_linux_steam.txt:104 set (CMAKE_CXX_LINK_EXECUTABLE "${CMAKE_CXX_LINK_EXECUTABLE} -lpthread -ldl")
- CMakeLists.txt:145 set(CMAKE_CXX_LINK_EXECUTABLE "${CMAKE_CXX_LINK_EXECUTABLE} -lpthread -ldl")

https://github.com/tenvick/hugula
- Client/build/luajit-2.1.0b2/src/lj_profile.c:34 #include <pthread.h>
- Client/build/cmake/ios.toolchain.cmake:103 set(CMAKE_THREAD_LIBS_INIT "-lpthread")
- Client/build/luajit-2.1.0b3/src/Makefile:280   TARGET_XLIBS+= -lpthread
- Client/build/luajit-2.1.0b3/src/lj_gdbjit.c:739     /* Just spin; futexes or pthreads aren't worth the portability cost. */
- Client/build/luajit-2.1.0b2/src/Makefile:277   TARGET_XLIBS+= -lpthread

https://github.com/NordicSemiconductor/pc-ble-driver
- examples/CMakeLists.txt:29             target_link_libraries(${EXAMPLE_NAME} PRIVATE nrf_ble_driver_sd_api_v${SD_API_VER}_static "pthread")
- src/common/platform/macos_osx/serial_port_enum.cpp:83 #include <pthread.h>
- CMakeLists.txt:273         target_link_libraries(${NRF_BLE_DRIVER_${SD_API_VER}_STATIC_LIB} PRIVATE "udev" "pthread")

https://github.com/Softmotions/iowow
- src/utils/pthread_spin_lock_shim.h:2 // See https://stackoverflow.com/questions/8177031/does-mac-os-x-have-pthread-spinlock-t-type
- src/CMakeLists.txt:63     check_library_exists(pthread pthread_condattr_setclock "" HAVE_PTHREAD_CONDATTR_SETCLOCK)
- src/log/iwlog.c:37 #include <pthread.h>
- src/rdb/iwrdb.c:8 #include <pthread.h>
- src/utils/iwtp.c:23   pthread_mutex_t mtx;

https://github.com/chaoran/fast-wait-free-queue
- Makefile:4 CFLAGS = -g -Wall -O3 -pthread -D_GNU_SOURCE
- harness.c:7 #include <pthread.h>
- wfqueue.c:2 #include <pthread.h>

https://github.com/dreamsxin/cphalcon7
- ext/sync/mutex.c:76 	pthread_mutex_init(&intern->MxPthreadCritSection, NULL);
- ext/sync/mutex.h:29 	pthread_mutex_t MxPthreadCritSection;
- ext/sync/common.h:32 #include <pthread.h>
- ext/server/core.h:51 #include <pthread.h>
- ext/kernel/r3/list.c:18     pthread_mutex_init(&(l->mutex), NULL);

https://github.com/saldl/saldl
- src/saldl.c:87   SALDL_ASSERT(!evthread_use_pthreads());
- wscript:178     def_libevent_pthreads_cflags = None # Use pkg-config or env
- Makefile.analyzer:8 COMMON_LIBS = -levent_pthreads -levent -lcurl -pthread
- src/events.c:22 void join_event_pth(event_s *ev_this, pthread_t *event_thread_id) {
- src/common.c:344 void saldl_pthread_create(pthread_t *thread, const pthread_attr_t *attr, void *(*start_routine) (void *), void *arg) {

https://github.com/deniskropp/DirectFB
- lib/direct/os/psp/pthread.h:27  *      http://sources.redhat.com/pthreads-win32/contributors.html
- BUGS:10 http://www.linuxbase.org/spec/gLSB/gLSB/libpthread.html
- systems/mesa/vt.c:49 #include <pthread.h>
- cmake/config.h.in:105 /* Define to 1 if you have the `pthread' library (-lpthread). */
- systems/sdl/sdl.h:50           pthread_mutex_t  lock;

https://github.com/mixly/Mixly_Arduino
- mixly_arduino/arduino/portable/sketchbook/libraries/RF24/utility/RPi/spi.cpp:2 #include <pthread.h>
- mixly_arduino/arduino/portable/sketchbook/libraries/RF24/utility/RPi/interrupt.c:22 #include <pthread.h>
- mixly_arduino/arduino/portable/sketchbook/libraries/IRremoteESP8266/tools/Makefile:24 CXXFLAGS += -g -Wall -Wextra -pthread -std=gnu++11
- mixly_arduino/arduino/portable/sketchbook/libraries/Blynk/linux/Makefile:12 LDFLAGS += -lrt -lpthread
- mixly_arduino/arduino/portable/sketchbook/libraries/RF24/utility/SPIDEV/interrupt.c:22 #include <pthread.h>

https://github.com/altera-opensource/linux-socfpga
- tools/perf/perf.h:15 void pthread__unblock_sigwinch(void);
- Documentation/block/ublk.rst:119   pthread & io_uring for handling ublk IO), this command is sent to the
- tools/virtio/Makefile:8 CFLAGS += -pthread
- scripts/sorttable.h:104 pthread_t orc_sort_thread;
- Documentation/locking/pi-futex.rst:64 locks (such as futex-based pthread mutexes) is priority inheritance:

https://github.com/KhronosGroup/OpenCL-ICD-Loader
- loader/linux/icd_linux.c:29 #include <pthread.h>

https://github.com/phhusson/super-bootimg
- jni/libselinux/src/checkAccess.c:8 static pthread_once_t once = PTHREAD_ONCE_INIT;
- jni/libselinux/src/selinux_internal.h:2 #include <pthread.h>
- jni/libselinux/src/stringrep.c:24 static pthread_once_t once = PTHREAD_ONCE_INIT;
- jni/libselinux/src/android.c:502 static pthread_once_t once = PTHREAD_ONCE_INIT;

https://github.com/LudovicRousseau/PCSC
- src/utils.c:45 #include <pthread.h>
- configure.ac:57 # Special check for pthread support
- src/utils.h:57 int ThreadCreate(pthread_t *, int, PCSCLITE_THREAD_FUNCTION( ),
- src/debuglog.c:51 #include <pthread.h>
- src/ifdwrapper.c:42 #include <pthread.h>

https://github.com/ryanlayer/giggle
- src/cache.h:5 #include <pthread.h>
- src/Makefile:11 LIBS=-ldl -lz -lm -pthread -lcurl
- src/cache.c:96     (void) pthread_mutex_init (&(sc->mutex), NULL);
- lib/htslib/thread_pool.c:48     pthread_t s = pthread_self();
- lib/htslib/cram/cram_io.c:1125 	pthread_mutex_lock(&fd->metrics_lock);

https://github.com/insane-adding-machines/frosted
- kernel/syscall_table_gen.py:91     ["pthread_create", 4, "sys_pthread_create_hdlr"],
- kernel/scheduler.c:27 #include "sys/pthread.h"
- kernel/Kconfig:263 bool "POSIX Threads (pthreads)"

https://github.com/esbmc/esbmc
- src/c2goto/library/pthread_lib.c:2 #include <pthread.h>
- src/c2goto/headers/pthread.h:30 /* Forward declaration required because the type is used in pthread function
- src/c2goto/headers/sys/_pthread/_pthread_t.h:2 #include <pthread.h>
- regression/esbmc-unix2/01_pthread_join_2/descr:1 Tests that the data returned from pthread_join representing thread exit data is accurate - it points at what it should, and doesn't point at what it shouldn't.
- regression/esbmc-unix2/01_pthread_join_2/pjoin.c:1 #include <pthread.h>

https://github.com/elfmaster/ecfs
- src/symresolve.c:35  * [libc.so.6] <-> [libpthread.so] <-> [NULL]

https://github.com/wireshark/winpcap
- wpcap/libpcap/rpcapd/win32-pthreads/pthread.h:15  *      http://sources.redhat.com/pthreads-win32/contributors.html
- wpcap/libpcap/rpcapd/Makefile:6 CFLAGS  = -pthread -DHAVE_REMOTE -DHAVE_SNPRINTF
- wpcap/libpcap/rpcapd/rpcapd.c:42 #include <pthread.h>
- wpcap/libpcap/rpcapd/daemon.c:38 #include <pthread.h>
- wpcap/libpcap/rpcapd/win32-pthreads/sched.h:22  *      http://sources.redhat.com/pthreads-win32/contributors.html

https://github.com/codespecs/daikon
- tests/kvasir-tests/pthread-test/pthread-test.c:1 #include <pthread.h>
- tests/kvasir-tests/pthread-test/pthread-test.out.goal:4 ==PID== Command: ./pthread-test
- tests/kvasir-tests/pthread-test/pthread-test.invs.goal:5 argv[] == [./pthread-test]
- tests/kvasir-tests/pthread-test/pthread-test.dtrace.goal:15 [ "./pthread-test" ]
- tests/kvasir-tests/pthread-test/Makefile:1 NAME := pthread-test

https://github.com/firehol/iprange
- m4/ax_pthread.m4:2 #        http://www.gnu.org/software/autoconf-archive/ax_pthread.html
- ipset_load.c:177 static pthread_mutex_t dns_mut = PTHREAD_MUTEX_INITIALIZER;
- configure.ac:68 ACX_PTHREAD(, [AC_MSG_ERROR([Cannot initialize pthread environment])])
- iprange.h:22 #include <pthread.h>

https://github.com/bus1/bus1
- tools/testing/selftests/bus1/test-hive.c:11 #include <pthread.h>

https://github.com/BelledonneCommunications/mediastreamer2
- src/utils/msjava.c:29 #include <pthread.h>
- tester/mediastreamer2_tester_ios.m:54     pthread_t main_thread;
- configure.ac:208 		MSPLUGINS_CFLAGS="-pthread"
- src/base/msasync.c:170 				/* This could be further optimized, using pthread_cond_timedwait() */
- src/base/msticker.c:376 		if ((result = pthread_setschedparam(pthread_self(), policy, &param))) {

https://github.com/frischzenger/yolo-windows
- README.md:11 and compile the codes with X64 Release mode. You may need pthread-windows while compiling and linking
- src/yolo.c:103     pthread_t load_thread = load_data_in_thread(args);
- src/data.h:3 #include <pthread.h>
- src/server.c:9 #include <pthread.h>
- src/data.c:567 pthread_t load_data_in_thread(load_args args)

https://github.com/codelast/raspberry-pi
- gpio/timer-sense-light/src/config_loader.cpp:37   pthread_rwlock_init(&timeRangeDataLock, NULL);
- gpio/timer-sense-light/include/config_loader.h:6 #include <pthread.h>  // pthread_rwlock_t
- gpio/timer-sense-light/src/timer_sense_light.cpp:54   pthread_t webHandlerThreadId = 0;
- gpio/timer-sense-light/src/3rd/mongoose.c:7587   pthread_t thread_id = (pthread_t) 0;
- gpio/timer-sense-light/include/3rd/mongoose.h:276 #include <pthread.h>

https://github.com/loboris/OrangePI-Kernel
- brandy/gcc-linaro/arm-linux-gnueabi/libc/usr/include/pthread.h:28 #include <bits/pthreadtypes.h>
- brandy/gcc-linaro/arm-linux-gnueabi/libc/usr/include/arm-linux-gnueabi/bits/pthreadtypes.h:38 typedef unsigned long int pthread_t;
- linux-3.4/Documentation/pi-futex.txt:63 locks (such as futex-based pthread mutexes) is priority inheritance:
- linux-3.4/tools/usb/Makefile:4 PTHREAD_LIBS = -lpthread
- linux-3.4/Documentation/rt-mutex.txt:5 which enable pthread_mutex_t priority inheritance attributes

https://github.com/vbooter/DDoS-Scripts
- README.md:9 		gcc [script-name].c -pthread -o ssyn
- TCP.c:9 #include <pthread.h>
- UDP.c:5 #include <pthread.h>
- SUDP2.c:2 #include <pthread.h>
- SSYN2.c:1 #include <pthread.h>

https://github.com/JoeMerten/Stm32-Tools-Evaluation
- STM32Cube_FW_F4_V1.9.0/Drivers/CMSIS/Documentation/RTOS/html/structos_thread_def__t.js:4     [ "pthread", "structos_thread_def__t.html#ad3c9624ee214329fb34e71f544a6933e", null ],
- Stm32F4-MX-copyAll/Drivers/CMSIS/RTOS/Template/cmsis_os.h:133 /// \note MUST REMAIN UNCHANGED: \b os_pthread shall be consistent in every CMSIS-RTOS.
- STM32Cube_FW_F4_V1.9.0/Drivers/CMSIS/Documentation/RTOS/html/structos_thread_def__t.html:91 <tr class="memitem:ad3c9624ee214329fb34e71f544a6933e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="cmsis__os_8h.html#aee631e5ea1b700fc35695cc7bc574cf7">os_pthread</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structos_thread_def__t.html#ad3c9624ee214329fb34e71f544a6933e">pthread</a></td></tr>
- STM32Cube_FW_F4_V1.9.0/Drivers/CMSIS/Documentation/RTOS/html/globals_type.html:83 <li>os_pthread
- STM32Cube_FW_F4_V1.9.0/Drivers/CMSIS/Documentation/RTOS/html/functions.html:118 <li>pthread

https://github.com/leixiaohua1020/simplest_ffmpeg_device
- simplest_ffmpeg_readcamera/include/libavcodec/avcodec.h:2791      * Also see avcodec_thread_init and e.g. the --enable-pthread configure option.
- simplest_ffmpeg_grabdesktop/include/libavcodec/avcodec.h:2791      * Also see avcodec_thread_init and e.g. the --enable-pthread configure option.

https://github.com/systems-cs-pub-ro/so-assignments
- 4-scheduler/util/so_scheduler.h:12 #include <pthread.h>
- 4-scheduler/checker-lin/Makefile.checker:5 LIBS = -pthread -lscheduler -L.
- 4-scheduler/checker-win/_test/scheduler_test.h:66 	return pthread_self();
- 4-scheduler/checker-win/_test/so_scheduler.h:12 #include <pthread.h>
- 4-scheduler/checker-lin/_test/so_scheduler.h:12 #include <pthread.h>

https://github.com/rssnsj/firmware-tools
- src/squashfs-tools/unsquashfs.h:46 #include <pthread.h>
- src/squashfs-tools/unsquashfs.c:36 pthread_t *thread, *deflator_thread;
- builds/Makefile:21 	libopenssl libpolarssl libpthread librt libubus-lua libuci-lua lua luci luci-app-firewall \
- src/squashfs-tools/Makefile:109 LIBS = -lpthread -lm
- src/squashfs-tools/mksquashfs.c:50 #include <pthread.h>

https://github.com/leixiaohua1020/simplest_ffmpeg_audio_player
- simplest_ffmpeg_audio_player/include/libavcodec/avcodec.h:2791      * Also see avcodec_thread_init and e.g. the --enable-pthread configure option.
- simplest_ffmpeg_audio_decoder/include/libavcodec/avcodec.h:2791      * Also see avcodec_thread_init and e.g. the --enable-pthread configure option.

https://github.com/dxjia/ffmpeg-commands-executor-library
- library/jni/ffmpeg.h:29 #include <pthread.h>
- library/jni/include/libavcodec/avcodec.h:2800      * Also see avcodec_thread_init and e.g. the --enable-pthread configure option.
- library/jni/FFmpegNativeHelper.c:101 #include <pthread.h>

https://github.com/vedderb/bldc_uart_comm_stm32f4_discovery
- ChibiOS_3.0.2/os/various/lwip_bindings/lwipthread.c:52  * @file lwipthread.c
- ChibiOS_3.0.2/os/various/lwip_bindings/lwipthread.h:18  * @file lwipthread.h
- ChibiOS_3.0.2/os/rt/ports/ARMCMx/cmsis_os/cmsis_os.h:180 typedef void (*os_pthread) (void const *argument);
- ChibiOS_3.0.2/os/rt/ports/ARMCMx/cmsis_os/cmsis_os.c:123                                          (tfunc_t)thread_def->pthread,
- ChibiOS_3.0.2/os/various/lwip_bindings/lwip.mk:5         $(CHIBIOS)/os/various/lwip_bindings/lwipthread.c \

https://github.com/ASPLes/nopoll
- configure.ac:104 dnl Try running a program which uses pthreads, executing the
- doc/release-notes/nopoll-0.4.2.txt:81   pthread_mutexattr_init/destroy inside regression test.
- ChangeLog:83   in the case they are not present. Added missing pthread_mutexattr_init/destroy
- src/nopoll.c:1625  *    LDFLAGS=" -L/full/arm/android-14/lib -lvortex -lvortex-tls-1.1 -l axl -lssl -lcrypto -lpthread -pthread -lm"
- test/nopoll-regression-common.c:41  * Needed for extended pthread API for recursive functions.

https://github.com/google/multichase
- Makefile:14 CFLAGS=-std=gnu99 -g -O3 -fomit-frame-pointer -fno-unroll-loops -Wall -Wstrict-prototypes -Wmissing-prototypes -Wshadow -Wmissing-declarations -Wnested-externs -Wpointer-arith -W -Wno-unused-parameter -Werror -pthread -Wno-tautological-compare
- pingpong.c:17 #include <pthread.h>
- fairness.c:18 #include <pthread.h>
- multiload.c:19 #include <pthread.h>
- multichase.c:19 #include <pthread.h>

https://github.com/CyanogenMod/android_kernel_yu_msm8916
- Documentation/pi-futex.txt:63 locks (such as futex-based pthread mutexes) is priority inheritance:
- tools/perf/ui/ui.h:4 #include <pthread.h>
- tools/usb/Makefile:4 PTHREAD_LIBS = -lpthread
- Documentation/rt-mutex.txt:5 which enable pthread_mutex_t priority inheritance attributes
- Documentation/robust-futexes.txt:27 process exits prematurely while holding a pthread_mutex_t lock that is

https://github.com/BelledonneCommunications/ortp
- configure.ac:151 		PTHREAD_LDFLAGS="-pthread"
- ortp.spec.in:68 %define ortp_cflags %ortp_arch_cflags -Wall -g -pipe -pthread -O3 -fomit-frame-pointer -fno-schedule-insns -fschedule-insns2 -fno-strict-aliasing
- src/netsim.c:111 	if ((result = pthread_setschedparam(pthread_self(), policy, &param))) {
- include/ortp/port.h:65 #include <pthread.h>
- build/rpm/ortp.spec.cmake:73 %define ortp_cflags %ortp_arch_cflags -Wall -g -pipe -pthread -O3 -fomit-frame-pointer -fno-schedule-insns -fschedule-insns2 -fno-strict-aliasing

https://github.com/ideawu/tftpx
- tftpx.h:14 #include <pthread.h>
- Makefile:4 CFLAGS = -l pthread
- server.c:19 	pthread_t t_id;

https://github.com/priyankvex/Easy-Ocr-Scanner-Android
- easy_ocr_library/libs/tess-two/jni/com_googlecode_tesseract_android/src/ccutil/ccutil.h:32 #include <pthread.h>
- easy_ocr_library/libs/tess-two/jni/com_googlecode_tesseract_android/src/ccutil/ccutil.cpp:31   pthread_mutex_init(&mutex_, NULL);
- easy_ocr_library/libs/tess-two/jni/libpng/ltmain.sh:5633 	   # Do not include libc_r directly, use -pthread flag.
- easy_ocr_library/libs/tess-two/jni/com_googlecode_tesseract_android/src/tesseract.pc.in:15 Libs.private: -lpthread -llept @OPENCL_LIB@
- easy_ocr_library/libs/tess-two/jni/com_googlecode_leptonica_android/src/config/ltmain.sh:5633 	   # Do not include libc_r directly, use -pthread flag.

https://github.com/m-pays/m-cpuminer-v2
- miner.h:9 #include <pthread.h>
- configure.ac:54 PTHREAD_FLAGS="-pthread"
- util.c:67 	pthread_mutex_t		mutex;
- README:35 	If using MinGW-w64, install pthreads-w64
- cpu-miner.c:155 pthread_mutex_t applog_lock;

https://github.com/nextgens/limacharlie
- sensor/lib/mbedtls/mbedtls-2.1.2/programs/ssl/ssl_pthread_server.c:2  *  SSL server demonstration program using pthread for handling multiple
- sensor/lib/rpal/SConscript:11                 CPPFLAGS = "-pthread"
- sensor/lib/rpal/rpal_synchronization.c:22 #include <pthread.h>
- sensor/lib/mbedtls/mbedtls-2.1.2/programs/Makefile:75 APPS +=	ssl/ssl_pthread_server$(EXEXT)
- sensor/lib/mbedtls/mbedtls-2.1.2/library/CMakeLists.txt:3 option(LINK_WITH_PTHREAD "Explicitly link mbed TLS library to pthread." OFF)

https://github.com/sxcong/pjsipvideo_demo
- sipclient/include/pthread.h:15  *      http://sources.redhat.com/pthreads-win32/contributors.html
- sipclient/include/sched.h:22  *      http://sources.redhat.com/pthreads-win32/contributors.html
- sipclient/cdecodemgr.cpp:3 #include "pthread.h"
- sipclient/thread_mutex.cpp:8 	pthread_mutex_init(&m_thread_mutex, NULL);
- sipclient/pjsip/include/pj/compat/os_auto.h.in:100 /* Do we have pthread_mutexattr_settype()? */

https://github.com/RediSearch/RediSearch
- src/rwlock.c:12 pthread_mutex_t rwLockMutex;
- src/rwlock.h:10 #include <pthread.h>
- src/offset_vector.c:7 #include <pthread.h>
- coord/src/rmr/chan.c:8 #include <pthread.h>
- src/cursor.c:27   pthread_mutex_lock(&cl->lock);

https://github.com/begeekmyfriend/yasea
- library/src/main/cpp/libx264/x264dll.c:29 /* Callback for our DLL so we can initialize pthread */
- library/src/main/cpp/libx264/common/osdep.h:187 #define x264_pthread_t               thread_id
- library/src/main/cpp/libx264/common/osdep.c:44 /* this is a global in pthread-win32 to indicate if it has been initialized or not */
- library/src/main/cpp/libx264/common/frame.h:155     x264_pthread_mutex_t mutex;
- library/src/main/cpp/libx264/common/threadpool.c:39     x264_pthread_t *thread_handle;

https://github.com/LiteOS/LiteOS
- lib/libc/src/internal/pthread_impl.h:4 #include <pthread.h>
- lib/libc/src/include/pthread.h:4 #include "../../include/pthread.h"
- lib/libc/arch/arm/pthread_arch.h:5 static inline pthread_t __pthread_self()
- lib/huawei_libc/pthread/pthread_attr.c:3  * Description: Functions about pthread_attr_t
- lib/huawei_libc/pthread/pthread_mutex.c:29 #include "pthread.h"

https://github.com/maharmstone/btrfs
- CMakeLists.txt:232     target_link_libraries(shellbtrfs pthread)

https://github.com/seemoo-lab/nexmon
- utilities/iperf/m4/acx_pthread.m4:2 dnl http://www.gnu.org/software/ac-archive/htmldoc/acx_pthread.html
- utilities/boringssl/src/crypto/thread_pthread.c:19 #include <pthread.h>
- buildtools/gcc-arm-none-eabi-5_4-2016q2-osx/arm-none-eabi/include/pthread.h:34 struct _pthread_cleanup_context {
- utilities/socat/Android.mk:81 LOCAL_CFLAGS += -DANDROID -Wno-multichar -D_GNU_SOURCE -Wall -Wno-parentheses -pthread -DHAVE_CONFIG_H -DANDROID -DNO_XMALLOC -mandroid
- utilities/glib/config.h.in:316 /* Have function pthread_attr_setstacksize */

https://github.com/Meituan-Dianping/DBProxy
- src/chassis-event-thread.h:26 #include <pthread.h>
- ltmain.sh:4554 	   # Do not include libc_r directly, use -pthread flag.
- plugins/proxy/proxy-plugin.c:112 #include <pthread.h>

https://github.com/nkolban/esp32-snippets
- cpp_utils/FreeRTOS.h:12 #include <pthread.h>
- cpp_utils/FreeRTOS.cpp:74 		pthread_mutex_lock(&m_pthread_mutex);
- curl/build_files/lib/curl_config.h:520 /* if you have <pthread.h> */
- VisualStudioCode/c_cpp_properties.json:104                 "${env:IDF_PATH}/components/pthread/include",

https://github.com/antirez/neural-redis
- neuralredis.c:44 #include <pthread.h>

https://github.com/googleprojectzero/winafl
- afl_docs/status_screen.txt:306     ffmpeg, look for --disable-pthreads instead.
- afl_docs/ChangeLog:466   - Added a workaround for abort() behavior in -lpthread programs in QEMU mode.

https://github.com/vvaltchev/tilck
- include/tilck/kernel/sync.h:187  * A basic implementation of condition variables similar to the pthread ones.
- tests/unit/CMakeLists.txt:132 target_link_libraries(gtests pthread)

https://github.com/mattrajca/sudo-touchid
- sudo/libtool:7459 	   # Do not include libc_r directly, use -pthread flag.
- sudo/configure.ac:3302     SUDOERS_LIBS="${SUDOERS_LIBS} -laceclnt -lpthread"
- sudo/ltmain.sh:7020 	   # Do not include libc_r directly, use -pthread flag.
- sudo/plugins/sudoers/Makefile:250 # We need to link check_symbols with -lpthread on HP-UX since LDAP uses threads
- sudo/plugins/sudoers/Makefile.in:250 # We need to link check_symbols with -lpthread on HP-UX since LDAP uses threads

https://github.com/pmq20/ruby-packer
- ruby/thread_pthread.h:3   thread_pthread.h -
- ruby/thread_pthread.c:4   thread_pthread.c -
- ruby/ext/coverage/depend:24 coverage.o: $(top_srcdir)/thread_pthread.h
- ruby/squash_mutex.c:19     return pthread_mutex_init(mutex, NULL);
- ruby/squash/mutex.h:16     #include <pthread.h>

https://github.com/JKornev/hidden
- Hidden/Disasm/Zycore/API/Thread.h:51 #include <pthread.h>
- Hidden/Disasm/Zycore/API/Synchronization.h:51 #include <pthread.h>

https://github.com/moosefs/moosefs
- m4/ax_pthread.m4:2 #           http://www.nongnu.org/autoconf-archive/ax_pthread.html
- Makefile.am:56 EXTRA_DIST=m4/ax_pthread.m4 m4/ax_check_compile_flag.m4 debian rpm macosx freebsd debian_sysv_to_systemd.sh cross_enable.sh linux_build.sh macosx_build.sh freebsd_build.sh sanitize_build.sh README.md buildno.txt
- mfsclient/csdb.c:26 #include <pthread.h>
- config.h.in:243 /* Define to 1 if you have the `pthread_spin_lock' function. */
- mfsclient/stats.c:24 #include <pthread.h>

https://github.com/soramimi/Guitar
- src/win32/event.h:24 	pthread_cond_t _cond;
- src/win32/mutex.h:32 #include <pthread.h>
- src/win32/thread.h:11 	#include <pthread.h>
- src/win32/thread.cpp:29 	pthread_create(&_thread_handle, nullptr, run_, this);
- src/win32/event.cpp:5 #include <pthread.h>

https://github.com/osqp/osqp
- configure/cmake/MKLConfig.cmake:695   list(APPEND MKL_SUPP_LINK -lm -ldl -lpthread)

https://github.com/mackron/dr_libs
- old/dr.h:833 #include <pthread.h>
- old/dr_fs.h:689 #include <pthread.h>
- old/dr_audio_ancient.h:1503 #include <pthread.h>
- old/dr_audio.h:1843 #include <pthread.h>

https://github.com/HandmadeMath/HandmadeMath
- test/Makefile:3 CXXFLAGS+=-g -Wall -Wextra -pthread -Wno-missing-braces -Wno-missing-field-initializers -Wfloat-equal

https://github.com/ec-/Quake3e
- code/unix/linux_snd.c:10 #include <pthread.h>
- code/unix/linux_glimp.c:45 #include <pthread.h>
- code/libsdl/include/SDL2/SDL_hints.h:641 *  Support for this hint is currently available only in the pthread, Windows, and PSP backend.
- code/libcurl/conf840.sh:6 OPTIONS="--disable-shared --disable-debug --enable-optimize --disable-curldebug --enable-symbol-hiding --disable-ares --disable-rt --disable-ech --disable-largefile --disable-ldap --disable-ldaps --disable-rtsp --disable-proxy --disable-dict --disable-telnet --disable-tftp --disable-pop3 --disable-imap --disable-smb --disable-smtp --disable-gopher --disable-mqtt --disable-manual --disable-pthreads --disable-ntlm --disable-ntlm-wb --disable-unix-sockets --disable-alt-svc --disable-cookies --disable-socketpair --disable-doh --disable-websockets --disable-file --with-schannel --without-libidn2 --without-librtmp"
- code/libcurl/conf751.sh:6 ./configure --prefix=/lib32 --with-winssl --disable-rt --disable-pthreads --disable-curldebug --disable-ares --disable-ech --disable-largefile --disable-ftp --disable-file --disable-ldap --disable-ldaps  --disable-rtsp --disable-proxy   --disable-dict   --disable-telnet   --disable-tftp   --disable-pop3   --disable-imap --disable-smb --disable-smtp --disable-gopher --disable-mqtt --disable-manual --disable-alt-svc --disable-websockets --disable-shared --enable-symbol-hiding --disable-versioned-symbols

https://github.com/openglredbook/examples
- lib/glfw/src/mir_init.c:67     error = pthread_mutex_init(&_glfw.mir.event_mutex, NULL);
- lib/glfw/src/posix_tls.c:37     if (pthread_key_create(&_glfw.posix_tls.context, NULL) != 0)
- lib/glfw/src/posix_tls.h:31 #include <pthread.h>
- lib/glfw/deps/tinycthread.c:65   pthread_mutexattr_t attr;
- lib/glfw/deps/tinycthread.h:40 * classes, while for other systems, the POSIX threads API (pthread) is used.

https://github.com/OpenBoardView/OpenBoardView
- src/sqlite3/CMakeLists.txt:7 	target_link_libraries(SQLite3 pthread)

https://github.com/arkq/bluez-alsa
- src/io.c:16 #include <pthread.h>
- src/upower.c:14 #include <pthread.h>
- src/storage.c:14 #include <pthread.h>
- src/a2dp-sbc.c:15 #include <pthread.h>
- src/a2dp-ldac.c:14 #include <pthread.h>

https://github.com/nowsecure/fsmon
- backend/kdebug/kdebug.c:357 #define BSC_pthread_chdir	0x040C0570

https://github.com/firefart/dirtycow
- README.md:18 gcc -pthread dirty.c -o dirty -lcrypt
- dirty.c:17 //   gcc -pthread dirty.c -o dirty -lcrypt

https://github.com/rodizio1/EZ-WifiBroadcast
- wifibroadcast_osd/Makefile:1 CPPFLAGS+= -I/opt/vc/include/ -I/opt/vc/include/interface/vcos/pthreads -I/opt/vc/include/interface/vmcs_host/linux
- wifibroadcast_status/Makefile:1 CPPFLAGS+= -I/opt/vc/include/ -I/opt/vc/include/interface/vcos/pthreads -I/opt/vc/include/interface/vmcs_host/linux

https://github.com/y123456yz/Reading-and-comprehense-redis-cluster
- redis-3.0/deps/jemalloc/src/mutex.c:24 static void	pthread_create_once(void);
- redis-3.0/src/Makefile:61 	FINAL_LIBS+= -ldl -lnsl -lsocket -lpthread
- redis-3.0/deps/jemalloc/ChangeLog:137   - Don't mangle pthread_create() when --with-private-namespace is specified.
- redis-3.0/deps/jemalloc/include/jemalloc/jemalloc_defs.h.in:83  * FreeBSD, pthread_key_create() allocates, which if used during malloc
- redis-3.0/deps/jemalloc/include/jemalloc/internal/tsd.h:36  * pthreads TSD).  example_tsd_cleanup() is passed an (a_type *) pointer that is

https://github.com/jiayy/android_vuln_poc-exp
- linux/CVE-2021-3573/util.c:2 #include <pthread.h>
- linux/CVE-2022-0185/Makefile:2 	gcc -no-pie -static exploit_kctf.c util.c -o exploit -masm=intel -pthread
- linux/CVE-2021-3573/exploit.c:17 #include <pthread.h>
- qemu/cve-2015-5165/qemu.h:15 #define pthread_create_ADDR 0x00000000000a4200
- android/EXP-2015-7504/poc-2015-7504-hijack.c:41 #include <pthread.h>

https://github.com/quiet/quiet-lwip
- CMakeLists.txt:30 set(CORE_DEPENDENCIES quiet pthread)
- src/lwip/sys_arch.c:40  *    the main thread and threads made with pthread_create().
- examples/src/relay.c:70     pthread_mutex_init(&c->mutex, NULL);
- src/driver_portaudio.c:213                 pthread_exit(NULL);
- examples/include/relay.h:11 #include <pthread.h>

https://github.com/termux/proot
- doc/proot/changelog.txt:1164 + Added support for pthread cancellation when QEMU is used.
- doc/proot/rpm-spec:1227 + Added support for pthread cancellation when QEMU is used.
- tests/GNUmakefile:162 	$(Q)$(CC) $< -pthread -static -o $@ $(silently) || true
- tests/test-5bed7141.c:1 #include <pthread.h>
- tests/test-fa205b56.c:1 #include <pthread.h>

https://github.com/AlbrechtL/welle.io
- src/backend.pri:32     LIBS    += -lwinpthread

https://github.com/graydon/rust-prehistory
- src/rt/rust_dom.cpp:44     pthread_attr_init(&attr);
- src/rt/rust_timer.cpp:45 pthread_timer_loop(void *ptr)
- src/rt/rust_internal.h:33 #include <pthread.h>
- src/rt/uthash-1.6/doc/txt/userguide.txt:1167 For example using pthreads you can create an rwlock like this:
- src/rt/rust.cpp:253         pthread_exit(NULL);

https://github.com/0x27/linux.mirai
- loader/build.sh:2 gcc -static -O3 -lpthread -pthread src/*.c -o loader
- loader/src/main.c:6 #include <pthread.h>
- loader/src/headers/server.h:16     pthread_t to_thrd;
- loader/src/headers/connection.h:4 #include <pthread.h>
- loader/src/connection.c:6 #include <pthread.h>

https://github.com/linux-audit/audit-userspace
- audisp/queue.c:24 #include <pthread.h>
- src/Makefile.am:35 auditd_CFLAGS = -fPIE -DPIE -g -D_REENTRANT -D_GNU_SOURCE -fno-strict-aliasing -pthread -Wno-pointer-sign ${WFLAGS}
- src/auditd-reconfig.c:25 #include <pthread.h>
- configure.ac:119 dnl; pthread_yield is used in zos-remote
- audisp/audispd.c:32 #include <pthread.h>

https://github.com/mengzhidaren/Vlc-sdk-lib
- libvlc/src/main/cpp/yyl_log.h:10 #include <pthread.h>
- libvlc/src/main/cpp/demo/yyl_thumb.c:11 #include <pthread.h>
- libvlc/include/vlc_threads.h:138 # define pthread_sigmask  sigprocmask
- libvlc/src/main/cpp/demo/yyl_fixsurface.c:7 //    pthread_mutex_unlock(&vout_android_lock);
- libvlc/include/vlc/libvlc.h:136  * - sigprocmask() shall never be invoked; pthread_sigmask() can be used.

https://github.com/pmodels/mpich
- src/pmi/doc/pmi2_design.txt:41           pthread_cond_wait( atomic-ctx->mutex, atomic-ctx->condvar );
- src/include/mpir_win.h:55     pthread_t wait_thread_id;   /* id of thread handling MPI_Win_wait */
- confdb/aclocal_threads.m4:6         posix or pthreads - POSIX threads (default, if required)
- examples/developers/threads.c:9 #include <pthread.h>
- doc/wiki/design/Sock_Thread_Safety_Mechanism.md:34 `pthread_cond_wait` call. Namely, it serves as the predicate

https://github.com/intel/gvt-linux
- tools/perf/perf.h:15 void pthread__unblock_sigwinch(void);
- Documentation/block/ublk.rst:119   pthread & io_uring for handling ublk IO), this command is sent to the
- tools/virtio/Makefile:8 CFLAGS += -pthread
- scripts/sorttable.h:104 pthread_t orc_sort_thread;
- Documentation/locking/pi-futex.rst:64 locks (such as futex-based pthread mutexes) is priority inheritance:

https://github.com/updateing/minieap
- include/misc.h:47  * on pthread_create() later.

https://github.com/babelouest/glewlwyd
- src/metrics.c:45   if (!pthread_mutex_lock(&data->config->metrics_lock)) {
- src/misc_config.c:243   pthread_t thread_update_issued_for;
- src/api_key.c:152       if (pthread_mutex_lock(&config->insert_lock)) {
- src/scheme/email.c:41   pthread_mutex_t insert_lock;
- docs/resources/ulfius/iddawc_resource.c:140       if (!pthread_mutex_lock(&config->session_lock)) {

https://github.com/linkingvision/h5stream
- h5ss/Makefile:74 LIBS = -lpthread -lm

https://github.com/labapart/gattlib
- dbus/gattlib_internal.h:11 #include <pthread.h>
- examples/discover/CMakeLists.txt:32 target_link_libraries(discover ${GATTLIB_LIBRARIES} ${GATTLIB_LDFLAGS} ${PCRE_LIBRARIES} pthread)
- dbus/gattlib.c:215 	pthread_create(&conn_context->event_thread, NULL, glib_event_thread, &conn_context->connection_loop);
- dbus/gattlib_adapter.c:338 	ret = pthread_create(&gattlib_adapter->ble_scan.thread, NULL, _ble_scan_loop, gattlib_adapter);
- examples/gatttool/CMakeLists.txt:55 target_link_libraries(gatttool ${GATTLIB_LIBRARIES} ${GATTLIB_LDFLAGS} ${GLIB_LDFLAGS} ${PCRE_LIBRARIES} readline tinfo pthread)

https://github.com/openldap/openldap
- include/ldap_int_thread.h:36 #include <pthread.h>
- libraries/liblmdb/Makefile:24 THREADS = -pthread
- libraries/libldap/thr_posix.c:24 #define _XOPEN_SOURCE 500		/* For pthread_setconcurrency() on glibc */
- include/portable.hin:415 /* define to pthreads API spec revision */
- configure.ac:671 dnl If we find cc_r|xlc_r, force pthreads and assume

https://github.com/michaelbecker/freertos-addons
- Linux/Demo/make.c.inc:52 CFLAGS += -Wall -Werror -Wextra -Wpedantic -pthread -O0 -g
- Linux/Demo/Linux_g++_condition_variables/Makefile:40 CXXFLAGS += -Wall -Werror -Wextra -Wpedantic -pthread -O0 -g -DCPP_FREERTOS_CONDITION_VARIABLES
- Linux/Demo/Linux_gcc_simple_tasks/Makefile:48 CFLAGS += -Wall -Werror -Wextra -Wpedantic -pthread -O0 -g
- Linux/Demo/Linux_g++_simple_tasks_no_vTaskDelete/makefile.cpp11:50 CFLAGS += -Wall -Werror -Wextra -Wpedantic -pthread -O0 -g
- c/UnitTests/Queue/makefile:48 CFLAGS += -Wall -Werror -Wextra -Wpedantic -pthread -O0 -g

https://github.com/bitkeeper-scm/bitkeeper
- src/libc/stdio/flockfile.c:59  * XXX This code makes the assumption that a thr_t (pthread_t) is a 
- src/gui/tcltk/tk/unix/tkConfig.h.in:37 /* Define to 1 if you have the `pthread_atfork' function. */
- src/libc/stdio/reentrant.h:81  * pthreads, however it should be reasonably easy to wrap another mutex
- src/gui/tcltk/tcl/unix/tclUnixThrd.c:30 static pthread_mutex_t masterLock = PTHREAD_MUTEX_INITIALIZER;
- src/tomcrypt/src/headers/tomcrypt_custom.h:329 #include <pthread.h>

https://github.com/ROBOTIS-GIT/OpenCR
- arduino/opencr_arduino/opencr/libraries/RTOS/src/cmsis_os.h:271 /// \note MUST REMAIN UNCHANGED: \b os_pthread shall be consistent in every CMSIS-RTOS.
- arduino/opencr_arduino/opencr/libraries/RTOS/src/cmsis_os.c:190   if (xTaskCreate((TaskFunction_t)thread_def->pthread,(const portCHAR *)thread_def->name,

https://github.com/brechtsanders/xlsxio
- build/libxlsxio_write_wchar.depend:17 	<pthread.h>
- Makefile:83 XLSXIOWRITE_LDFLAGS += -pthread
- Changelog.txt:299   * removed -pthread when building for Apple
- lib/xlsxio_write.c:44 #  include <pthread.h>
- CMakeLists.txt:91   SET(THREADLIB "-pthread")

https://github.com/nowsecure/frida-cycript
- src/Local.hpp:65 #include <pthread.h>

https://github.com/Ethan-Yan27/CSAPP-Labs
- yzf-proxylab-handout-3e/csapp.h:25 #include <pthread.h>
- yzf-proxylab-handout-3e/csapp.c:664 void Pthread_create(pthread_t *tidp, pthread_attr_t *attrp, 
- yzf-proxylab-handout-3e/proxy (Part 2).c:31     pthread_t tid;
- yzf-proxylab-handout-3e/proxy.c:64     pthread_t tid;
- yzf-proxylab-handout-3e/tiny/Makefile:6 LIB = -lpthread

https://github.com/LikeUSummer/GamePainter
- build/BUILD.gn:10             "-pthread",

https://github.com/filebench/filebench
- ipc.h:109 	pthread_mutex_t shm_fileset_lock;
- configure.ac:158 AC_CHECK_LIB([pthread], [pthread_mutex_lock])
- flowop.h:69 	pthread_cond_t	fo_cv;		/* Block/wakeup cv */
- fileset.h:112 	pthread_cond_t	fs_idle_files_cv; /* idle files condition variable */
- eventgen.c:124 		(void)pthread_cond_signal(&filebench_shm->shm_eventgen_cv);

https://github.com/espressif/openocd-esp32
- cmake/config.h.in:235 /* Define if you have the <pthread.h> header file */
- doc/manual/style.txt:151 pthreads require modest and predictable stack usage.

https://github.com/stub42/pytz
- tz/localtime.c:22 # include <pthread.h>
- tz/Makefile:246 #	Append other compiler flags as needed, e.g., -pthread on GNU/Linux.

https://github.com/rweather/noise-c
- m4/ax_pthread.m4:2 #        http://www.gnu.org/software/autoconf-archive/ax_pthread.html
- src/protocol/util.c:40 #include <pthread.h>
- src/crypto/goldilocks/src/include/config.h:43  * @brief Goldilocks uses libpthread mutexes to provide
- src/crypto/goldilocks/src/goldilocks.c:11 #include <pthread.h>

https://github.com/TLeconte/acarsdec
- rtl.c:25 #include <pthread.h>
- msk.c:21 pthread_mutex_t chmtx;
- acars.c:30 static pthread_mutex_t blkq_mtx;
- soapy.c:7 #include <pthread.h>
- acarsdec.h:21 #include <pthread.h>

https://github.com/Samsung/ADBI
- idk/include/mutex.h:8  * The implementation is based on the pthread mutex implementation in the Bionic C library.

https://github.com/M-HT/SR
- games/Albion/SR-Main/SConstruct:75                           LIBS         = ['SDL2_mixer', 'SDL2', 'pthread', 'm', 'dl']
- games/Septerra Core/SR-Septerra/CLIB.c:42 #include <pthread.h>
- games/Septerra Core/SR-Septerra/Game-SoundEngine.c:32 #include <pthread.h>
- midi-plugins/midi2-alsa.c:27     #include <pthread.h>
- games/X-Com - Ufo Defense/SR-Xcom1/Game_thread.c:38     #include <pthread.h>

https://github.com/cygwin/cygwin
- newlib/libc/include/pthread.h:34 struct _pthread_cleanup_context {
- winsup/testsuite/winsup.api/pthread/tsd1.c:34  * - already validated:     pthread_create()
- winsup/testsuite/winsup.api/pthread/self1.c:4  * Test for pthread_self().
- winsup/testsuite/winsup.api/pthread/join2.c:2  * Test for pthread_join() returning return value from threads.
- winsup/testsuite/winsup.api/pthread/once1.c:4  * Create a static pthread_once and test that it calls myfunc once.

https://github.com/nelhage/rules_boost
- zstd.BUILD:28         "-pthread",
- config.lzma-linux.h:216 /* Define to 1 if you have the `pthread_condattr_setclock' function. */
- boost.BUILD:211         ("@platforms//os:linux", "@platforms//os:osx", "@platforms//os:ios", "@platforms//os:watchos", "@platforms//os:tvos"): ["-lpthread"],
- config.lzma-ios-armv7.h:210 /* Define to 1 if you have the `pthread_condattr_setclock' function. */
- config.lzma-osx-arm64.h:210 /* Define to 1 if you have the `pthread_condattr_setclock' function. */

https://github.com/NVIDIA/egl-wayland
- m4/ax_pthread.m4:2 #        http://www.gnu.org/software/autoconf-archive/ax_pthread.html
- src/wayland-thread.c:41 static pthread_mutex_t wlMutex;
- src/wayland-eglswap.c:61     pthread_mutex_lock(&display->mutex);
- include/wayland-thread.h:27 #include <pthread.h>
- include/wayland-eglhandle.h:30 #include <pthread.h>

https://github.com/google/neper
- loop.c:56         pthread_mutex_lock(t->loop_init_m);
- thread.h:20 #include <pthread.h>
- psp_lib.c:26 static pthread_t km_thread;
- thread.c:305         pthread_mutex_lock(t->time_start_mutex);
- Makefile:65 ext-libs := -lm -lrt -lpthread

https://github.com/washingtondc-emu/washingtondc
- src/common/threading.h:103 #include <pthread.h>
- src/washdc-headless/CMakeLists.txt:130         set(washdc_headless_libs "${washdc_headless_libs}" "pthread" "event_pthreads")
- src/libwashdc/dreamcast.c:1462              * TODO: sleep on a pthread condition or something instead of
- src/common/frontend_io/gdb_stub.cpp:85      * the reason we need a lock here even though we use libevent with pthread
- src/common/frontend_io/io_thread.cpp:107     evthread_use_pthreads();

https://github.com/ViennaRNA/ViennaRNA
- m4/ax_pthread.m4:2 #        https://www.gnu.org/software/autoconf-archive/ax_pthread.html
- src/cthreadpool/README.md:22 uses POSIX threads so if you compile with gcc on Linux you have to use the flag `-pthread` like this:
- src/cthreadpool/docs/FAQ.md:2 ###Why isn't pthread_exit() used to exit a thread?
- src/cthreadpool/thpool.c:30 #include <pthread.h>
- m4/ac_rna_features.m4:248   RNA_ADD_FEATURE([pthreads],

https://github.com/phyphox/phyphox-android
- app/src/main/cpp/fftw3/m4/acx_pthread.m4:39 dnl (with help from M. Frigo), as well as ac_pthread and hb_pthread
- app/src/main/cpp/fftw3/m4/Makefile.am:1 EXTRA_DIST = acx_mpi.m4 acx_pthread.m4 ax_cc_maxopt.m4	\
- app/src/main/cpp/fftw3/threads/threads.c:30 #include <pthread.h>
- app/src/main/cpp/fftw3/m4/Makefile.in:93 	$(top_srcdir)/m4/acx_pthread.m4 \
- app/src/main/cpp/fftw3/genfft/Makefile.in:95 	$(top_srcdir)/m4/acx_pthread.m4 \

https://github.com/RadeonOpenCompute/ROCK-Kernel-Driver
- tools/perf/perf.h:15 void pthread__unblock_sigwinch(void);
- Documentation/block/ublk.rst:119   pthread & io_uring for handling ublk IO), this command is sent to the
- tools/virtio/Makefile:8 CFLAGS += -pthread
- scripts/sorttable.h:104 pthread_t orc_sort_thread;
- Documentation/locking/pi-futex.rst:64 locks (such as futex-based pthread mutexes) is priority inheritance:

https://github.com/intxcc/pyaudio_portaudio
- pyaudio/portaudio-v19/configure.in:369         AC_CHECK_LIB(pthread, pthread_create, , AC_MSG_ERROR([IRIX posix thread library not found!]))
- pyaudio/portaudio-v19/src/os/unix/pa_unix_util.h:49 #include <pthread.h>
- pyaudio/portaudio-v19/src/os/unix/pa_unix_util.c:44 #include <pthread.h>
- pyaudio/portaudio-v19/src/SConscript:69     neededLibs += [("pthread", "pthread.h", "pthread_create"), ("m", "math.h", "sin")]
- pyaudio/portaudio-v19/doc/src/tutorial/compile_linux.dox:50 You may also need to copy portaudio.h, located in the include/ directory of PortAudio into your project. Note that you will usually need to link with the approriate libraries that you used, such as ALSA and JACK, as well as with librt and libpthread. For example:

https://github.com/RPISEC/HackTheVote
- 2020/pwn/fileshare/README.md:6 - for how to use it: strace pthread creation, obscure syscalls may be worth investigating
- 2020/pwn/fileshare/src/fileshare.c:4 #include <pthread.h>
- 2020/pwn/fileshare/src/Makefile:2 	gcc fileshare.c -o fileshare -Wall -Wextra -pie -fstack-protector -Wl,-z,relro,-z,now -lpthread -O1
- 2020/pwn/fileshare/setup/setup.sh:21 tar czhf /libs.tar.gz /lib/x86_64-linux-gnu/libc.so.6 /lib64/ld-linux-x86-64.so.2 /lib/x86_64-linux-gnu/libpthread.so.0 /lib64/ld-linux-x86-64.so.2 /bin/sh
- 2020/pwn/fileshare/handout/Dockerfile:18 RUN tar czhf /libs.tar.gz lib/x86_64-linux-gnu/libc.so.6 lib64/ld-linux-x86-64.so.2 lib/x86_64-linux-gnu/libpthread.so.0 lib64/ld-linux-x86-64.so.2 bin/sh

https://github.com/lhmouse/mcfgthread
- README.md:44 * **WINPTHREAD**: winpthread `pthread_mutex_t`
- mcfgthread/gthr.h:53 /* Performs one-time initialization, like `pthread_once()`.  */
- mcfgthread/libcxx.h:42 /* Performs one-time initialization, like `pthread_once()`.  */
- mutex_performance.c:9 #include <pthread.h>
- patches/gcc-11.patch:47  		tm_file="${tm_file} i386/mingw-pthread.h"

https://github.com/SDL-Hercules-390/hyperion
- fthreads.h:2 /*              Fish's WIN32 version of pthreads                     */
- config.h.in:437 /* Define to 1 if you have the `pthread_rwlockattr_setpshared' function. */
- pttrace.h:98     ptt_pthread_trace( (_class), (_msg),(void*)(uintptr_t)(_data1),  \
- hthreads.h:31 #include <pthread.h>
- html/hercmslg.html:113       returned by the pthread_create call.

https://github.com/raul-ortega/u360gts
- src/test/Makefile:29 	-pthread \

https://github.com/jasper-software/jasper
- build/build:109 use_pthread=0
- CMakeLists.txt:577 find_library(PTHREAD_LIBRARY pthread)
- src/libjasper/include/jasper/jas_thread.h:91 #include <pthread.h>
- build/build_all:104 		command+=(--prefer-pthread)
- build/my_build:31 use_pthread=0

https://github.com/Zarh/ManaGunZ
- MGZ/lib/libwebp/m4/ax_pthread.m4:2 #        http://www.gnu.org/software/autoconf-archive/ax_pthread.html
- MGZ/lib/OpenSSL/crypto/threads_pthread.c:21     CRYPTO_RWLOCK *lock = OPENSSL_zalloc(sizeof(pthread_rwlock_t));
- MGZ/lib/libwebp/man/Makefile.in:97 am__aclocal_m4_deps = $(top_srcdir)/m4/ax_pthread.m4 \
- MGZ/lib/libwebp/cmake/deps.cmake:28     set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -pthread")
- MGZ/lib/OpenSSL/crypto/build.info:5         threads_pthread.c threads_win.c threads_none.c \

https://github.com/CartoDB/mobile-sdk
- android/native/utils/AndroidUtils.h:14 #include <pthread.h>
- android/native/utils/AndroidUtils.cpp:19         pthread_key_create(&_JNIEnvKey, AndroidUtils::DetachCurrentThread);

https://github.com/TA-Lib/ta-lib
- make/gen_make/template/freebsd-g++/tmake.conf:56 TMAKE_LIBS_THREAD	= -pthread
- make/cmd/freebsd/g++/gen_code/Makefile:17 LIBS	=	$(SUBLIBS) ../../../../../lib/libta_common_cmd.a  -pthread
- make/cmd/linux/g++/gen_code/Makefile:17 LIBS	=	$(SUBLIBS) ../../../../../lib/libta_common_cmd.a -ldl -lpthread
- make/cmd/freebsd/g++/ta_regtest/Makefile:17 LIBS	=	$(SUBLIBS) ../../../../../lib/libta_libc_cmd.a  -pthread
- make/cmr/freebsd/g++/ta_regtest/Makefile:17 LIBS	=	$(SUBLIBS) ../../../../../lib/libta_libc_cmr.a  -pthread

https://github.com/opsxcq/docker-tor-hiddenservice-nginx
- shallot/Makefile:19 LIBS:=-lm -lpthread -lssl -lcrypto
- shallot/src/thread.c:23 #include <pthread.h>
- shallot/src/shallot.c:269   pthread_t thrd;
- shallot/src/globals.h:8 #include <pthread.h>

https://github.com/masneyb/weather-station
- pi-yadl/src/sensor_argent_80422.c:29 #include <pthread.h>
- pi-yadl/Makefile:20 	gcc -g -Wall -Wextra -pedantic -std=c11 -D_DEFAULT_SOURCE -D_BSD_SOURCE -o ${YADL_BIN} ${YADL_C_DEPS} -lwiringPi -lrrd -lm -lpthread

https://github.com/choishingwan/PRSice
- CMakeLists.txt:39 #          Add pthread
- inc/prsice.hpp:52 //#define pthread_t HANDLE
- lib/plink_common.hpp:96   #define pthread_t HANDLE
- README.md:22 g++ --std=c++11 -I inc/ -isystem lib/ -DNDEBUG -O3 -march=native src/*.cpp -lz -lpthread -o PRSice
- Makefile:5 THREAD := -Wl,--whole-archive -lpthread

https://github.com/HewlettPackard/quartz
- TODO.dox:11 \todo Interpose pthread_cancel() e pthread_exit() to make sure the thread is always deregistered internally to the emulator?
- src/lib/stat.c:32 	__lib_pthread_mutex_lock(&thread_manager->mutex);
- src/lib/thread.c:16 #include <pthread.h>
- src/lib/thread.h:20 #include <pthread.h>
- bench/memlat/CMakeLists.txt:3 target_link_libraries(memlat nvmemul pthread)

https://github.com/nygenome/lancet
- src/Lancet.cc:371 	pthread_exit(NULL);
- htslib-1.15.1/thread_pool_internal.h:45 #include <pthread.h>
- README.md:27 Lancet can be built on most Linux installations. Most distributions already ship with all the c++ libraries that Lancet depends on: `lzma bz2 z dl pthread curl crypto deflate`. Compilation on MacOS require Xcode and Xcode command line tools installed. Lancet source code is available through github and can be obtained and compiled with the following command:
- htslib-1.15.1/configure.ac:80 static_LIBS='-lpthread -lz -lm'
- htslib-1.15.1/htscodecs/htscodecs/utils.h:37 // pthread_once is used to allocate large local memory blocks in hist8

https://github.com/moneroexamples/openmonero
- ext/restbed/dependency/openssl/crypto/threads/pthread.sh:3 # build using pthreads
- ext/restbed/dependency/asio/asio/configure.ac:78     CXXFLAGS="$CXXFLAGS -pthread"
- ext/restbed/cmake/configuration.cmake:55     set( CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -pthread" )
- ext/restbed/dependency/openssl/crypto/threads/th-lock.c:78 # include <pthread.h>
- ext/restbed/dependency/openssl/shlib/svr5-shared-gcc.sh:12 FLAGS="-O3 -DFILIO_H -fomit-frame-pointer -pthread"

https://github.com/sfan5/fi6s
- Makefile:3 CFLAGS = -pipe -std=gnu11 -pthread -fno-strict-aliasing
- src/scan.c:9 #include <pthread.h>
- src/util.c:2 #define _GNU_SOURCE // strchrnul, pthread_setname_np
- src/tcp-state.c:6 #include <pthread.h>
- src/scan-responder.c:6 #include <pthread.h>

https://github.com/y123456yz/tcprstat
- src/Makefile.am:31 tcprstat_CFLAGS = $(AM_CFLAGS) -pthread -I$(top_srcdir)/@LIBPCAP_SUBDIR@

https://github.com/IAIK/flush_flush
- sc/fr/spy.c:2 #include <pthread.h>
- sc/ff/spy_ff.c:2 #include <pthread.h>
- sc/pp/spy.c:2 #include <pthread.h>

https://github.com/OnePlusOSS/android_kernel_oneplus_msm8996
- Documentation/pi-futex.txt:63 locks (such as futex-based pthread mutexes) is priority inheritance:
- tools/hv/Makefile:4 PTHREAD_LIBS = -lpthread
- tools/perf/perf.h:38 void pthread__unblock_sigwinch(void);
- tools/perf/ui/ui.h:4 #include <pthread.h>
- Documentation/robust-futexes.txt:27 process exits prematurely while holding a pthread_mutex_t lock that is

https://github.com/linyows/octopass
- octopass.h:25 #include <pthread.h>
- octopass_cli.c:18 static pthread_mutex_t OCTOPASS_MUTEX = PTHREAD_MUTEX_INITIALIZER;
- nss_octopass-shadow.c:19 static pthread_mutex_t OCTOPASS_MUTEX = PTHREAD_MUTEX_INITIALIZER;
- nss_octopass-group.c:19 static pthread_mutex_t OCTOPASS_MUTEX = PTHREAD_MUTEX_INITIALIZER;
- nss_octopass-passwd.c:19 static pthread_mutex_t OCTOPASS_MUTEX = PTHREAD_MUTEX_INITIALIZER;

https://github.com/duraki/virtualcar
- Makefile:7 	$(CC) -pthread $(SOURCES) -o $(PROJECT_NAME)
- src/car.c:32 #include <pthread.h>
- src/virtualcar.c:36 #include <pthread.h>

https://github.com/littlstar/soil
- configure:431   ## we add this to stop the mising headering file error: 'libuv(pthread-barrier.h)'

https://github.com/Corotata/Potatso-iOS
- PacketProcessor/tun2socks-iOS/base/BMutex.h:38 #include <pthread.h>
- Library/ShadowPath/ShadowPath/Privoxy/jcc.h:66 #include <pthread.h>
- Library/ShadowPath/ShadowPath/Antinat/client/an_core.m:13 #include <pthread.h>
- Library/ShadowPath/ShadowPath/Antinat/an_config.h:81 /* Define to 1 if you have the `pthread_attr_setscope' function. */
- Library/ShadowPath/ShadowPath/Antinat/server/an_serv.h:28 #include <pthread.h>

https://github.com/LineageOS/android_kernel_lge_msm8996
- Documentation/pi-futex.txt:63 locks (such as futex-based pthread mutexes) is priority inheritance:
- tools/hv/Makefile:4 PTHREAD_LIBS = -lpthread
- tools/perf/perf.h:40 void pthread__unblock_sigwinch(void);
- tools/perf/ui/ui.h:4 #include <pthread.h>
- Documentation/robust-futexes.txt:27 process exits prematurely while holding a pthread_mutex_t lock that is

https://github.com/longsleep/linux-pine64
- Documentation/pi-futex.txt:63 locks (such as futex-based pthread mutexes) is priority inheritance:
- tools/perf/ui/ui.h:4 #include <pthread.h>
- tools/usb/Makefile:4 PTHREAD_LIBS = -lpthread
- Documentation/rt-mutex.txt:5 which enable pthread_mutex_t priority inheritance attributes
- tools/gator/daemon/Logging.cpp:22 #include <pthread.h>

https://github.com/Techlord-RCE/skypeopensource2
- skyauth3/skyauth3/miracl_lib/mrcore.c:74     #include <pthread.h>
- skyrelay3/skyrelay3/miracl_lib/mrcore.c:74     #include <pthread.h>
- skysearch3/skysearch3/miracl_lib/mrcore.c:74     #include <pthread.h>
- skycontact3/skycontact3/miracl_lib/mrcore.c:74     #include <pthread.h>
- skyauth4_dll/skyauth4_dll/miracl_lib/mrcore.c:74     #include <pthread.h>

https://github.com/WilsonDhChen/mediasrv_linux
- src/include/adapi.h:328     typedef pthread_mutex_t  MTX_OBJ;
- src/include/liboplayer.h:20 	#include <pthread.h>

https://github.com/COVESA/wayland-ivi-extension
- ivi-layermanagement-api/ilmClient/src/ilm_client.c:24 #include <pthread.h>
- ivi-layermanagement-examples/layer-add-surfaces/src/layer-add-surfaces.c:29 #include <pthread.h>
- ivi-layermanagement-api/ilmControl/src/ilm_control_wayland_platform.c:91    pthread_mutex_lock(&ctx->mutex);
- ivi-layermanagement-examples/LayerManagerControl/src/sceneio.cpp:35 #include <pthread.h>
- ivi-layermanagement-examples/simple-weston-client/CMakeLists.txt:125     target_link_libraries(${PROJECT_NAME} pthread)

https://github.com/mwsrc/Mass-Malicious-Script-Dump
- Stresser/ACK/ack_attack.c:12 #include <pthread.h>
- Stresser/SSDP/ssdpscanner.c:13 #include <pthread.h>
- Stresser/MDNS/mdns_amp_scanner.c:2 #include <pthread.h>
- Stresser/NETBIOS/netbios_amp_attack.c:6 #include <pthread.h>
- Stresser/SENTINEL/sentinel_amp_attack.c:4 #include <pthread.h>

https://github.com/LineageOS/android_device_samsung_klte-common
- fingerprint/fingerprint_common.h:44     pthread_cond_t cond;
- fingerprint/fingerprint.c:52     pthread_mutex_t lock;
- fingerprint/fingerprint_tz.c:49     pthread_mutex_lock(&tz.lock);

https://github.com/killswitch-GUI/HotLoad-Driver
- PcapTest/docs/html/daemon_8h.html:37 <tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="daemon_8h.html#a17c4e1f787be3e05287772cef511a91d">pthread_suspend</a> (int msec)</td></tr>
- PcapTest/docs/html/daemon_8h_source.html:73 <a name="l00048"></a>00048 <span class="keywordtype">void</span> <a class="code" href="daemon_8h.html#a17c4e1f787be3e05287772cef511a91d">pthread_suspend</a>(<span class="keywordtype">int</span> msec);
- PcapTest/docs/html/globals_func.html:488 <li>pthread_suspend()
- PcapTest/docs/html/globals_0x70.html:474 <li>pthread_suspend()

https://github.com/laohixdxm/6.828
- hw6/ph.c:5 #include <pthread.h>
- hw9/barrier.c:5 #include <pthread.h>
- hw9/solution.md:3 The section on conditional variables [here](https://computing.llnl.gov/tutorials/pthreads/#ConditionVariables) was very helpful.

https://github.com/hoene/libmysofa
- src/CMakeLists.txt:216     target_link_libraries(multithread mysofa-static pthread)
- src/tests/multithread.c:6 #include <pthread.h>

https://github.com/cisco/libacvp
- configure.ac:57     [[CFLAGS="$CFLAGS -Wl,-z,noexecstack -pthread"]])
- config/ltmain.sh:4554 	   # Do not include libc_r directly, use -pthread flag.
- murl/Makefile:25 	$(CC) $(INCDIRS) -I.. $(CFLAGS) $(TEST_OBJECTS) -o ut-murl $(LDFLAGS) -L. -lmurl -lcrypto -lssl -lpthread
- murl/test/ut_tls.c:16 #include <pthread.h>

https://github.com/ivmai/cudd
- configure.ac:69 AC_CHECK_LIB([pthread],[pthread_create],[have_pthreads=yes],[have_pthreads=no])
- cplusplus/Included.am:34 cplusplus_testmulti_LDFLAGS = -pthread
- config.h.in:164    <pthread.h>, or <semaphore.h> is not used. If the typedef were allowed, the
- Makefile.in:932 @HAVE_PTHREADS_TRUE@cplusplus_testmulti_LDFLAGS = -pthread
- build-aux/ltmain.sh:5633 	   # Do not include libc_r directly, use -pthread flag.

https://github.com/pycom/pycom-esp-idf
- components/pthread/pthread.c:15 // This module implements pthread API on top of FreeRTOS. API is implemented to the level allowing
- components/newlib/include/pthread.h:1 /*  pthread.h
- components/pthread/pthread_internal.h:16 void pthread_internal_local_storage_destructor_callback();
- components/pthread/pthread_cond_var.c:15 // This is a simple implementation of pthread condition variables. In essence,
- components/pthread/pthread_local_storage.c:15 #include <pthread.h>

https://github.com/g0orx/pihpsdr
- beep.c:32 #include <pthread.h>
- Makefile:213 LIBS= -lm -lwdsp -lpthread $(AUDIO_LIBS) $(USBOZY_LIBS) $(GTKLIBS) $(GPIO_LIBS) $(SOAPYSDRLIBS) $(STEMLAB_LIBS) $(MIDI_LIBS) $(SYSLIBS)
- newhpsdrsim.c:4 #include <pthread.h>
- new_protocol.c:221 static pthread_mutex_t rx_spec_mutex = PTHREAD_MUTEX_INITIALIZER;
- old_protocol.c:1332 static pthread_mutex_t send_buffer_mutex   = PTHREAD_MUTEX_INITIALIZER;

https://github.com/varghes/Raspberry-QNX
- Led-red/Led-red.c:10 #include <pthread.h>
- Bsp_Rasp/src/hardware/devi/lib/gfi.c:39 #include <pthread.h>
- Bsp_Rasp/src/hardware/devb/mmcsd/sim.c:210 	pthread_setname_np( NULL, "mmc_control_thread" );
- Bsp_Rasp/src/hardware/devi/lib/buffer.c:52 			pthread_mutex_init (&cbptr->mutex, NULL);
- Bsp_Rasp/src/hardware/devi/lib/resmgr.c:185 	pthread_mutex_lock (&line->mutex);

https://github.com/wireapp/wire-avs
- mk/re.mk:106 # pthread
- mk/contrib.mk:229 		-pthread \
- tools/zcall/clilog.c:24 #include <pthread.h>
- src/rtpdump/rtpdump.cpp:76 	pthread_mutex_init(&_mutex,NULL);
- src/audio_io/ios/audio_io_ios.mm:94 	pthread_mutex_init(&cond_mutex_,NULL);

https://github.com/LineageOS/android_device_motorola_athene
- gps/utils/msg_q.c:36 #include <pthread.h>
- gps/utils/LocThread.h:33 #include <pthread.h>
- liblight/lights.c:22 #include <pthread.h>
- gps/utils/LocThread.cpp:31 #include <pthread.h>
- gps/utils/LocSharedLock.h:34 #include <pthread.h>

https://github.com/cisco/cjose
- ltmain.sh:7043 	   # Do not include libc_r directly, use -pthread flag.

https://github.com/gfreewind/LinuxDetails
- networks/2.tcp_push_packet/tcp_force_push.c:29 #include <pthread.h>
- fs/5.multi_thread_write_file/multi_thread_write_file.c:4 #include <pthread.h>
- fs/1.mmap_write_performance/Makefile:9 LDFLAGS := -lpthread
- fs/3.mmap_write_sync_nocache/Makefile:9 LDFLAGS := -lpthread
- networks/3.tcp_unread_hit_rst/tcp_unread_rst.c:29 #include <pthread.h>

https://github.com/LineageOS/android_kernel_samsung_jf
- Documentation/pi-futex.txt:63 locks (such as futex-based pthread mutexes) is priority inheritance:
- tools/usb/Makefile:4 PTHREAD_LIBS = -lpthread
- tools/usb/testusb.c:1 /* $(CROSS_COMPILE)cc -Wall -Wextra -g -lpthread -o testusb testusb.c */
- Documentation/rt-mutex.txt:5 which enable pthread_mutex_t priority inheritance attributes
- Documentation/robust-futexes.txt:27 process exits prematurely while holding a pthread_mutex_t lock that is

https://github.com/embedded2016/bplus-tree
- src/bplus.c:11     ret = pthread_rwlock_init(&tree->rwlock, NULL) ? BP_ERWLOCK : BP_OK;
- include/private/tree.h:11 #include <pthread.h>
- Makefile:9 LDFLAGS += -lpthread
- test/test-threaded-rw.cc:74   pthread_t readers[n];
- test/bench-multithread-get.cc:21   pthread_t readers[rnum];

https://github.com/LineageOS/android_device_samsung_i9300
- power/power.c:41 static pthread_mutex_t lock = PTHREAD_MUTEX_INITIALIZER;
- shims/libsecril-shim/secril-shim.c:4 #include <pthread.h>
- audio/audio_hw.c:25 #include <pthread.h>
- libsensors/SensorBase.cpp:24 #include <pthread.h>
- libsensors/sensors.cpp:25 #include <pthread.h>

https://github.com/anhilo/xiaogongju
- BaseAPI.h:40 //int API_thread_create(pthread_t *thread, const pthread_attr_t *attr,
- generic.h:17     #include<pthread.h> //for threading , link with lpthread
- docs/EW重构之BASEAPI.txt:56 				pthread_detach(pthread_self());
- Lcx_Base.c:39 //    pthread_detach(pthread_self());
- ssocksd_pro.c:24 //  pthread_detach(pthread_self());

https://github.com/lishuhuakai/CS
- muduo/ChangeLog:157     Rethrow in catch(...) to make pthread_cancel() working.
- muduo/muduo/base/Mutex.h:12 #include <pthread.h>
- muduo/muduo/base/premake4.lua:4     links{'pthread', 'rt'}
- muduo/muduo/base/Thread.h:15 #include <pthread.h>
- muduo/muduo/base/Condition.cc:24   return ETIMEDOUT == pthread_cond_timedwait(&pcond_, mutex_.getPthreadMutex(), &abstime);

https://github.com/IanLee1521/hypre
- src/config/Makefile.config:89 FLIBS   =  -L/home/falgout/codes/mpich2-1.4.1-install/lib -L/usr/lib/gcc/x86_64-redhat-linux/4.4.7 -L/usr/lib/gcc/x86_64-redhat-linux/4.4.7/../../../../lib64 -L/lib/../lib64 -L/usr/lib/../lib64 -L/usr/lib/gcc/x86_64-redhat-linux/4.4.7/../../.. -lmpich -lopa -lmpl -lrt -lpthread -lgfortranbegin -lgfortran -lm
- src/config/configure.in:29 dnl * optimization, debugging, MPI and pthreading (as required) and the

https://github.com/linw7/Skill-Tree
- code/pthread.cpp:1 // g++ -o pthread pthread.cpp -lpthread
- code/pthread_cond.c:5 #include <pthread.h>
- code/pthread_mutex_cond.c:5 #include <pthread.h>
- code/pthread_para.cpp:1 // g++ -o pthread pthread_para.cpp -lpthread
- code/pthread_struct.cpp:1 // g++ -o pthread pthread_struct.cpp -lpthread

https://github.com/F-Stack/f-stack
- dpdk/lib/eal/windows/include/pthread.h:14  * does not contain pthread.h. This may be removed in future releases.
- freebsd/contrib/libsodium/m4/ax_pthread.m4:2 #        https://www.gnu.org/software/autoconf-archive/ax_pthread.html
- freebsd/sys/_pthreadtypes.h:46 struct pthread;
- example/Makefile:17 LIBS+= -Wl,--no-whole-archive -lrt -lm -ldl -lcrypto -pthread -lnuma
- tools/ngctl/main.c:59 #include <pthread.h>

https://github.com/canonical/dqlite
- m4/ax_pthread.m4:2 #        https://www.gnu.org/software/autoconf-archive/ax_pthread.html
- src/server.h:26 	pthread_t thread;                        /* Main run loop thread. */
- src/server.c:850 	rv = pthread_create(&t->thread, 0, &taskStart, t);
- src/vfs.c:3 #include <pthread.h>
- m4/attributes.m4:90      dnl FreeBSD (et al.) does not complete linking for shared objects when pthreads

https://github.com/AlexAltea/orbital
- tools/dumper/source/ksdk_176.inc:316 		dprintf("[-] pthread_create error\n");
- tools/ida/db_types.json:656   "sceFaceTrackerInitialize": "int sceFaceTrackerInitialize(int width, int height, int rowstride, int maxTrackingNum, pthread_mutex_t *threadFuncMutex, const struct *pConfig, void *work, int workSize)",

https://github.com/xiph/rnnoise
- m4/attributes.m4:109      dnl FreeBSD (et al.) does not complete linking for shared objects when pthreads

https://github.com/jiangdongguo/AndroidUSBCamera
- VERSION.md:51 2. Fix “pthread_mutex_lock called on a destroyed mutex” when call stop preview
- libuvc/src/main/jni/libusb/configure.ac:100 	AC_SEARCH_LIBS(clock_gettime, rt, [], [], -pthread)
- libuvc/src/main/jni/UVCCamera/UVCPreview.h:29 #include <pthread.h>
- libuvc/src/main/jni/libusb/examples/dpfp_threaded.c:25 #include <pthread.h>
- libuvc/src/main/jni/UVCCamera/UVCButtonCallback.cpp:15 	pthread_mutex_init(&button_mutex, NULL);

https://github.com/RedisGraph/RedisGraph
- src/module.c:8 #include <pthread.h>
- src/globals.c:11 	pthread_rwlock_t lock;              // READ/WRITE lock
- src/cron/cron.c:14 #include <pthread.h>
- src/query_ctx.c:18 pthread_key_t _tlsQueryCtxKey;  // thread local storage query context key
- src/errors/errors.c:14 pthread_key_t _tlsErrorCtx; // Error-handling context held in thread-local storage.

https://github.com/jiangwenyuan/nuster
- src/wdt.c:100 		/* we got a pthread_kill, stop on it */
- INSTALL:156 need to append "-lpthread" and/or "-ldl" depending on the operating system.
- src/shctx.c:301 	pthread_mutexattr_t attr;
- src/thread.c:137 	pthread_kill(ha_thread_info[thr].pthread, sig);
- contrib/spoa_server/Makefile:8 CFLAGS  = -g -O2 -Wall -Werror -pthread

https://github.com/s0lst1c3/eaphammer
- local/hcxtools/README.md:83 * libpthread and pthread-dev installed (used by hcxhashcattool)
- local/hcxtools/hcxhashcattool.c:18 #include <pthread.h>
- local/hcxdumptool/hcxdumptool.c:36 #include <pthread.h>
- local/hcxtools/Makefile:26 hcxhashcattool_libs=-lcrypto -lpthread
- local/hcxdumptool/README.md:61 * libpthread and pthread-dev installed

https://github.com/twitter/ios-twitter-image-pipeline
- Extended/libwebp/m4/ax_pthread.m4:2 #        http://www.gnu.org/software/autoconf-archive/ax_pthread.html
- Extended/libwebp/src/libwebp.pc:11 Libs.private: -lm -D_THREAD_SAFE -pthread 
- Extended/libwebp/man/Makefile.in:97 am__aclocal_m4_deps = $(top_srcdir)/m4/ax_pthread.m4 \
- Extended/libwebp/cmake/deps.cmake:28     set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -pthread")
- Extended/libwebp/man/Makefile:97 am__aclocal_m4_deps = $(top_srcdir)/m4/ax_pthread.m4 \

https://github.com/atomvm/AtomVM
- src/platforms/generic_unix/lib/smp.c:24 #include <pthread.h>
- src/platforms/emscripten/src/CMakeLists.txt:29 target_compile_options(libAtomVM PUBLIC -O3 -fno-exceptions -fno-rtti -pthread -sINLINING_LIMIT -sUSE_ZLIB=1)
- doc/src/atomvm-internals.md:154 WebAssembly or Wasm port of AtomVM relies on Emscripten SDK and library. Even when SMP is disabled (with `-DAVM_DISABLE_SMP=On`), it uses pthread library to sleep when Erlang processes are not running (to not waste CPU cycles).
- src/platforms/emscripten/src/lib/sys.c:31 #include <pthread.h>
- src/platforms/esp32/components/avm_sys/include/esp32_sys.h:24 #include "esp_pthread.h"

https://github.com/feiskyer/sdn-handbook
- dpdk/numa.md:38 DPDK中lcore实际上是EAL pthread，每个EAL pthread都有一个Thread Local Storage的`_lcore_id`，`_lcore_id`与CPU ID是一致的。注意虽然默认是1:1关系，但可以通过`--lcores='<lcore_set>@<cpu_set>'`来指定lcore的CPU亲和性，这样可以不是1:1的，也就是多个lcore还是可以亲和到同一个的核，这就需要注意调度的情况（以非抢占式无锁`rte_ring`为例）：
- dpdk/install_old/dpdk_build.sh:41 sed -ri '/EXECENV_CFLAGS  = -pthread -fPIC/{s/$/\nelse ifeq ($(CONFIG_RTE_BUILD_FPIC),y)/;s/$/\nEXECENV_CFLAGS  = -pthread -fPIC/}' mk/exec-env/linuxapp/rte.vars.mk
- dpdk/introduction.md:36 * 减少进程上下文切换: 需要了解哪些场景会触发CS操作。首先就介绍的就是不可控的场景：进程时间片到期；更高优先级进程抢占CPU。其次是可控场景：休眠当前进程(pthread_cond_wait)；唤醒其它进程(pthread_cond_signal)；加锁函数、互斥量、信号量、select、sleep等非常多函数都是可控的。对于可控场景是在应用编程需要考虑的问题，只要程序逻辑设计合理就能较少CS的次数。对于不可控场景，首先想到的是适当减少活跃进程或线程数量，因此保证活跃进程数目不超过CPU个数是一个明智的选择；然后有些场景下，我们并不知道有多少个活跃线程的时候怎么来保证上下文切换次数最少呢？这是我们就需要使用线程池模型：让每个线程工作前都持有带计数器的信号量，在信号量达到最大值之前，每个线程被唤醒时仅进行一次上下文切换，当信号量达到最大值时，其它线程都不会再竞争资源了。
- dpdk/index.md:53     需要了解哪些场景会触发CS操作。首先就介绍的就是不可控的场景：进程时间片到期；更高优先级进程抢占CPU。其次是可控场景：休眠当前进程(pthread\_cond\_wait)；唤醒其它进程(pthread\_cond\_signal)；加锁函数、互斥量、信号量、select、sleep等非常多函数都是可控的。对于可控场景是在应用编程需要考虑的问题，只要程序逻辑设计合理就能较少CS的次数。对于不可控场景，首先想到的是适当减少活跃进程或线程数量，因此保证活跃进程数目不超过CPU个数是一个明智的选择；然后有些场景下，我们并不知道有多少个活跃线程的时候怎么来保证上下文切换次数最少呢？这是我们就需要使用线程池模型：让每个线程工作前都持有带计数器的信号量，在信号量达到最大值之前，每个线程被唤醒时仅进行一次上下文切换，当信号量达到最大值时，其它线程都不会再竞争资源了。

https://github.com/bloomberg/comdb2
- berkdb/mutex/mut_pthread.c:12 static const char revid[] = "$Id: mut_pthread.c,v 11.57 2003/05/05 19:55:03 bostic Exp $";
- util/comdb2_pthread_create.c:32 #include "comdb2_pthread_create.h"
- bbinc/comdb2_pthread_create.h:20 #include <pthread.h>
- util/CMakeLists.txt:12   comdb2_pthread_create.c
- db/cron.c:28     pthread_t tid; /* pthread id of the thread owning this cron structure */

https://github.com/HelenOS/helenos
- uspace/lib/posix/include/posix/pthread.h:46 typedef void *pthread_t;
- uspace/lib/posix/src/pthread/keys.c:36 #include <pthread.h>
- uspace/lib/posix/src/pthread/mutex.c:35 #include <pthread.h>
- uspace/lib/posix/src/pthread/threads.c:35 #include <pthread.h>
- uspace/lib/posix/src/pthread/condvar.c:35 #include <pthread.h>

https://github.com/pi-hole/FTL
- src/syscalls/pthread_mutex_lock.c:6 *  Pi-hole syscall implementation for pthread_mutex_lock
- src/daemon.h:14 extern pthread_t threads[THREADS_MAX];
- src/daemon.c:29 pthread_t threads[THREADS_MAX] = { 0 };
- src/syscalls/CMakeLists.txt:19         pthread_mutex_lock.c
- src/tools/arp-scan.c:393 		pthread_exit(NULL);

https://github.com/kkkgo/vlmcsd
- src/VisualStudio-Linux-Remote/toolchains/gcc5-x86_64-linux-gnu/usr/include/pthread.h:26 #include <bits/pthreadtypes.h>
- src/VisualStudio-Linux-Remote/toolchains/gcc5-x86_64-linux-gnu/usr/include/bits/pthreadtypes.h:60 typedef unsigned long int pthread_t;
- src/shared_globals.c:141 pthread_mutex_t logmutex = PTHREAD_MUTEX_INITIALIZER;
- src/kms.c:174 pthread_mutex_t* mutex;
- ChangeLog:113 The OpenBSD pre-compiled binary now uses threads instead of fork because of missing pthread_mutexattr_setpshared.

https://github.com/horizon-eda/horizon
- meson.build:11 pthread = cxx.find_library('pthread')
- make_bindist.sh:14 	libwinpthread-1.dll\

https://github.com/openenclave/openenclave
- libc/pthread.c:6 #include <openenclave/corelibc/pthread.h>
- include/openenclave/corelibc/pthread.h:27 typedef uint64_t oe_pthread_t;
- include/openenclave/corelibc/bits/pthread_def.h:12 typedef oe_pthread_t pthread_t;
- include/openenclave/corelibc/bits/pthread_key.h:7 typedef oe_pthread_key_t pthread_key_t;
- include/openenclave/corelibc/bits/pthread_once.h:8 int pthread_once(pthread_once_t* once, void (*func)(void))

https://github.com/alibaba/ApsaraCache
- src/bio.c:65 static pthread_t bio_threads[BIO_NUM_OPS];
- src/Makefile:83 	FINAL_LIBS+= -ldl -lnsl -lsocket -lresolv -lpthread -lrt
- src/msqueue.h:32 #include <pthread.h>
- src/msqueue.c:43     pthread_spin_init(&(q->head_lock), 0);
- src/atomicvar.h:16  *  pthread_mutex_t myvar_mutex;

https://github.com/chrisjmccormick/word2vec_commented
- makefile:3 CFLAGS = -lm -pthread -O3 -march=native -Wall -funroll-loops -Wno-unused-result
- demo-train-big-model-v1.sh:93 gcc word2vec.c -o word2vec -lm -pthread -O3 -march=native -funroll-loops
- word2vec.c:19 #include <pthread.h>
- word2phrase.c:19 #include <pthread.h>

https://github.com/everettjf/AppleTrace
- appletrace/appletrace/src/appletrace.mm:14 #include <pthread.h>
- hookzz/src/zzdeps/posix/thread-utils-posix.h:25 #include <pthread.h>
- hookzz/src/zzdeps/posix/thread-utils-posix.c:18 #include <pthread.h>

https://github.com/shadowsocksr-backup/shadowsocksr-libev
- m4/ax_pthread.m4:2 #        http://www.gnu.org/software/autoconf-archive/ax_pthread.html
- libcork/pthreads/thread.c:11 /* This is needed on Linux to get the pthread_setname_np function. */
- config.h.in:382    <pthread.h>, or <semaphore.h> is not used. If the typedef were allowed, the
- config.h.cmake:386    <pthread.h>, or <semaphore.h> is not used. If the typedef were allowed, the
- doc/Makefile.in:93 am__aclocal_m4_deps = $(top_srcdir)/m4/ax_pthread.m4 \

https://github.com/VincentWei/MiniGUI
- include/psos_pthread.h:14  * \file psos_pthread.h
- include/ucos2_pthread.h:14  * \file ucos2_pthread.h
- include/vxworks_pthread.h:14  * \file vxworks_pthread.h
- include/win32_pthread.h:27  *      http://sources.redhat.com/pthreads-win32/contributors.html
- src/libc/ucos2_pthread.c:47 ** ucos2_pthread.c: implementation of pthread function under uC/OS-II.

https://github.com/apache/mynewt-nimble
- porting/examples/linux/main.c:24 #include <pthread.h>
- porting/npl/nuttx/src/wqueue.h:26 #include <pthread.h>
- porting/npl/linux/src/os_task.c:60     err = pthread_attr_init(&t->attr);
- porting/npl/nuttx/src/os_callout.c:38 pthread_t callout_thread;
- porting/npl/nuttx/src/os_task.c:61     err = pthread_attr_init(&t->attr);

https://github.com/ssdeep-project/ssdeep
- win.sh:4 ./configure --host=i686-w64-mingw32 CXXFLAGS="-Wall -W -g -ggdb -O3 -static" CFLAGS="-Wall -W -g -ggdb -O3 -static" LIBS="-Wl,-Bstatic -lstdc++ -lpthread -static-libgcc"
- Makefile.am:61 	./configure --host=i686-w64-mingw32 LIBS="-Wl,-Bstatic -lstdc++ -lpthread -static-libgcc"

https://github.com/schellingb/TinySoundFont
- examples/build-osx.sh:2 clang -std=c99 -Wall example1.c minisdl_audio.c -lm -ldl -lpthread -framework CoreServices -framework CoreAudio -framework AudioUnit -o example1-osx-`uname -m`
- examples/build-linux-gcc.sh:2 gcc -Wall example1.c minisdl_audio.c -lm -ldl -lpthread -o example1-linux-`uname -m`
- examples/build-linux-clang.sh:2 clang -std=c99 -Wall example1.c minisdl_audio.c -lm -ldl -lpthread -o example1-linux-`uname -m`

https://github.com/phoenhex/files
- exploits/safari-sbx/injector.c:14 #include <pthread.h>
- exploits/safari-sbx/webcontent.c:17 #include <pthread.h>

https://github.com/Samsung/TizenRT
- os/kernel/pthread/pthread.h:19  * kernel/pthread/pthread.h
- lib/libc/pthread/pthread_once.c:19  * libc/pthread/pthread_once.c
- os/kernel/pthread/pthread_exit.c:19  * kernel/pthread/pthread_exit.c
- os/kernel/pthread/pthread_kill.c:19  * kernel/pthread/pthread_kill.c
- os/kernel/pthread/pthread_join.c:19  * pthread_join.c

https://github.com/solenum/exengine
- src/lib/physfs/physfs_platform_posix.c:24 #include <pthread.h>
- src/lib/SDL2/SDL_hints.h:792 *  Support for this hint is currently available only in the pthread, Windows, and PSP backend.

https://github.com/menwenjun/redis_source_annotation
- redis-3.2.8/src/bio.c:64 static pthread_t bio_threads[BIO_NUM_OPS];
- redis-3.2.8/src/Makefile:65 	FINAL_LIBS+= -ldl -lnsl -lsocket -lresolv -lpthread -lrt
- redis-3.2.8/src/zmalloc.c:43 #include <pthread.h>
- redis-3.2.8/deps/jemalloc/src/tsd.c:166 	pthread_t self = pthread_self();
- redis-3.2.8/deps/jemalloc/src/mutex.c:24 static void	pthread_create_once(void);

https://github.com/koverstreet/bcachefs
- tools/mm/Makefile:11 CFLAGS += -Wall -Wextra -I../lib/ -pthread
- Documentation/block/ublk.rst:119   pthread & io_uring for handling ublk IO), this command is sent to the
- tools/perf/ui/ui.h:34 void pthread__block_sigwinch(void);
- tools/usb/testusb.c:2 /* $(CROSS_COMPILE)cc -Wall -Wextra -g -lpthread -o testusb testusb.c */
- Documentation/locking/rt-mutex.rst:6 which enable pthread_mutex_t priority inheritance attributes

https://github.com/liudf0716/xkcptun
- xkcp_client.c:35 #include <pthread.h>
- jwHash.c:26 #include <pthread.h>

https://github.com/chankeh/net-lenrning-reference
- ch24/web.c:7 #include <pthread.h>
- ch18/server.c:10 #include <pthread.h>
- ch18/client.c:8 #include <pthread.h>
- ch18/sem.c:2 #include <pthread.h>
- ch18/Thread1.c:2 #include <pthread.h>

https://github.com/NVSL/linux-nova
- Documentation/pi-futex.txt:64 locks (such as futex-based pthread mutexes) is priority inheritance:
- tools/perf/ui/ui.h:5 #include <pthread.h>
- tools/usb/Makefile:4 PTHREAD_LIBS = -lpthread
- Documentation/robust-futexes.txt:31 process exits prematurely while holding a pthread_mutex_t lock that is
- Documentation/locking/rt-mutex.txt:5 which enable pthread_mutex_t priority inheritance attributes

https://github.com/denandz/fuzzotron
- fuzzotron.c:16 #include <pthread.h>
- Makefile:4 LIBS = -lpcre -lssl -lcrypto -lpthread

https://github.com/HcashOrg/Hshare
- src/makefile.bsd:48    -l pthread
- src/leveldb/util/env_posix.cc:11 #include <pthread.h>
- src/leveldb/build_detect_platform:85         COMMON_FLAGS="$MEMCMP_FLAG -pthread -DOS_LINUX"
- src/leveldb/port/port_posix.h:44 #include <pthread.h>
- src/leveldb/port/port_posix.cc:17     fprintf(stderr, "pthread %s: %s\n", label, strerror(result));

https://github.com/Rinnegatamante/vitaGL
- README.md:37 `HAVE_PTHREAD=1` Use pthread instead of sceKernel for starting garbage collector thread.<br>
- source/gxm.c:100 pthread_t gc_thread;

https://github.com/devnoname120/vhbb
- src/vitasdk_quirks.cpp:8 #include <pthread.h>
- CMakeLists.txt:181         pthread

https://github.com/jovanbulck/sgx-step
- libsgxstep/spy.c:23 #include <pthread.h>
- app/idt/Makefile:25                        -lsgx_uae_service -pthread $(SUBDIRS:%=-L %) -L$(SGX_SDK)/lib64/
- app/foreshadow/Makefile:32                        -lsgx_uae_service -pthread $(SUBDIRS:%=-L %) -L$(SGX_SDK)/lib$(LIB_SUFX)/ \
- app/lvi/Makefile:31                        -lsgx_uae_service -pthread $(SUBDIRS:%=-L %) -L$(SGX_SDK)/lib$(LIB_SUFX)/ \
- app/bench/Makefile:32                        -lsgx_uae_service -pthread $(SUBDIRS:%=-L %) -L$(SGX_SDK)/lib$(LIB_SUFX)/ \

https://github.com/google/kmsan
- Documentation/block/ublk.rst:119   pthread & io_uring for handling ublk IO), this command is sent to the
- tools/perf/ui/ui.h:34 void pthread__block_sigwinch(void);
- tools/virtio/Makefile:19 CFLAGS += -pthread
- tools/usb/testusb.c:2 /* $(CROSS_COMPILE)cc -Wall -Wextra -g -lpthread -o testusb testusb.c */
- Documentation/locking/pi-futex.rst:64 locks (such as futex-based pthread mutexes) is priority inheritance:

https://github.com/JingchengLi/swapdb
- swap-ssdb-1.9.2/build.sh:34         #PLATFORM_CLIBS="-pthread"
- swap-redis-4.0.0/src/bio.c:64 static pthread_t bio_threads[BIO_NUM_OPS];
- swap-redis-4.0.0/src/Makefile:82 	FINAL_LIBS+= -ldl -lnsl -lsocket -lresolv -lpthread -lrt
- swap-ssdb-1.9.2/src/util/log.h:26 #include <pthread.h>
- swap-redis-4.0.0/CMakeLists.txt:46 TARGET_LINK_LIBRARIES(redis-benchmark hiredis jemalloc pthread)

https://github.com/JulNadeauCA/libagar
- core/core.c:46 # include <agar/config/have_pthreads_xopen.h>
- p5-Agar/Makefile.PL:25 $agar_libs =~ s/-pthread/-lpthread/g;
- core/threads.h:8 #include <agar/config/have_pthreads.h>
- core/inline_threads.h:16 	if ((rv = pthread_create(th, NULL, fn, arg)) != 0)
- configure.in:35 register("--with-pthreads[=PREFIX]",	"POSIX Threads support [check]")

https://github.com/r-lib/fs
- src/libuv-1.44.2/m4/ax_pthread.m4:2 #        https://www.gnu.org/software/autoconf-archive/ax_pthread.html
- src/libuv-1.44.2/src/unix/pthread-fixes.c:32 /* Android versions < 4.1 have a broken pthread_sigmask. */
- src/Makevars:5 PKG_LIBS = ./$(LIBUV)/.libs/libuv.a -pthread
- inst/WORDLIST:38 pthread
- NEWS.md:173 * Link with -pthread by default and fix on BSD systems (#128, #145, #146).

https://github.com/Seagate/openSeaChest
- Make/vmware/Makefile:281 VMW_uw32_beta_COMPILEFLAGS = -pthread -fwrapv -pipe -fno-working-directory -fno-strict-aliasing -funwind-tables -fasynchronous-unwind-tables -Wall -O2 -march=i686 -g -fPIC -fstack-protector -fstack-protector-all -fno-strict-aliasing -Wno-unused-but-set-variable -Wno-unused-value -Wno-enum-compare -Wno-switch --sysroot=$(CAYMAN_ESX_GLIBC_DIR)/sysroot -m32 -isystem $(CAYMAN_ESX_TOOLCHAIN_DIR)/usr/lib/gcc/x86_64-vmk-linux-gnu/4.8.4/include -D_LARGEFILE64_SOURCE -D_XOPEN_SOURCE=500 -D_SVID_SOURCE -DVMX86_DEBUG -D_FORTIFY_SOURCE=1 -D_FILE_OFFSET_BITS=64 -D_BSD_SOURCE -Dlinux -DVMX86_BETA
- Make/vmware/Makefile.openSeaChest_firmware:281 VMW_uw32_beta_COMPILEFLAGS = -pthread -fwrapv -pipe -fno-working-directory -fno-strict-aliasing -funwind-tables -fasynchronous-unwind-tables -Wall -O2 -march=i686 -g -fPIC -fstack-protector -fstack-protector-all -fno-strict-aliasing -Wno-unused-but-set-variable -Wno-unused-value -Wno-enum-compare -Wno-switch --sysroot=$(CAYMAN_ESX_GLIBC_DIR)/sysroot -m32 -isystem $(CAYMAN_ESX_TOOLCHAIN_DIR)/usr/lib/gcc/x86_64-vmk-linux-gnu/4.8.4/include -D_LARGEFILE64_SOURCE -D_XOPEN_SOURCE=500 -D_SVID_SOURCE -DVMX86_DEBUG -D_FORTIFY_SOURCE=1 -D_FILE_OFFSET_BITS=64 -D_BSD_SOURCE -Dlinux -DVMX86_BETA

https://github.com/tomwimmenhove/subarufobrob
- fobrob.c:31 #include <pthread.h>
- CMakeLists.txt:31 TARGET_LINK_LIBRARIES(fobrob encoding modem protocol pthread rtlsdr m)

https://github.com/mz-automation/lib60870
- lib60870-C/src/hal/thread/bsd/thread_bsd.c:10 #include <pthread.h>
- lib60870-C/src/hal/thread/macos/thread_macos.c:15 #include <pthread.h>
- lib60870-C/src/CMakeLists.txt:145          -lpthread
- lib60870-C/make/target_system.mk:126 LDLIBS = -lpthread
- lib60870-C/Makefile:132 	$(CC) -o $(TEST_NAME) $(LIB_OBJS) $(TEST_OBJS) -lpthread

https://github.com/zint/zint
- backend_tcl/tclconfig/tcl.m4:808 	    AC_CHECK_LIB(pthread,pthread_mutex_init,tcl_ok=yes,tcl_ok=no)
- backend_tcl/configure:5676 	    { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for pthread_mutex_init in -lpthread" >&5

https://github.com/justinfrankel/ninjam
- WDL/mutex.h:27   On Windows it uses CRITICAL_SECTION, on everything else it uses pthread's mutex library.
- WDL/setthreadname.h:44 #include <pthread.h>
- WDL/jnetlib/Makefile:4 LDFLAGS = -pthread 
- WDL/jnetlib/asyncdns.cpp:42     pthread_join(m_thread,&p);
- WDL/jnetlib/asyncdns.h:68   pthread_t m_thread;

https://github.com/yifengyou/os-elephant
- code/c14/g/userprog/tss.h:4 void update_tss_esp(struct task_struct* pthread);
- code/c15/h/userprog/tss.c:39 /* 更新tss中esp0字段的值为pthread的0级线 */
- code/c15/b/thread/thread.c:62 void thread_create(struct task_struct* pthread, thread_func function, void* func_arg) {
- code/c10/a/thread/thread.h:95 void thread_create(struct task_struct* pthread, thread_func function, void* func_arg);
- code/c15/j/userprog/wait_exit.c:80    struct task_struct* pthread = elem2entry(struct task_struct, all_list_tag, pelem);

https://github.com/foxclever/Modbus
- example/Drivers/CMSIS/RTOS2/Template/cmsis_os.h:189 typedef void (*os_pthread) (void const *argument);
- example/Drivers/CMSIS/RTOS2/Template/cmsis_os1.c:39   return osThreadNew((osThreadFunc_t)thread_def->pthread, argument, &thread_def->attr);
- example/Middlewares/LwIP/system/OS/sys_arch.c:378   const osThreadDef_t os_thread_def = { (char *)name, (os_pthread)thread, (osPriority)prio, 0, stacksize};
- example/Drivers/CMSIS/RTOS/Template/cmsis_os.h:124 /// \note MUST REMAIN UNCHANGED: \b os_pthread shall be consistent in every CMSIS-RTOS.

https://github.com/wolfgangfengel/GPUZen
- 04_Screen Space/03_Practical Gather-based Bokeh Depth of Field/include/system/threads.h:10 	#include <pthread.h>
- 04_Screen Space/03_Practical Gather-based Bokeh Depth of Field/dependencies/SDL-2.0.4/SDL_hints.h:372 *  Support for this hint is currently available only in the pthread backend.
- 04_Screen Space/02_Robust Screen Space Ambient Occlusion in 1 ms in 1080p on PS4/include/system/threads.h:10 	#include <pthread.h>
- 04_Screen Space/02_Robust Screen Space Ambient Occlusion in 1 ms in 1080p on PS4/dependencies/SDL-2.0.4/SDL_hints.h:372 *  Support for this hint is currently available only in the pthread backend.

https://github.com/ifding/iot-malware
- busybotnet/libssh-0.7.4/src/threads/pthread.c:29 #include <pthread.h>
- busybotnet/include/dummypthread.h:4 #define pthread_create(A, B, C, D)
- pnscan/Makefile:16 GSO_CC=gcc -Wall -g -O -pthreads
- busybotnet/Makefile.flags:132 # libpam may use libpthread, libdl and/or libaudit.
- pnscan/pnscan.c:36 #include <pthread.h>

https://github.com/therealdreg/DbgChild
- x64dbgplugin/PluginTemplate/pluginsdk/yara/yara/threading.h:45 #include <pthread.h>

https://github.com/trailofbits/osquery-extensions
- libraries/tsk_builtin/include/tsk/img/aff.h:20 // mingw's pthread.h will try to read a config.h if HAVE_CONFIG_H
- libraries/tsk_builtin/include/tsk/vs/Makefile.in:93 am__aclocal_m4_deps = $(top_srcdir)/m4/ax_pthread.m4 \
- libraries/tsk_builtin/include/tsk/base/tsk_lock.c:47     pthread_mutexattr_t attr;
- libraries/tsk_builtin/include/tsk/base/tsk_error.c:116 static pthread_key_t pt_tls_key;
- libraries/tsk_builtin/include/tsk/auto/Makefile.in:96 am__aclocal_m4_deps = $(top_srcdir)/m4/ax_pthread.m4 \

https://github.com/CGCL-codes/VulDeePecker
- CWE-399/source_files/150485/e_bf.c:67 #include <pthread.h> 
- CWE-399/source_files/CVE-2014-8414/CVE-2014-8414.txt:27  	if (!pthread_equal(pthread_self(), bridge_channel->thread)) {
- CWE-119/source_files/153603/ffmpeg.c:89 #include <pthread.h>
- CWE-119/source_files/CVE-2015-8663/Ffmpeg_2.8.2_CVE_2015_8663_libavcodec_utils.c:63 #include <pthread.h>
- CWE-119/source_files/152900/avdevice.c:295   return "--prefix=/opt/stonesoup/workspace/install --enable-pic --disable-static --enable-shared --disable-yasm --disable-doc --enable-pthreads --disable-w32threads --disable-os2threads --enable-zlib --enable-openssl --disable-asm --extra-cflags= --extra-ldflags= --extra-libs=-ldl";

https://github.com/HewlettPackard/LinuxKI
- src/kiinfo/rrt.c:20 #include <pthread.h>
- src/kiinfo/likid.c:25 #include <pthread.h>
- src/kiinfo/hash.c:20 #include <pthread.h>
- src/kiinfo/likiif.c:1013  * libpthread that single-threaded apps may want to be without.
- documentation/runq_delays.htm:575 entry_SYSCALL_64_after_hwframe+0x65 |  [libpthread-2.28.so]:pthread_cond_timedwait@@GLIBC_2.3.2+0x2f8</span></p>

https://github.com/OLIMEX/ESP32-GATEWAY
- SOFTWARE/Newest-board-revisions/led_button/sdkconfig:659 CONFIG_ESP32_PTHREAD_TASK_NAME_DEFAULT="pthread"
- SOFTWARE/Newest-board-revisions/ESP32_Gateway_Ethernet_v4.0/sdkconfig:490 CONFIG_PTHREAD_TASK_NAME_DEFAULT="pthread"

https://github.com/hkrn/nanoem
- emapp/plugins/lsmash/thread.h:614     #include <pthread.h>
- CMakeLists.txt:369   set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -pthread")
- dependencies/fx9/CMakeLists.txt:90     target_link_libraries(fx9_runner ${X11_LIBRARIES} -ldl -lpthread ${X11_Xinerama_LIB} ${X11_Xcursor_LIB} ${X11_Xxf86vm_LIB} ${X11_Xrandr_LIB})

https://github.com/karalabe/hid
- libusb/libusb/os/sunos_usb.h:24 #include <pthread.h>
- hidapi/mac/hid.c:31 #include <pthread.h>
- libusb/libusb/os/threads_posix.h:24 #include <pthread.h>
- libusb/libusb/os/threads_windows.h:36 // We *were* getting timespec from pthread.h:
- libusb/libusb/os/linux_udev.c:50 static pthread_t linux_event_thread;

https://github.com/doggycoder/AudioVideo
- ffmpeg/include/libavcodec/avcodec.h:3155      * Also see avcodec_thread_init and e.g. the --enable-pthread configure option.

https://github.com/westlicht/performer
- src/platform/sim/libs/rtmidi/CMakeLists.txt:14     set(rtmidi_libs ${ALSA_LIBRARY} pthread)
- src/platform/sim/libs/rtmidi/RtMidi.cpp:1097 #include <pthread.h>

https://github.com/Dewb/monome-rack
- lib/oscpack/ip/posix/UdpSocket.cpp:39 #include <pthread.h>

https://github.com/kervinck/gigatron-rom
- Contrib/xxxbxxx/raspi_loader.c:82 		// nb for pthreads: pthread_setschedparam(pthread_self(), SCHED_FIFO, &sp))

https://github.com/LinearTapeFileSystem/ltfs
- src/libltfs/ltfs_thread.h:69 #include <pthread.h>
- src/libltfs/ltfs_locking_old.h:72 #include <pthread.h>
- src/libltfs/ltfs_thread.c:52 #include <pthread.h>
- configure.ac:291 dnl Check for pthreads and clock_gettime
- src/libltfs/arch/freebsd/freebsd_locking_old.h:61 typedef pthread_rwlock_t MultiReaderSingleWriter;

https://github.com/thunlp/SE-WRL
- word2vec/makefile:3 CFLAGS = -lm -pthread -O3 -march=native -Wall -funroll-loops -Wno-unused-result
- SSA.c:21 #include <pthread.h>
- word2vec/demo-train-big-model-v1.sh:93 gcc word2vec.c -o word2vec -lm -pthread -O3 -march=native -funroll-loops
- MST.c:21 #include <pthread.h>
- word2vec/word2phrase.c:19 #include <pthread.h>

https://github.com/intel/asynch_mode_nginx
- auto/lib/perl/conf:55         # FreeBSD port wants to link with -pthread non-threaded perl
- src/os/unix/ngx_thread.h:17 #include <pthread.h>
- src/core/ngx_thread_pool.c:110     pthread_t       tid;
- src/os/unix/ngx_thread_id.c:28 #include <pthread_np.h>
- src/os/unix/ngx_thread_cond.c:17     err = pthread_cond_init(cond, NULL);

https://github.com/thanhtam-h/soem-w5500-rpi
- test/xmc4800/pdo_def.h:14 #include <pthread.h>
- test/xmc4800/main.c:55 pthread_t thread1;
- test/MAXPOS_CSP/ecat_dc.h:14 #include <pthread.h>
- test/xmc4800_dc/pdo_def.h:14 #include <pthread.h>
- test/xmc4800_dc/main.c:53 pthread_t thread1;

https://github.com/rhboot/grub2
- grub-core/lib/libgcrypt/src/ChangeLog-2011:1029 	* Makefile.am (ltlib_libgcrypt_pthread, ltlib_libgcrypt_pth): Removed.

https://github.com/tpunt/pht
- config.w32:11     if (CHECK_HEADER_ADD_INCLUDE("pthread.h", "CFLAGS_PHT", PHP_PHT + ";" + configure_module_dirname)
- src/pht_entry.c:56             pthread_mutex_lock(&PHT_ENTRY_Q(entry)->lock);
- src/pht_debug.h:23 # define pthread_mutex_lock(mut) \
- src/classes/queue.c:35     pthread_mutex_destroy(&qoi->lock);
- src/classes/queue.h:24 #include <pthread.h>

https://github.com/DhavalKapil/libdheap
- src/libdheap.c:11 #include <pthread.h>

https://github.com/JaneaSystems/nodejs-mobile-samples
- android/native-gradle/app/libnode/include/node/pthread-barrier.h:20 #include <pthread.h>
- android/native-gradle-node-folder/README.md:245 #include <pthread.h>
- android/native-gradle/app/libnode/include/node/uv-unix.h:42 #include <pthread.h>
- android/native-gradle-node-folder/app/src/main/cpp/native-lib.cpp:5 #include <pthread.h>
- android/native-gradle/app/libnode/include/node/common.gypi:279         'cflags': [ '-pthread', ],

https://github.com/CEED/libCEED
- Makefile:405     BLAS_LIB ?= $(MKL_LINK) -Wl,--push-state,--no-as-needed -lmkl_intel_lp64 -lmkl_sequential -lmkl_core -lpthread -lm -ldl -Wl,--pop-state

https://github.com/ahmedbilal/OSTEP-Solution
- Chapter 5/question3-yorwos.c:25             a signal.You can wake a pause()d thread with pthread_kill() or kill()

https://github.com/gujianhesong/Test
- FFmpegTest/app/src/main/cpp/include/libavcodec/avcodec.h:3208      * Also see avcodec_thread_init and e.g. the --enable-pthread configure option.

https://github.com/brailcom/speechd
- src/audio/oss.c:37 #include <pthread.h>
- src/audio/nas.c:33 #include <pthread.h>
- src/common/common.c:20 #include <pthread.h>
- src/common/common.h:33 int spd_pthread_create(pthread_t *thread, const pthread_attr_t *attr,
- src/server/server.c:138 		pthread_mutex_lock(&element_free_mutex);

https://github.com/johannes-fetz/joengine
- Compiler/WINDOWS/sh-elf/include/pthread.h:34 struct _pthread_cleanup_context {
- Compiler/WINDOWS/sh-elf/include/sys/_pthreadtypes.h:30 typedef unsigned int pthread_t;          /* identify a thread */
- Compiler/WINDOWS/sh-elf/include/sys/signal.h:55   pthread_attr_t  *sigev_notify_attributes;    /* Notification Attributes */
- Compiler/WINDOWS/sh-elf/include/time.h:243 /* values for the pthread cputime_clock_allowed attribute */
- Compiler/WINDOWS/sh-elf/include/machine/setjmp.h:413 #define __SIGMASK_FUNC pthread_sigmask

https://github.com/mybaby101/Linux-Kernel-2.6-comment
- include/asm-sparc64/siginfo.h:54 			u32 _attribute;	/* really pthread_attr_t */
- arch/mips/kernel/sysirix.c:91 #define PR_PTHREADEXIT      17 /* Kill a pthread without prejudice. */
- Documentation/DocBook/gadget.tmpl:617 Familiar tools like GDB and pthreads can be used to
- arch/ia64/ia32/ia32priv.h:295 			u32 _attribute; /* really pthread_attr_t */

https://github.com/xaxaxa-dev/vna
- tester/ui.H:20 pthread_mutex_t ui_mutex;
- vna_gtk/vna_main.C:30 pthread_t refreshThread_;
- libxavna/xavna_cpp.C:5 #include <pthread.h>
- libxavna/include/workarounds.H:3 #define pthread_cancel(x) /**/
- tester/main.C:299 	pthread_t refreshThread_;

https://github.com/WangYihang/Apache-HTTP-Server-Module-Backdoor
- README.md:18 /usr/share/apr-1.0/build/libtool  --mode=compile --tag=disable-static x86_64-linux-gnu-gcc -prefer-pic -pipe -g -O2 -fstack-protector-strong -Wformat -Werror=format-security  -Wdate-time -D_FORTIFY_SOURCE=2   -DLINUX -D_REENTRANT -D_GNU_SOURCE  -pthread  -I/usr/include/apache2  -I/usr/include/apr-1.0   -I/usr/include/apr-1.0 -I/usr/include  -c -o mod_backdoor.lo mod_backdoor.c && touch mod_backdoor.slo

https://github.com/xl-player-developers/xl_player
- xl-player-armv7a/src/main/cpp/xl_playerCore.h:8 #include <pthread.h>
- xl-player-armv7a/src/main/cpp/xl_playerCore.c:314     pthread_create(&pd->read_stream_thread, NULL, read_thread, pd);
- xl-player-armv7a/src/main/cpp/xl_video/xl_tracker.c:6 #include <pthread.h>
- xl-player-armv7a/src/main/cpp/xl_types/xl_player_types.h:69     pthread_mutex_t *filter_lock;
- xl-player-armv7a/src/main/cpp/xl_video/xl_player_gl_thread.c:125     pthread_mutex_lock(ctx->lock);

https://github.com/STMicroelectronics-CentralLabs/ST_Drone_FCU_F401
- STM32 FW Project/Official release - 170120/Drivers/CMSIS/RTOS/Template/cmsis_os.h:133 /// \note MUST REMAIN UNCHANGED: \b os_pthread shall be consistent in every CMSIS-RTOS.
- STM32 FW Project/Official latest release 221117/Drivers/CMSIS/RTOS/Template/cmsis_os.h:133 /// \note MUST REMAIN UNCHANGED: \b os_pthread shall be consistent in every CMSIS-RTOS.
- STM32 FW Project/BLE Remocon Beta release 301117/Drivers/CMSIS/RTOS/Template/cmsis_os.h:133 /// \note MUST REMAIN UNCHANGED: \b os_pthread shall be consistent in every CMSIS-RTOS.
- STM32 FW Project/Official release with BLE Remocon - 170318/Drivers/CMSIS/RTOS/Template/cmsis_os.h:133 /// \note MUST REMAIN UNCHANGED: \b os_pthread shall be consistent in every CMSIS-RTOS.

https://github.com/horsicq/nfdx64dbg
- nfd/pluginsdk/yara/yara/threading.h:45 #include <pthread.h>

https://github.com/gitGNU/gnu_bash
- m4/timespec.m4:13 dnl in time.h, sys/time.h, or pthread.h.
- include/stat-time.h:30 #  include <pthread.h>

https://github.com/LineageOS/android_kernel_xiaomi_msm8953
- Documentation/pi-futex.txt:63 locks (such as futex-based pthread mutexes) is priority inheritance:
- tools/hv/Makefile:4 PTHREAD_LIBS = -lpthread
- tools/perf/perf.h:33 void pthread__unblock_sigwinch(void);
- tools/perf/ui/ui.h:4 #include <pthread.h>
- Documentation/robust-futexes.txt:27 process exits prematurely while holding a pthread_mutex_t lock that is

https://github.com/Itokoyamato/TokoVOIP_TS3
- ts3_plugin/deps/openssl/include/openssl/crypto.h:415 #   include <pthread.h>

https://github.com/varigit/linux-imx
- Documentation/pi-futex.txt:63 locks (such as futex-based pthread mutexes) is priority inheritance:
- tools/hv/Makefile:4 PTHREAD_LIBS = -lpthread
- tools/perf/perf.h:31 void pthread__unblock_sigwinch(void);
- tools/perf/ui/ui.h:4 #include <pthread.h>
- Documentation/robust-futexes.txt:27 process exits prematurely while holding a pthread_mutex_t lock that is

https://github.com/tensaix2j/binacpp
- lib/libcurl-7.56.0/lib/libcurl.la:17 inherited_linker_flags=' -pthread'

https://github.com/johnbryanmoore/VL53L0X_rasp_python
- platform/src/vl53l0x_platform.c:29 #include <pthread.h>
- Makefile:45 	$(CC) -shared $^ $(PYTHON_INCLUDES) $(INCLUDES) -lpthread -o $@.so
- python_lib/vl53l0x_python.c:25 #include <pthread.h>

https://github.com/tpm2-software/tpm2-abrmd
- src/tpm2.h:11 #include <pthread.h>
- src/thread.h:27     pthread_t   thread_id;
- src/thread.c:31     return pthread_create (&self->thread_id,
- src/connection-manager.c:9 #include <pthread.h>
- src/handle-map.c:82     pthread_mutex_init (&map->mutex, NULL);

https://github.com/ros2/rcutils
- include/rcutils/macros.h:49 // iOS < 10, no thread local storage, so use pthread instead
- CMakeLists.txt:136 # Needed if pthread is used for thread local storage.
- src/error_handling.c:62   // e.g. pthread which could only provide thread-local pointers would need to
- include/rcutils/error_handling.h:145  * Most implementations (e.g. C11, C++11, and pthread) do not have ways to

https://github.com/lybb/Linux
- httpd/lib/include/my_pthread.h:18 #ifndef _my_pthread_h
- http/main.c:23 		pthread_t tid;
- http/httpd.h:13 #include <pthread.h>
- My_rwlock/rwlock.c:2 #include<pthread.h>
- Product_Consumer/Ring/ring.c:2 #include<pthread.h>

https://github.com/tsingsee/EasyPlayer-RTSP-iOS
- EasyPlayer/EasyPlayerReader/PlayerDataReader.mm:4 #include <pthread.h>
- EasyPlayer/MuxerToVideo/Muxer.c:10 #include <pthread.h>
- EasyPlayer/ffmpeg/include/libavcodec/avcodec.h:3239      * Also see avcodec_thread_init and e.g. the --enable-pthread configure option.

https://github.com/oracle/solaris-userland
- components/nspr/patches/01-pthread.patch:4 --- nspr-4.35/nspr/pr/src/pthreads/ptthread.c
- components/mpfr/patches/001-ax-pthread.patch:5 https://www.gnu.org/software/autoconf-archive/ax_pthread.html
- components/libevent/patches/fix-pthread-config.patch:1 Prevent "-pthread" from being included on the Cflags: line in the
- components/nodejs18/patches/002-pthread_getattr_np.patch:3 ../deps/v8/src/base/platform/platform-solaris.cc:73:11: error: 'pthread_attr_get_np' was not declared in this scope; did you mean 'pthread_attr_getname_np'?
- components/x11/lib/libpthread-stubs/libpthread-stubs.p5m:28     value=pkg:/x11/library/libpthread-stubs@$(IPS_COMPONENT_VERSION),$(BUILD_VERSION)

https://github.com/bonesoul/hypepool
- src/Hashing/libcryptonote/contrib/epee/include/net/abstract_tcp_server.h:120 		thread_context* pthread_context = (thread_context*)lpParameter;
- src/Hashing/libcryptonote/contrib/epee/include/misc_os_dependent.h:117 		return boost::lexical_cast<std::string>(pthread_self());

https://github.com/JHU-EP-Intro2GPU/EN605.617
- common/inc/multithreading.h:30 #include <pthread.h>
- common/src/multithreading.cpp:50     pthread_t thread;
- module2/c++_multithreading_example/README.md:1 To compile example.cpp execute "gcc example.cpp -pthread -o example.o"
- module2/c++_multithreading_example/example.cpp:1 #include <pthread.h>

https://github.com/friendlyarm/NanoHatOLED
- Source/main.c:39 #include <pthread.h>
- install.sh:70 gcc Source/daemonize.c Source/main.c -lrt -lpthread -o NanoHatOLED
- install-compat.sh:70 gcc Source/daemonize.c Source/main.c -lrt -lpthread -o NanoHatOLED

https://github.com/CIS565-Fall-2017/Project4-CUDA-Rasterizer
- cmake/FindCUDA.cmake:743     # Check for the dependent libraries.  Here we look for pthreads.

https://github.com/OpenGene/GeneFuse
- Makefile:17 	$(CC) $(OBJ) -lz -lpthread -o $@

https://github.com/android-rpi/kernel_rpi
- Documentation/pi-futex.txt:64 locks (such as futex-based pthread mutexes) is priority inheritance:
- tools/perf/ui/ui.h:5 #include <pthread.h>
- tools/usb/Makefile:4 PTHREAD_LIBS = -lpthread
- Documentation/robust-futexes.txt:31 process exits prematurely while holding a pthread_mutex_t lock that is
- Documentation/futex-requeue-pi.txt:17 pthread_cond_broadcast() must resort to waking all the tasks waiting

https://github.com/opencryptoki/opencryptoki
- usr/include/apictl.h:29                 if (pthread_rwlock_rdlock(                                  \
- usr/lib/api/apiutil.c:26 #include <pthread.h>
- usr/lib/common/btree.c:22 #include <pthread.h>
- usr/include/local_types.h:50     pthread_mutex_t mutex;
- usr/lib/api/socket_client.c:295     TRACE_DEVEL("Event thread %lu terminating\n", pthread_self());

https://github.com/auriza/komdat-lab
- p05.md:127 - menggunakan `pthread_create()` untuk membuat thread baru
- src/server-thread.c:5 #include <pthread.h>

https://github.com/pycom/esp-idf-2.0
- components/newlib/include/pthread.h:1 /*  pthread.h
- components/mbedtls/library/CMakeLists.txt:3 option(LINK_WITH_PTHREAD "Explicitly link mbed TLS library to pthread." OFF)
- components/newlib/include/sys/types.h:306 typedef unsigned int pthread_t;          /* identify a thread */
- components/mbedtls/library/threading.c:33 static void threading_mutex_init_pthread( mbedtls_threading_mutex_t *mutex )
- components/bt/bluedroid/hci/hci_layer.c:49     pthread_mutex_t commands_pending_response_lock;

https://github.com/stardot/b-em
- configure.ac:46 AC_CHECK_LIB([pthread], [pthread_create])
- src/midi-linux.c:11 # include <pthread.h>
- mkcross.sh:11       libwebp-7.dll               libwinpthread-1.dll
- src/Makefile.am:23 b_em_LDADD = -lallegro_audio -lallegro_acodec -lallegro_primitives -lallegro_dialog -lallegro_image -lallegro_font -lallegro_main -lallegro -lz -lm -lpthread

https://github.com/guykatzz/ReluplexCav2017
- glpk-4.60/ltmain.sh:5656 	   # Do not include libc_r directly, use -pthread flag.

https://github.com/bootlin/libva-v4l2-request
- src/object_heap.h:28 #include <pthread.h>
- src/object_heap.c:98 	pthread_mutex_init(&heap->mutex, NULL);

https://github.com/TelegramMessenger/MTProxy
- net/net-crypto-dh.c:28 #include <pthread.h>
- jobs/jobs.c:28 #include <pthread.h>
- jobs/jobs.h:116 #define	JF_SIGINT	0x20000	// signal interruption: if job is "locked" and we send a new signal to it, invoke pthread_signal() as well
- net/net-connections.c:38 #include <pthread.h>
- Makefile:16 LDFLAGS = $(ARCH) -ggdb -rdynamic -lm -lrt -lcrypto -lz -lpthread -lcrypto

https://github.com/xufuji456/FFmpegAndroid
- app/src/main/cpp/metadata/Mutex.h:23 # include <pthread.h>
- app/src/main/cpp/ffmpeg/thread_queue.c:51     pthread_mutex_t lock;
- app/src/main/cpp/include/libavutil/thread.h:36 #include <pthread.h>
- app/src/main/cpp/ffmpeg/ffmpeg_mux.h:76     pthread_t    thread;
- app/src/main/cpp/ffmpeg/ffmpeg_mux.c:392     pthread_join(mux->thread, &ret);

https://github.com/aircrack-ng/aircrack-ng
- build/m4/ax_pthread.m4:2 #        https://www.gnu.org/software/autoconf-archive/ax_pthread.html
- lib/libac/cpu/cpuset_pthread.c:43 #include <pthread.h>
- build/m4/aircrack_ng_pthread.m4:43     AC_CHECK_LIB([pthread], [pthread_create], [ PTHREAD_LIBS="-lpthread" ])
- build/valgrind.supp:9    fun:pthread_create@@GLIBC_2.2.5
- lib/Makefile.inc:197 CPUSET = %D%/libac/cpu/cpuset_pthread.c

https://github.com/facebookincubator/katran
- cmake/KatranTest.cmake:23   find_library(PTHREAD pthread)

https://github.com/microshow/RxFFmpeg
- rxffmpeg/src/main/cpp/include/libavcodec/avcodec.h:2816      * Also see avcodec_thread_init and e.g. the --enable-pthread configure option.

https://github.com/haproxy/haproxy
- src/wdt.c:117 		/* we got a pthread_kill, stop on it */
- INSTALL:169 need to append "-lpthread" and/or "-ldl" depending on the operating system.
- src/clock.c:18 #include <pthread.h>
- Makefile:65 #   USE_PTHREAD_EMULATION   : replace pthread's rwlocks with ours
- src/thread.c:24 #  include <pthread.h>

https://github.com/FeralInteractive/gamemode
- daemon/gamemode-config.c:45 #include <pthread.h>
- CHANGELOG.md:162 * Bug fix for missing `pthread_rwlock_init`.
- daemon/gamemode-context.c:47 #include <pthread.h>
- daemon/gamemode-tests.c:44 #include <pthread.h>

https://github.com/werman/noise-suppression-for-voice
- CMakeLists.txt:10 set(MINGW_ADDITIONAL_LINKING_FLAGS "-static-libgcc -static-libstdc++ -Wl,-Bstatic -lstdc++ -lpthread -Wl,-Bdynamic")
- external/JUCE/examples/Assets/juce_module_info:36   "LinuxLibs":      "rt dl pthread",
- external/JUCE/modules/juce_core/native/juce_linux_Threads.cpp:49     pthread_setschedparam (pthread_self(), policy, &param);
- external/JUCE/extras/BinaryBuilder/Builds/LinuxMakefile/Makefile:42   JUCE_CPPFLAGS := $(DEPFLAGS) "-DLINUX=1" "-DDEBUG=1" "-D_DEBUG=1" "-DJUCE_DISPLAY_SPLASH_SCREEN=0" "-DJUCE_USE_DARK_SPLASH_SCREEN=1" "-DJUCE_PROJUCER_VERSION=0x70001" "-DJUCE_MODULE_AVAILABLE_juce_core=1" "-DJUCE_GLOBAL_MODULE_SETTINGS_INCLUDED=1" "-DJUCE_STANDALONE_APPLICATION=1" "-DJUCER_LINUX_MAKE_6D53C8B4=1" "-DJUCE_APP_VERSION=1.0.0" "-DJUCE_APP_VERSION_HEX=0x10000" $(shell $(PKG_CONFIG) --cflags libcurl) -pthread -I../../JuceLibraryCode -I../../../../modules $(CPPFLAGS)
- external/JUCE/modules/juce_audio_formats/codecs/oggvorbis/libvorbis-1.3.7/lib/misc.c:14 #include <pthread.h>

https://github.com/Dr-Noob/cpufetch
- Makefile:25 			CFLAGS += -pthread
- src/x86/freq/freq.c:18 #include <pthread.h>
- src/x86/freq/freq_nov.h:4 void* compute_nov(void * pthread_arg);
- src/x86/freq/freq_avx.h:4 void* compute_avx(void * pthread_arg);
- src/x86/freq/freq_avx512.h:4 void* compute_avx512(void * pthread_arg);

https://github.com/iPlug2/iPlug2
- WDL/mutex.h:27   On Windows it uses CRITICAL_SECTION, on everything else it uses pthread's mutex library.
- WDL/setthreadname.h:44 #include <pthread.h>
- WDL/jnetlib/Makefile:4 LDFLAGS = -pthread 
- WDL/jnetlib/asyncdns.cpp:43     pthread_join(m_thread,&p);
- WDL/jnetlib/asyncdns.h:68   pthread_t m_thread;

https://github.com/sergiomsilva/alpr-unconstrained
- darknet/src/demo.c:197     pthread_t detect_thread;
- darknet/src/data.h:3 #include <pthread.h>
- darknet/Makefile:27 LDFLAGS= -lm -pthread 
- darknet/examples/voxel.c:71     pthread_t load_thread = load_data_in_thread(args);
- darknet/examples/swag.c:43     pthread_t load_thread = load_data_in_thread(args);

https://github.com/WerWolv/EdiZon
- libs/nxpy/include/pyconfig.h:97 /* Define if pthread_sigmask() does not work on your system. */

https://github.com/xiph/LPCNet
- m4/attributes.m4:109      dnl FreeBSD (et al.) does not complete linking for shared objects when pthreads

https://github.com/lexbor/lexbor
- config.cmake:8         message(FATAL_ERROR "Could NOT find pthreads (missing: CMAKE_USE_PTHREADS_INIT)")

https://github.com/FantasticLBP/knowledge-kit
- Chapter1 - iOS/1.90.md:25 很多框架使用锁都是 pthread_mutex_lock，分析原因
- Chapter1 - iOS/1.76.md:31 11  libsystem_pthread.dylib         0x00000001c34b91b4 0x1c34ad000 + 49588 (_pthread_wqthread + 464)
- Chapter1 - iOS/1.39.md:9 | pthread     | -一套通用的多线程API<br>适用于Unix\Linux\Windows等系统<br/>跨平台\可移植<br/>使用难度大 | C   | 开发者手动管理 | 很少，底层监控会用到 |
- assets/CFRunLoop.c:38 #include <pthread.h>
- Chapter1 - iOS/1.38.md:82     pthread_t _pthread;

https://github.com/loboris/MicroPython_ESP32_psRAM_LoBo
- MicroPython_BUILD/components/curl/lib/curl_threads.c:29 #    include <pthread.h>
- MicroPython_BUILD/components/micropython/py/mpthread.h:37 #include <mpthreadport.h>
- MicroPython_BUILD/components/curl/lib/curl_config.h.cmake:488 /* Define to 1 if you have the <pthread.h> header file */
- MicroPython_BUILD/components/micropython/esp32/gccollect.c:36 #include "py/mpthread.h"
- MicroPython_BUILD/components/micropython/esp32/mpthreadport.c:41 #include "py/mpthread.h"

https://github.com/eembc/coremark
- posix/core_portme.h:171         This implementation uses pthread_thread_create and pthread_join.
- README.md:85 % make XCFLAGS="-DMULTITHREAD=4 -DUSE_PTHREAD -pthread"
- posix/core_portme.c:269         Three implementations are provided, one using pthreads, one using fork
- docs/html/index/Configuration.html:34 <div class=CToolTip id="tt12"><div class=CConfiguration>Define to 1 if platform has the time.h header file, and implementation of functions thereof.</div></div><div class=CToolTip id="tt13"><div class=CConfiguration>Sample implementation for launching parallel contexts This implementation uses fork, waitpid, shmget,shmat and shmdt.</div></div><div class=CToolTip id="tt14"><div class=CConfiguration>Sample implementation for launching parallel contexts This implementation uses pthread_thread_create and pthread_join.</div></div><div class=CToolTip id="tt15"><div class=CConfiguration>Sample implementation for launching parallel contexts This implementation uses fork, socket, sendto and recvfrom</div></div><!--END_ND_TOOLTIPS-->
- docs/html/files/linux/core_portme-c.html:32 <div class="CFunction"><div class=CTopic><h3 class=CTitle><a name="core_start_parallel"></a>core_start_parallel</h3><div class=CBody><p>Start benchmarking in a parallel context.</p><p>Three implementations are provided, one using pthreads, one using fork and shared mem, and one using fork and sockets.&nbsp; Other implementations using MCAPI or other standards can easily be devised.</p></div></div></div>

https://github.com/digital-fabric/polyphony
- ext/libev/ev.c:404 /* on linux, we can use a (slow) syscall to avoid a dependency on pthread, */

https://github.com/homeworkc/lazycast
- h264/h264.c:35 #include <pthread.h>
- h264/Makefile:3 DMX_INC =  -I/opt/vc/include/ -I /opt/vc/include/interface/vmcs_host/ -I/opt/vc/include/interface/vcos/pthreads -I/opt/vc/include/interface/vmcs_host/linux  -I/opt/vc/include/interface/vcos/
- h264/Makefile.include:4 LDFLAGS+=-L$(SDKSTAGE)/opt/vc/lib/ -lbrcmGLESv2 -lbrcmEGL -lopenmaxil -lbcm_host -lvcos -lvchiq_arm -lpthread -lrt -lm -L$(SDKSTAGE)/opt/vc/src/hello_pi/libs/ilclient -L$(SDKSTAGE)/opt/vc/src/hello_pi/libs/vgfont
- player/mtlinklist.c:8 #include <pthread.h>
- player/Makefile:3 DMX_INC =  -I/opt/vc/include/ -I /opt/vc/include/interface/vmcs_host/ -I/opt/vc/include/interface/vcos/pthreads -I/opt/vc/include/interface/vmcs_host/linux  -I/opt/vc/include/interface/vcos/

https://github.com/nnstreamer/nnstreamer
- jni/Android.mk:53 # Please keep the pthread and openmp library for checking a compatibility
- ext/nnstreamer/android_source/gstamcsrc_looper.h:29 #include <pthread.h>
- ext/nnstreamer/android_source/gstamcsrc_looper.cc:33 #include <pthread.h>
- meson.build:155 thread_dep = dependency('threads') # pthread for tensorflow-lite
- jni/Android-nnstreamer.mk:98 # Please keep the pthread and openmp library for checking a compatibility

https://github.com/dhm2013724/yolov2_xilinx_fpga
- software_version/01_ExtractWeightAndBiasFromDarknet/darknet/src/demo.c:199     pthread_t detect_thread;
- software_version/01_ExtractWeightAndBiasFromDarknet/darknet/src/data.h:3 #include <pthread.h>
- software_version/01_ExtractWeightAndBiasFromDarknet/darknet/examples/tag.c:18     pthread_t load_thread;
- software_version/01_ExtractWeightAndBiasFromDarknet/darknet/examples/voxel.c:71     pthread_t load_thread = load_data_in_thread(args);
- software_version/01_ExtractWeightAndBiasFromDarknet/darknet/examples/swag.c:43     pthread_t load_thread = load_data_in_thread(args);

https://github.com/cos120/captcha_crack
- src/demo.c:131     pthread_t detect_thread;
- src/data.h:3 #include <pthread.h>
- Makefile:27 LDFLAGS= -lm -pthread 
- examples/writing.c:36     pthread_t load_thread = load_data_in_thread(args);
- include/darknet.h:6 #include <pthread.h>

https://github.com/The-4n/4NXCI
- mbedtls/programs/ssl/ssl_pthread_server.c:2  *  SSL server demonstration program using pthread for handling multiple
- mbedtls/programs/Makefile:77 APPS +=	ssl/ssl_pthread_server$(EXEXT)
- mbedtls/library/CMakeLists.txt:3 option(LINK_WITH_PTHREAD "Explicitly link mbed TLS library to pthread." OFF)
- mbedtls/library/threading.c:33 static void threading_mutex_init_pthread( mbedtls_threading_mutex_t *mutex )
- mbedtls/include/mbedtls/threading.h:43 #include <pthread.h>

https://github.com/lucysrausch/hoverboard-firmware-hack
- Drivers/CMSIS/RTOS/Template/cmsis_os.h:133 /// \note MUST REMAIN UNCHANGED: \b os_pthread shall be consistent in every CMSIS-RTOS.

https://github.com/yindaz/DeepCompletionRelease
- gaps/makefiles/Makefile.apps:61 #OPENGL_LIBS=-pthread -lfglut -lGLU -lGL -lX11 -lm
- gaps/apps/depth2depth/Makefile:15 #USER_LIBS=-L/usr/local/lib -lceres -lgflags -lglog -lcamd -lcholmod -lccolamd -lcolamd -lcamd -lamd -lmetis -lcxsparse -lsuitesparseconfig -fopenmp -lpthread -lgomp -llapack -lopenblas -lgfortran -lhdf5 -ldl -lm

https://github.com/ipsn/go-libtor
- libevent/evthread_pthread.c:32 #include <pthread.h>
- openssl/crypto/threads_pthread.c:29     if ((lock = OPENSSL_zalloc(sizeof(pthread_rwlock_t))) == NULL) {
- libtor/openssl_crypto_threads_pthread.go:11 #include <../crypto/threads_pthread.c>
- tor/src/lib/thread/compat_pthreads.c:7  * \file compat_pthreads.c
- tor/src/lib/lock/compat_mutex_pthreads.c:7  * \file compat_mutex_pthreads.c

https://github.com/g0dA/linuxStack
- DoubleFetch.md:15     pthread_t p;
- DoubleFetch_files/doublefetch.c:15 #include <pthread.h>
- ebpf的由来与安全性_files/exp.c:3 #include <pthread.h>
- ebpf的由来与安全性_files/cve_2020_8835_exp.c:29 #include <pthread.h>
- reser_shell/diaoyan.txt:13 perl    9265 root  mem    REG  253,0    144792  69162358 /usr/lib64/libpthread-2.17.so

https://github.com/tangsilian/android-vuln
- CVE-2017-7533/trigger.c:5 #include <pthread.h>
- CVE-2015-3636/common/Documentation/pi-futex.txt:63 locks (such as futex-based pthread mutexes) is priority inheritance:
- CVE-2015-3636/common/tools/usb/Makefile:4 PTHREAD_LIBS = -lpthread
- CVE-2015-3636/common/Documentation/rt-mutex.txt:5 which enable pthread_mutex_t priority inheritance attributes
- CVE-2015-3636/common/Documentation/robust-futexes.txt:27 process exits prematurely while holding a pthread_mutex_t lock that is

https://github.com/imalimin/HardwareVideoCodec
- rtmp/src/main/jni/rtmp/Lock.h:4 #include <pthread.h>
- codec/src/main/jni/codec/Android.mk:59 LOCAL_LDLIBS := -llog -lz -ljnigraphics -landroid -lm -pthread
- rtmp/src/main/jni/rtmp/Lock.cpp:8     mutex = new pthread_mutex_t;
- rtmp/src/main/jni/rtmp/BlockQueue.h:9 #include <pthread.h>
- rtmp/src/main/jni/rtmp/HandlerThread.cpp:28     pthread_attr_init(&attr);

https://github.com/Dice-Developer-Team/Dice
- quickjspp/storage/dybase/src/sync.h:31 #include <pthread.h>
- quickjspp/quickjs-libc.c:79 #include <pthread.h>

https://github.com/kubo/injector
- README.md:40 The injector connects to the target process using task_for_pid and creates a mach-thread. If dlopen is called in this thread, the target process will fail with an error, however, it is possible to create another thread using pthread_create_from_mach_thread function for Mac >= 10.12 or pthread_create otherwise. In the created thread, the code for loading the library is executed. The second thread is created when injector_inject is called and terminated when injector_detach is called.
- src/macos/remote_call.c:92 		pcfmt_t pcfmt = (pcfmt_t)dlsym(RTLD_DEFAULT, "pthread_create_from_mach_thread");
- src/macos/injector_internal.h:97 typedef int (*pcfmt_t)(pthread_t* ,pthread_attr_t* ,void *, void*);
- include/injector.h:232  * pitfalls because some resources allocated in \c [pthread_create()](https://man7.org/linux/man-pages/man3/pthread_create.3.html) lack in the \c clone()-ed thread.

https://github.com/madushadhanushka/simple-sqlite
- core/os.c:769 # include <pthread.h>

https://github.com/Serasidis/STM32_HID_Bootloader
- cli/hid-mac.c:31 #include <pthread.h>
- cli/hid-libusb.c:43 #include <pthread.h>
- bootloader/F1/CMSIS/Documentation/RTOS/html/structos_thread_def__t.js:4     [ "pthread", "structos_thread_def__t.html#ad3c9624ee214329fb34e71f544a6933e", null ],
- bootloader/F1/CMSIS/Documentation/RTOS/html/structos_thread_def__t.html:91 <tr class="memitem:ad3c9624ee214329fb34e71f544a6933e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="cmsis__os_8h.html#aee631e5ea1b700fc35695cc7bc574cf7">os_pthread</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structos_thread_def__t.html#ad3c9624ee214329fb34e71f544a6933e">pthread</a></td></tr>
- bootloader/F1/CMSIS/RTOS/Template/cmsis_os.h:133 /// \note MUST REMAIN UNCHANGED: \b os_pthread shall be consistent in every CMSIS-RTOS.

https://github.com/jonasblixt/ufsm
- examples/linux/queue.c:20     if (pthread_mutex_lock(&q->lock) != 0) {
- examples/linux/queue.h:7 #include <pthread.h>
- examples/dhcpclient/src/dhcpclient.c:11 #include <pthread.h>
- examples/dhcpclient/src/Makefile:7 LDFLAGS = -lpthread

https://github.com/ehsahil/recon-my-way
- masscan/Makefile:19 LIBS = -lm -lrt -ldl -lpthread
- masscan/src/pixie-threads.c:10 #include <pthread.h>

https://github.com/klsfct/getshell
- MS08-068/src/misc.h:25  #include <pthread.h>  //pthread

https://github.com/libyal/libfsapfs
- m4/pthread.m4:1 dnl Functions for pthread
- libfsapfs.pc.in:10 Libs.private: @ax_libbfio_pc_libs_private@ @ax_libcaes_pc_libs_private@ @ax_libcdata_pc_libs_private@ @ax_libcerror_pc_libs_private@ @ax_libcfile_pc_libs_private@ @ax_libclocale_pc_libs_private@ @ax_libcnotify_pc_libs_private@ @ax_libcpath_pc_libs_private@ @ax_libcrypto_pc_libs_private@ @ax_libcsplit_pc_libs_private@ @ax_libcthreads_pc_libs_private@ @ax_libfcache_pc_libs_private@ @ax_libfdata_pc_libs_private@ @ax_libfdatetime_pc_libs_private@ @ax_libfguid_pc_libs_private@ @ax_libfmos_pc_libs_private@ @ax_libhmac_pc_libs_private@ @ax_libuna_pc_libs_private@ @ax_pthread_pc_libs_private@ @ax_zlib_pc_libs_private@
- runtests.sh:222 echo "${CONFIGURE_HELP}" | grep -- '--with-pthread' > /dev/null;
- m4/libcthreads.m4:286     [dnl Check for enabling pthread support
- tests/fsapfs_test_rwlock.c:40 static int (*fsapfs_test_real_pthread_rwlock_destroy)(pthread_rwlock_t *) = NULL;

https://github.com/knightcrawler25/Optix-PathTracer
- src/support/glfw/src/posix_tls.c:37     if (pthread_key_create(&_glfw.posix_tls.context, NULL) != 0)
- src/support/glfw/src/posix_tls.h:31 #include <pthread.h>
- src/support/glfw/deps/tinycthread.c:65   pthread_mutexattr_t attr;
- src/support/glfw/src/mir_window.c:66     pthread_mutex_lock(&_glfw.mir.event_mutex);
- src/CMake/FindCUDA.cmake:692     # Check for the dependent libraries.  Here we look for pthreads.

https://github.com/alsa-project/alsa-lib
- src/dlmisc.c:33 #include <pthread.h>
- INSTALL:111 thread-safe with pthread mutex (while this wasn't present in the
- src/ucm/ucm_exec.c:45 static pthread_mutex_t fork_lock = PTHREAD_MUTEX_INITIALIZER;
- configure.ac:271 dnl Check for pthread
- src/ucm/utils.c:789 static pthread_mutex_t ucm_cards_mutex = PTHREAD_MUTEX_INITIALIZER;

https://github.com/cfadmin-cn/cfadmin
- CMakeLists.txt:73   target_link_libraries(core PRIVATE ev PRIVATE eio PRIVATE lua PRIVATE dl PRIVATE m PRIVATE pthread PRIVATE mimalloc)
- luaclib/src/laio.c:333   // printf("AIO_WANT_POLL Called. 工作线程ID为: %d\n", pthread_self());
- luaclib/Makefile:30 	@$(CC) -o laio.so src/laio.c $(CFLAGS) $(INCLUDES) $(LIBS) -lcore -leio -lpthread

https://github.com/HaddingtonDynamics/Dexter
- Firmware/DexRun.c:28 #include <pthread.h>

https://github.com/uriparser/uriparser
- make-distcheck.sh:81             cp /usr/i686-w64-mingw32/lib/libwinpthread-1.dll ./
- ChangeLog:96   * Fixed: Link against pthreads for (default) -DURIPARSER_BUILD_TESTS=ON
- CMakeLists.txt:310     # NOTE: uriparser does not use pthreads itself but gtest does
- .github/workflows/build-and-test.yml:162               cp /usr/i686-w64-mingw32/lib/libwinpthread-1.dll ./

https://github.com/jakeajames/rootlessJB
- rootlessJB/payloads_source/pspawn_payload/launchd_payload.m:16 #include <pthread.h>
- rootlessJB/libs/IOKit.tbd:757                        _getEffectivePageSize, _hid_dispatch_pthread_root_queue_create, 
- rootlessJB/exploit/multi_path/sploit.c:17 #include <pthread.h>
- rootlessJB/payloads_source/TweakInject/TweakInject.xm:6 #import <pthread.h>
- rootlessJB/exploit/voucher_swap/kernel_alloc.c:9 #include <pthread.h>

https://github.com/handshake-org/hnsd
- uv/src/unix/pthread-fixes.c:32 /* Android versions < 4.1 have a broken pthread_sigmask. */
- uv/include/pthread-barrier.h:20 #include <pthread.h>
- uv/common.gypi:158             'cflags': [ '-pthreads' ],
- uv/configure.ac:43 # TODO(bnoordhuis) Check for -pthread vs. -pthreads
- uv/docs/src/guide/threads.rst:15 implementation and POSIX's `pthreads`_. libuv's thread API is analogous to

https://github.com/cmu-sei/SCALe
- scale.app/demo/jasper/src/libtool:1969 	   # Do not include libc_r directly, use -pthread flag.
- scale.app/demo/dos2unix/src/mingw32.mak:22 ZIPOBJ_EXTRA = bin/libintl-8.dll bin/libiconv-2.dll bin/libgcc_s_dw2-1.dll bin/libwinpthread-1.dll
- scale.app/demo/jasper/src/src/appl/.deps/jasper.Po:15  /usr/include/bits/pthreadtypes.h /usr/include/alloca.h \
- scale.app/demo/jasper/src/src/appl/.deps/imgcmp.Po:11  /usr/include/sys/sysmacros.h /usr/include/bits/pthreadtypes.h \
- scale.app/demo/jasper/src/src/appl/.deps/tmrdemo.Po:13  /usr/include/sys/sysmacros.h /usr/include/bits/pthreadtypes.h \

https://github.com/vllogic/vllink_lite
- vsf/vsf/shell/sys/linux/include/pthread.h:16 #define pthread_self                __vsf_linux_pthread_self
- vsf/vsf/shell/sys/linux/lib/glibc/vsf_linux_glibc_pthread.c:29 #   include "../../include/pthread.h"
- vsf/vsf/shell/sys/linux/lib/glibc/CMakeLists.txt:5     vsf_linux_glibc_pthread.c
- vsf/vsf/shell/sys/linux/lib/libusb/vsf_linux_libusb.c:36 #   include "../../include/pthread.h"
- vsf/vsf/hal/arch/x86/linux/linux_generic.c:27 #include <pthread.h>

https://github.com/catid/Zpng
- zstd/pool.c:25 #include "threading.h"   /* pthread adaptation */
- zstd/threading.h:47 #define ZSTD_pthread_mutex_t           CRITICAL_SECTION
- zstd/threading.c:14  * This file will hold wrapper for systems, which do not support pthreads
- zstd/cover.c:723   ZSTD_pthread_mutex_t mutex;
- zstd/zstdmt_compress.c:67         ZSTD_pthread_mutex_lock(mutex);           \

https://github.com/seaswalker/tiny-os
- chapter11/user/tss.c:45 void update_tss_esp(struct task_struct* pthread) {
- chapter11/user/tss.h:4 void update_tss_esp(struct task_struct* pthread);
- chapter11/user/process.h:12 void page_dir_activate(struct task_struct* pthread);
- chapter11/user/process.c:42 void page_dir_activate(struct task_struct* pthread) {
- chapter11/kernel/thread/thread.c:47 void thread_create(struct task_struct* pthread, thread_func function, void* func_args) {

https://github.com/conor42/fast-lzma2
- Makefile:5 CFLAGS:=-Wall -O2 -pthread -fPIC
- fl2_pool.c:22 #include "fl2_threading.h"   /* pthread adaptation */
- fl2_threading.c:14  * This file will hold wrapper for systems, which do not support pthreads
- fl2_threading.h:60 #define FL2_pthread_mutex_t           CRITICAL_SECTION
- bench/Makefile:6 CFLAGS:=-Wall -O2 -pthread -fPIC

https://github.com/jirka-h/haveged
- configure.ac:13 HA_LDFLAGS="-pthread"
- src/haveged.c:229    /* Hmmm ... currently the code  does not use pthread_create(3) but fork(2) */
- config/ltmain.sh:7043 	   # Do not include libc_r directly, use -pthread flag.

https://github.com/ARM-software/Tool-Solutions
- fast-models-examples/cortex-m35/system/Makefile.common:82 CXXFLAGS += -m$(BITNESS) -pthread -DSC_INCLUDE_DYNAMIC_PROCESSES -Wall \
- docker/tensorflow-aarch64/patches/Makefile.patch:34 -LDFLAGS := -lpthread -lrt -lmlperf_loadgen -ltensorflow_cc -lboost_filesystem -lboost_system -lopencv_core -lopencv_highgui -lopencv_imgproc -lopencv_videoio -lopencv_imgcodecs
- fast-models-examples/cortex-m55/system/Makefile.common:82 CXXFLAGS += -m$(BITNESS) -pthread -DSC_INCLUDE_DYNAMIC_PROCESSES -Wall \
- docker/tensorflow-lite-aarch64/patches/armnn.patch:70                  ${TFLITE_LIB_ROOT}/pthreadpool)
- docker/tensorflow-lite-aarch64/scripts/build-armcl.sh:29 scons -j ${num_cpus} arch=armv8.2-a build=native os=linux neon=1 extra_cxx_flags="-fPIC" benchmark_tests=0 validation_tests=0 opencl=0 Werror=false fixed_format_kernels=1  multi_isa=1 openmp=1 cppthreads=0

https://github.com/droe/xnumon
- work.c:20 #include <pthread.h>
- queue.c:26 	rv = pthread_mutex_init(&queue->mutex, NULL);
- cachehash.c:15 #include <pthread.h>
- procmon.c:40 #include <pthread.h>
- debug.c:18 #include <pthread.h>

https://github.com/liu-jianhao/CMU-15-445
- Lab/src/CMakeLists.txt:77         target_link_libraries(sqlite3 pthread dl)

https://github.com/floooh/sokol-zig
- src/sokol/c/sokol_audio.h:344     pthread_mutex_* functions.

https://github.com/lsds/spectre-attack-sgx
- SGXSpectre/main/enclave_init.c:38 #include <pthread.h>
- SGXSpectre/Makefile:132 	$(CC) $(CFLAGS) -o $@ main/main.o main/enclave_u.o main/enclave_init.o $(App_Link_Flags) -lpthread

https://github.com/microsoft/jericho
- frotz/src/curses/ux_locks.c:2 #include <pthread.h>
- frotz/src/curses/ux_audio.c:29 #include <pthread.h>
- frotz/Makefile:249 SOUND_LIB = -lao -ldl -lpthread -lm -lsndfile -lvorbisfile -lmodplug -lsamplerate

https://github.com/CatxFish/motion-effect
- external/FindLibObs.cmake:80 	find_obs_lib(W32_PTHREADS deps/w32-pthreads w32-pthreads)

https://github.com/Decurity/abi-decompiler
- README.md:16 clang++ -O3 -std=c++11 -pthread sha3.c sig-bruteforcer.cpp -o sig-bruteforcer

https://github.com/avanetten/simrdwn
- yolt2/src/tag.c:28     pthread_t load_thread;
- yolt2/src/data.h:3 #include <pthread.h>
- yolt2/src/yolo_kernels.cu:89     pthread_t fetch_thread;
- yolt3/src/demo.c:197     pthread_t detect_thread;
- yolt2/src/cpl_config.h:4 /* Define if you want to use pthreads based multiprocessing support */

https://github.com/MisaZhu/ewokos
- system/basic/libs/libc/include/pthread.h:11 typedef int32_t pthread_t;
- system/basic/libs/libc/src/pthread/pthread_self.c:1 #include <pthread.h>
- system/basic/libs/libc/src/pthread/pthread_mutex_destroy.c:1 #include <pthread.h>
- system/basic/libs/libc/src/pthread/pthread_mutex_unlock.c:1 #include <pthread.h>
- system/full/apps/xconsole/xconsole.cc:14 #include <pthread.h>

https://github.com/liva/minimal-linux
- tools/include/linux/spinlock.h:5 #include <pthread.h>
- include/acpi/platform/aclinux.h:207 #define ACPI_CAST_PTHREAD_T(pthread) ((acpi_thread_id) (pthread))
- include/uapi/asm-generic/siginfo.h:260  * userspace, libpthread transmuting it to SIGEV_SIGNAL, which the
- kernel/futex.c:1914 		 * pthread_cond_signal() and pthread_cond_broadcast() should
- fs/proc/base.c:3253  * cross thread naming (pthread_set/getname_np(!self)). However, if

https://github.com/extfuse/extfuse
- Makefile:39 HOSTLOADLIBES_libextfuse.so += -shared -lelf -lpthread

https://github.com/bwhitman/alles
- main/alles_desktop.c:5 #include <pthread.h>
- sdkconfig:1323 CONFIG_PTHREAD_TASK_NAME_DEFAULT="pthread"
- main/multicast_desktop.c:167 // called from pthread
- main/Makefile:5 LIBS = -lpthread -lm 

https://github.com/pymumu/tinylog
- example/CMakeLists.txt:10 target_link_libraries(example pthread)
- tlog.c:15 #include <pthread.h>
- example/Makefile:5 LIBS = -lpthread
- test/test.c:2 #include <pthread.h>
- test/Makefile:4 LIBS = -lpthread

https://github.com/pimoroni/keybow-firmware
- keybow/lights.c:20 pthread_t t_run_lights;
- keybow/lights.h:10 #include <pthread.h>
- bcm2835-1.68/ltmain.sh:5621 	   # Do not include libc_r directly, use -pthread flag.
- keybow/keybow.h:2 #include <pthread.h>
- keybow/Makefile:1 CFLAGS_ALL=-I../libusbgx/build/include -I../bcm2835-1.68/build/include -L../bcm2835-1.68/build/lib -I../lua-5.4.0/src -L../libusbgx/build/lib -L../libserialport/build/lib -L../lua-5.4.0/src -lpng -lz -lpthread -llua -lm -lbcm2835 -ldl

https://github.com/gfreewind/kernel_comment
- Documentation/pi-futex.txt:64 locks (such as futex-based pthread mutexes) is priority inheritance:
- tools/perf/ui/ui.h:5 #include <pthread.h>
- tools/usb/Makefile:4 PTHREAD_LIBS = -lpthread
- tools/perf/perf.h:33 void pthread__unblock_sigwinch(void);
- Documentation/robust-futexes.txt:31 process exits prematurely while holding a pthread_mutex_t lock that is

https://github.com/ret2p4nda/kernel-pwn
- core/core/pwn.c:9 #include <pthread.h>
- core/core/test.c:9 #include <pthread.h>

https://github.com/dyne/dnscrypt-proxy
- m4/ax_pthread.m4:2 #        http://www.gnu.org/software/autoconf-archive/ax_pthread.html
- src/libevent-modified/evthread_pthread.c:32 #include <pthread.h>
- src/libevent-modified/m4/acx_pthread.m4:1 ##### http://autoconf-archive.cryp.to/acx_pthread.html
- src/libevent-modified/libevent_pthreads.pc.in:8 Name: libevent_pthreads
- src/libevent-modified/Makefile.am:116 LIBEVENT_LIBS_LA += libevent_pthreads.la

https://github.com/viveris/uMTP-Responder
- inc/mtp.h:129 	pthread_t inotify_thread;
- src/inotify.c:30 #include <pthread.h>
- src/msgqueue.c:29 #include <pthread.h>
- src/usb_gadget.c:32 #include <pthread.h>
- src/umtprd.c:31 #include <pthread.h>

https://github.com/PlatformLab/HomaModule
- util/Makefile:22 	g++ $(CFLAGS) $^ -lpthread -o $@

https://github.com/vanhoefm/krackattacks-poc-zerokey
- wpa_supplicant/Makefile:940 # -lpthread may not be needed depending on how pcsc-lite was configured
- wpa_supplicant/Android.mk:899 # -lpthread may not be needed depending on how pcsc-lite was configured

https://github.com/mrDIMAS/DmitrysEngine
- core/thread.h:32 #include <pthread.h>
- core/thread_posix.c:24 	pthread_create(thr, NULL, (void*(*)(void*)) func, arg);
- README.md:117 Options for linker: `-lGL -lpthread -lasound -lX11 -lXrandr`

https://github.com/aystshen/AndroidStressTest
- libuvccamera/src/main/jni/libusb/configure.ac:100 	AC_SEARCH_LIBS(clock_gettime, rt, [], [], -pthread)
- libuvccamera/src/main/jni/UVCCamera/UVCPreview.h:29 #include <pthread.h>
- libuvccamera/src/main/jni/libusb/examples/dpfp_threaded.c:25 #include <pthread.h>
- libuvccamera/src/main/jni/UVCCamera/UVCButtonCallback.cpp:15 	pthread_mutex_init(&button_mutex, NULL);
- libuvccamera/src/main/jni/libusb/libusb/os/threads_windows.h:43 // We *were* getting timespec from pthread.h:

https://github.com/msuiche/LiveCloudKd
- LeechCore/leechcore/Makefile:2 CFLAGS  += -I. -D LINUX -shared -fPIC -fvisibility=hidden -pthread `pkg-config libusb-1.0 --libs --cflags`
- LeechCore/leechcore/oscompatibility.c:98     pthread_t thread;
- LeechCore/leechcore/oscompatibility.h:36 #include <pthread.h>

https://github.com/AlexVestin/WasmVideoEncoder
- webassembly/C/demuxmake:28 	--disable-pthreads \
- webassembly/build/em/Makefile:59 	--disable-pthreads \
- webassembly/build/em/tmp2:87 	--disable-pthreads \
- webassembly/build/em/MakefileS:102 	--disable-pthreads \
- webassembly/build/reg/Makefile:100 	--disable-pthreads \

https://github.com/fgsfdsfgs/vitaXash3D
- engine/platform/android/snd_opensles.c:24 #include "pthread.h"
- engine/platform/android/android_nosdl.c:18 #include <pthread.h>

https://github.com/sonydevworld/spresense
- examples/hostif/hostif_main.c:48 #include <pthread.h>
- examples/gnss_addon/gnss_addon_pps.c:48 #include <pthread.h>
- sdk/modules/audio/dsp_driver/include/dsp_drv.h:46 #include <pthread.h>
- examples/gnss_atcmd/gnss_atcmd_main.c:51 #include <pthread.h>
- sdk/modules/sensing/manager/sensor_manager.cpp:73 static pthread_t s_smng_pid = INVALID_PROCESS_ID;

https://github.com/aqi00/android2
- mixture/src/main/jni/djvudroid/atomic.cpp:39 // #include <pthread.h>
- mixture/src/main/jni/djvudroid/config.h:110 /* Define if pthreads are available */
- mixture/src/main/jni/djvudroid/GThreads.cpp:643 #define pthread_key_create pthread_keycreate
- mixture/src/main/jni/djvudroid/GThreads.h:189 #include <pthread.h>
- mixture/src/main/jni/mupdf/jpeg/libtool:5060 	   # Do not include libc_r directly, use -pthread flag.

https://github.com/nrfconnect/sdk-nrfxlib
- crypto/nrf_cc312_mbedcrypto/include/nrf-config-cc312.h:1901  * Enable the pthread wrapper layer for the threading layer.
- openthread/lib/cortex-m4/hard-float/v1.3/ftd/oberon/nrf_security_mbedtls_configuration.h:1695  * Enable the pthread wrapper layer for the threading layer.
- crypto/nrf_cc310_mbedcrypto/include/nrf-config-cc310.h:1901  * Enable the pthread wrapper layer for the threading layer.
- openthread/lib/cortex-m33/hard-float/v1.3/mtd/oberon/nrf_security_mbedtls_configuration.h:1695  * Enable the pthread wrapper layer for the threading layer.
- openthread/lib/cortex-m4/hard-float/v1.3/master/oberon/nrf_security_mbedtls_configuration.h:1695  * Enable the pthread wrapper layer for the threading layer.

https://github.com/Zaoldyeckk/High-Level-Synthesis-Flow-on-Zynq-using-Vivado-HLS
- source/lab4/fir.prj/solution1/sim/wrapc/obj/apatb_fir.d:103  C:/Xilinx/Vivado/2018.2/msys64/mingw64/x86_64-w64-mingw32/include/pthread.h \
- source/lab4/fir.prj/solution1/sim/wrapc/cosim.tv.mk:53 LFLAG += -L "${AUTOPILOT_ROOT}/${AUTOPILOT_MACH}/tools/systemc/lib" -lsystemc -lpthread
- source/lab4/fir.prj/solution1/.autopilot/db/fir.pp.0.c:233 typedef struct threadlocaleinfostruct *pthreadlocinfo;
- source/lab4/fir.prj/solution1/sim/wrapc/Makefile.rules:192 LFLAG += -Wl,-rpath,"$(SYSCLIB)" -L "$(SYSCLIB)" -lsystemc -lpthread
- source/lab4/fir.prj/solution1/sim/wrapc/fir.c_pre.c.tb.c:114 typedef struct threadlocaleinfostruct *pthreadlocinfo;

https://github.com/epernia/firmware_v3
- libs/rkh/fwk/inc/rkhitl.h:2228  *  #define RKH_THREAD_TYPE		pthread_t

https://github.com/ARMmbed/mbed-crypto
- library/threading.c:71 static void threading_mutex_init_pthread( mbedtls_threading_mutex_t *mutex )
- library/CMakeLists.txt:3 option(LINK_WITH_PTHREAD "Explicitly link mbed TLS library to pthread." OFF)
- include/mbedtls/threading.h:47 #include <pthread.h>
- include/mbedtls/config.h:1062  * Enable the pthread wrapper layer for the threading layer.
- configs/config-psa-crypto.h:970  * Enable the pthread wrapper layer for the threading layer.

https://github.com/pulp-platform/pulp-sdk
- tools/dpi-models/models/jtag/proxy/proxy.cpp:83   pthread_mutex_t mutex;
- tools/dpi-models/src/models.cpp:281   // Dirty hack to not call system verilog task from pthread on RTL platform
- tools/pulp-debug-bridge/src/cables/adv_dbg_itf/adv_dbg_itf.hpp:89     pthread_mutex_t mutex;
- tools/pulp-debug-bridge/src/cables/adv_dbg_itf/adv_dbg_itf.cpp:36   pthread_mutexattr_t attr;

https://github.com/cryptozeny/cpuminer-opt-sugarchain
- compat/pthreads/pthread.h:15  *      http://sources.redhat.com/pthreads-win32/contributors.html
- compat/pthreads/sched.h:22  *      http://sources.redhat.com/pthreads-win32/contributors.html
- depends/openssl-1.0.2g/crypto/threads/pthread.sh:3 # build using pthreads
- configure.ac:52     CFLAGS="-Icompat/pthreads $CFLAGS"
- miner.h:43 #include <pthread.h>

https://github.com/pjreddie/dl-hw0
- Makefile:18 LDFLAGS= -lm -pthread 

https://github.com/intel/iotg_tsn_ref_sw
- src/txrx.c:42 #include <pthread.h>
- CHANGELOG.md:89 - Update deprecated pthread function in TXRX-AFXDP test script
- src/opcua-tsn/opcua_custom.c:42 #include <pthread.h>
- src/opcua-tsn/opcua_common.h:118 int setRtPriority(pthread_t thread, int priority, uint32_t cpu);
- src/tsq.c:49 #include <pthread.h>

https://github.com/firoorg/ccminer
- compat/pthreads/pthread.h:15  *      http://sources.redhat.com/pthreads-win32/contributors.html
- compat/pthreads/sched.h:22  *      http://sources.redhat.com/pthreads-win32/contributors.html
- configure.ac:57 PTHREAD_FLAGS="-pthread"
- bench.cpp:19 static pthread_barrier_t miner_barr;
- cuda_mtp/mtp.cu:43 //static pthread_mutex_t work_lock = PTHREAD_MUTEX_INITIALIZER;

https://github.com/LineageOS/android_kernel_motorola_msm8998
- Documentation/pi-futex.txt:63 locks (such as futex-based pthread mutexes) is priority inheritance:
- tools/hv/Makefile:4 PTHREAD_LIBS = -lpthread
- tools/perf/perf.h:40 void pthread__unblock_sigwinch(void);
- tools/perf/ui/ui.h:4 #include <pthread.h>
- Documentation/robust-futexes.txt:27 process exits prematurely while holding a pthread_mutex_t lock that is

https://github.com/fangfufu/httpdirfs
- src/util.h:8 #include <pthread.h>
- Makefile.am:5 # it should add -pthread to CFLAGS but doesn't.
- src/util.c:57 void PTHREAD_MUTEX_UNLOCK(pthread_mutex_t *x)
- src/network.c:25 static pthread_mutex_t transfer_lock;
- src/cache.c:30 static pthread_mutex_t cf_lock;

https://github.com/goToMain/c-utils
- CMakeLists.txt:25 target_link_libraries(${TEST_BIN} ${LIB_UTILS} pthread)
- src/workqueue.c:57 	pthread_mutex_lock(&wq->backlog_lock);
- src/bus_server.c:20 pthread_mutex_t bus_global_lock;
- include/utils/workqueue.h:10 #include <pthread.h>
- include/utils/bus_server.h:10 #include <pthread.h>

https://github.com/BPI-SINOVOIP/BPI-W2-bsp
- toolchains/asdk64-4.9.4-a53-EL-3.10-g2.19-a64nt-160307/config/eglibc/libc/nptl/descr.h:31 #include <pthreaddef.h>
- toolchains/asdk64-4.9.4-a53-EL-3.10-g2.19-a64nt-160307/config/eglibc/libc/nptl_db/db_info.c:1 /* This file is included by pthread_create.c to define in libpthread
- toolchains/asdk64-4.9.4-a53-EL-3.10-g2.19-a64nt-160307/include/pthread.h:26 #include <bits/pthreadtypes.h>
- toolchains/asdk64-4.9.4-a53-EL-3.10-g2.19-a64nt-160307/config/eglibc/libc/nptl/pthread_join.c:23 #include "pthreadP.h"
- toolchains/asdk64-4.9.4-a53-EL-3.10-g2.19-a64nt-160307/config/eglibc/libc/nptl/pthread_once.c:19 #include "pthreadP.h"

https://github.com/mirkerson/c600
- buildroot/package/x11r7/pthread-stubs/pthread-stubs.mk:3 # pthread-stubs
- buildroot/package/x11r7/pthread-stubs/Config.in:2 	bool "pthread-stubs"
- brandy/gcc-linaro/arm-linux-gnueabi/libc/usr/include/pthread.h:28 #include <bits/pthreadtypes.h>
- buildroot/package/qt/qt-4.7.1-pthread_getattr_np.patch:18 +// pthread_getattr_np or pthread_attr_getstack.
- buildroot/package/webkit/webkit-pthread_getattr_np.patch:1 Patch WebKit because pthread_getattr_np is not implemented in uClibc

https://github.com/pjreddie/vision-hw2
- Makefile:18 LDFLAGS= -lm -pthread 

https://github.com/OpenNuvoton/NUC980-linux-4.4.y
- Documentation/pi-futex.txt:63 locks (such as futex-based pthread mutexes) is priority inheritance:
- tools/hv/Makefile:4 PTHREAD_LIBS = -lpthread
- tools/perf/perf.h:40 void pthread__unblock_sigwinch(void);
- tools/perf/ui/ui.h:4 #include <pthread.h>
- Documentation/robust-futexes.txt:27 process exits prematurely while holding a pthread_mutex_t lock that is

https://github.com/INSA-GEI/dumber
- software/raspberry/superviseur-robot/main.cpp:24 #include "tasks_pthread.h"
- software/raspberry/superviseur-robot/nbproject/private/timestamps-10.105.1.13-pi-22:76 /home/dimercur/Documents/Travail/git/dumber/software/raspberry/superviseur-robot/pthread_version/tasks_pthread.h=c1546961074000
- software/raspberry/superviseur-robot/nbproject/Makefile-Debug__PC_.mk:70 	${LINK.cc} -o ${CND_DISTDIR}/${CND_CONF}/${CND_PLATFORM}/superviseur-robot ${OBJECTFILES} ${LDLIBSOPTIONS} -Wl,--no-as-needed -lalchemy -lcopperplate /usr/xenomai/lib/xenomai/bootstrap.o -Wl,--wrap=main -Wl,--dynamic-list=/usr/xenomai/lib/dynlist.ld -L/usr/xenomai/lib -lmercury -lpthread -lrt
- software/raspberry/superviseur-robot/nbproject/configurations.xml:81           <commandLine>-Wl,--no-as-needed -lalchemy -lcopperplate /usr/xenomai/lib/xenomai/bootstrap.o -Wl,--wrap=main -Wl,--dynamic-list=/usr/xenomai/lib/dynlist.ld -L/usr/xenomai/lib -lmercury -lpthread -lrt</commandLine>
- software/raspberry/superviseur-robot/nbproject/Makefile-Debug__RPI_.mk:70 	${LINK.cc} -o ${CND_DISTDIR}/${CND_CONF}/${CND_PLATFORM}/superviseur-robot ${OBJECTFILES} ${LDLIBSOPTIONS} -Wl,--no-as-needed -lalchemy -lcopperplate /usr/xenomai/lib/xenomai/bootstrap.o -Wl,--wrap=main -Wl,--dynamic-list=/usr/xenomai/lib/dynlist.ld -L/usr/xenomai/lib -lmercury -lpthread -lrt

https://github.com/zhaohengbo/rt-boot
- rt-boot/common/kernel/components.c:10  * 2012-12-23     Bernard      fix the pthread initialization issue.
- rt-boot/common/include/kernel/libc/libc_signal.h:42     void         *sigev_notify_attributes;   /* Notification Attributes, really pthread_attr_t */

https://github.com/xupenghu/LearningFreeRTOS
- FreeRTOSv10.1.0/FreeRTOS-Plus/Source/WolfSSL/m4/ax_pthread.m4:2 #        http://www.gnu.org/software/autoconf-archive/ax_pthread.html
- FreeRTOSv10.1.0/FreeRTOS-Plus/Source/WolfSSL/config.in:39 /* Define to 1 if you have the `pthread' library (-lpthread). */
- FreeRTOSv10.1.0/FreeRTOS-Plus/Source/WolfSSL/testsuite/testsuite.c:294     pthread_mutex_lock(&args->signal->mutex);
- FreeRTOSv10.1.0/FreeRTOS-Plus/Source/WolfSSL/m4/wolfssl_darwin_clang.m4:11 #   "-pthread" flag, and passes it to the underlying "clang" which chokes
- FreeRTOSv10.1.0/FreeRTOS-Plus/Source/WolfSSL/wolfssl/wolfcrypt/wc_port.h:72         #include <pthread.h>

https://github.com/zhoudd1/GB28181Android
- gb28181library/src/main/cpp/include/compat/w32pthreads.h:26  * w32threads to pthreads wrapper
- gb28181library/src/main/cpp/GB28181_sender.cpp:30     pthread_t thread;
- gb28181library/src/main/cpp/include/compat/os2threads.h:23  * os2threads to pthreads wrapper
- gb28181library/src/main/cpp/config.h:4 #define FFMPEG_CONFIGURATION "--prefix=./android/armv7-a-vfp --enable-cross-compile --disable-runtime-cpudetect --disable-asm --arch=arm --target-os=android --cc=/Users/jianxi/android/sdk/ndk-bundle/toolchains/arm-linux-androideabi-4.9/prebuilt/darwin-x86_64/bin/arm-linux-androideabi-gcc --cross-prefix=/Users/jianxi/android/sdk/ndk-bundle/toolchains/arm-linux-androideabi-4.9/prebuilt/darwin-x86_64/bin/arm-linux-androideabi- --disable-stripping --nm=/Users/jianxi/android/sdk/ndk-bundle/toolchains/arm-linux-androideabi-4.9/prebuilt/darwin-x86_64/bin/arm-linux-androideabi-nm --sysroot=/Users/jianxi/android/sdk/ndk-bundle/platforms/android-14/arch-arm --enable-gpl --enable-shared --disable-static --enable-version3 --enable-small --enable-pthreads --disable-vda --disable-iconv --disable-encoders --enable-libx264 --enable-neon --enable-yasm --enable-libfdk_aac --enable-encoder=libx264 --enable-encoder=libfdk_aac --enable-nonfree --enable-muxers --enable-muxer=mov --enable-muxer=mp4 --enable-muxer=aac --enable-muxer=h264 --enable-muxer=avi --disable-decoders --enable-decoder=aac --enable-decoder=aac_latm --enable-decoder=h264 --enable-decoder=mpeg4 --disable-demuxers --enable-demuxer=h264 --enable-demuxer=aac --enable-demuxer=avi --enable-demuxer=mpc --enable-demuxer=mov --disable-parsers --enable-parser=aac --enable-parser=ac3 --enable-parser=h264 --disable-protocols --enable-protocol=file --enable-avfilter --disable-outdevs --disable-ffprobe --disable-ffplay --disable-ffmpeg --disable-ffserver --disable-debug --disable-ffprobe --disable-ffplay --disable-ffmpeg --disable-postproc --disable-avdevice --disable-symver --disable-stripping --extra-cflags='-O3 -Wall -pipe -ffast-math -fstrict-aliasing -Werror=strict-aliasing -Wno-psabi -Wa,--noexecstack -DANDROID -DNDEBUG -I/Users/jianxi/Downloads/code/ffmpeg-3.2.5/mylib/include -I/Users/jianxi/Downloads/code/ffmpeg-3.2.5/mylib/include/fdk-aac -march=armv7-a -mfpu=vfpv3-d16 -mfloat-abi=softfp -mthumb' --extra-ldflags='-Wl,-L./mylib/lib'"
- gb28181library/src/main/cpp/include/libavcodec/avcodec.h:3193      * Also see avcodec_thread_init and e.g. the --enable-pthread configure option.

https://github.com/travarilo/kernel_asus_sdm660
- Documentation/pi-futex.txt:63 locks (such as futex-based pthread mutexes) is priority inheritance:
- tools/hv/Makefile:4 PTHREAD_LIBS = -lpthread
- tools/perf/perf.h:40 void pthread__unblock_sigwinch(void);
- tools/perf/ui/ui.h:4 #include <pthread.h>
- Documentation/robust-futexes.txt:27 process exits prematurely while holding a pthread_mutex_t lock that is

https://github.com/ringringyi/DOTA_YOLOv2
- src/demo.c:197     pthread_t detect_thread;
- src/data.h:3 #include <pthread.h>
- Makefile:27 LDFLAGS= -lm -pthread 
- examples/writing.c:36     pthread_t load_thread = load_data_in_thread(args);
- include/darknet.h:6 #include <pthread.h>

https://github.com/energystoryhhl/LinuxCanbusTool
- main.c:5 #include <pthread.h>
- canbus.c:11 #include <pthread.h>
- can_dbc_0.2.depend:18 	<pthread.h>
- dbc_timer.h:12     pthread_cond_t _10msThreadReady;
- dbc_load_0.2.depend:34 	<pthread.h>

https://github.com/R0B1NL1N/Linux-Kernel-Exploites
- 2016/CVE-2016-5195/README.md:31 $ gcc -pthread dirtyc0w.c -o dirtyc0w
- 2016/CVE-2016-9793/poc.c:8 // # gcc -pthread exploit.c -o exploit
- 2014/CVE-2014-3153/35370.c:7  * $gcc exploit.c -o exploit -lpthread
- 2016/CVE-2016-5195/40616.c:7 * $ gcc cowroot.c -o cowroot -pthread
- 2016/CVE-2016-5195/pokemon.c:1 // $ echo pikachu|sudo tee pokeball;ls -l pokeball;gcc -pthread pokemon.c -o d;./d pokeball miltank;cat pokeball

https://github.com/greenbone/openvas-smb
- samba/nsswitch/winbind_nss_hpux.h:42 #include <pthread.h>

https://github.com/MusouCrow/BrickAndBall
- Server/skynet/Makefile:105 	$(CC) $(CFLAGS) $(SHARED) $^ -o $@ -lpthread
- Server/skynet/skynet-src/rwlock.h:52 #include <pthread.h>
- Server/skynet/skynet-src/skynet_start.c:13 #include <pthread.h>
- Server/skynet/platform.mk:21 SKYNET_LIBS := -lpthread -lm
- Server/3rd/lua-cjson/manual.adoc:162   multi-threaded application. Requires the _pthreads_ library.

https://github.com/zs6buj/mav2pt
- libraries/ESP32/LilyGo_T-Display-S3_libraries/lib/lvgl/docs/libs/ffmpeg.md:12 - Add library: `FFmpeg` (for GCC: `-lavformat -lavcodec -lavutil -lswscale -lm -lz -lpthread`)

https://github.com/LineageOS/android_device_google_crosshatch
- usb/usb/Usb.h:69     pthread_mutex_t mLock;
- usb/usb/Usb.cpp:24 #include <pthread.h>
- dumpstate/DumpstateDevice.cpp:28 #include <pthread.h>

https://github.com/sam88651/UsbHasp
- nbproject/Makefile-Debug.mk:59 LDLIBSOPTIONS=-L/usr/local/lib -lusb_vhci -ljansson -lpthread
- nbproject/Makefile-Release.mk:59 LDLIBSOPTIONS=-L/usr/local/lib -ljansson -lusb_vhci -lpthread

https://github.com/microsoft/mimalloc
- src/prim/wasi/prim.c:61 static pthread_mutex_t mi_heap_grow_mutex = PTHREAD_MUTEX_INITIALIZER;
- include/mimalloc/prim.h:245 - OpenBSD: we use an unused slot from the pthread block (MI_TLS_PTHREAD_SLOT_OFS).
- CMakeLists.txt:306   find_library(MI_LIBPTHREAD pthread)
- src/init.c:382 // 3. unix, pthreads:
- include/mimalloc/internal.h:53 // pthreads

https://github.com/rui314/chibicc
- Makefile:18 	$(CC) -pthread -o $@ test/$*.o -xc test/common
- test/tls.c:3 #include <pthread.h>
- test/atomic.c:3 #include <pthread.h>

https://github.com/Immediate-Mode-UI/Nuklear
- demo/sfml_opengl2/Makefile:23 		LIBS = -lsfml-window -lsfml-system -pthread -framework OpenGL
- demo/sfml_opengl3/Makefile:25 		LIBS = -lsfml-window -lsfml-system -pthread -framework OpenGL

https://github.com/microsoft/WSL2-Linux-Kernel
- tools/perf/perf.h:15 void pthread__unblock_sigwinch(void);
- tools/virtio/Makefile:8 CFLAGS += -pthread
- scripts/sorttable.h:88 #include <pthread.h>
- tools/perf/ui/setup.c:2 #include <pthread.h>
- tools/perf/util/rwsem.c:7 	return pthread_rwlock_init(&sem->lock, NULL);

https://github.com/n64decomp/sm64
- tools/Makefile:45 armips_LDFLAGS := -pthread

https://github.com/wasm3/wasm3
- platforms/ios/wasm3/main.c:12 #include <pthread.h>
- platforms/android/app/src/main/cpp/jni.c:12 #include <pthread.h>
- docs/Cookbook.md:198 - **-pthread** Support POSIX threads in generated code
- platforms/embedded/esp32-pio/src/sdkconfig:885 CONFIG_ESP32_PTHREAD_TASK_NAME_DEFAULT="pthread"
- platforms/embedded/esp32-pio/src/sdkconfig.h:92 #define CONFIG_ESP32_PTHREAD_TASK_NAME_DEFAULT "pthread"

https://github.com/vnmakarov/mir
- c-benchmarks/README.md:7 because most of them depend on external libraries (gmp, pre, pthread,
- check-threads.sh:2 # Check pthread library presence:
- mir.h:88 #include <pthread.h>
- c2mir/c2mir-driver.c:35      {"/lib32/libm.so.6", NULL}, {"/lib/libpthread.so.0", NULL}, {"/lib32/libpthread.so.0", NULL}};
- mir.c:3749 #include <pthread.h>

https://github.com/SwiftLaTeX/SwiftLaTeX
- xetex.wasm/xpdf/goo/GMutex.h:20 #  include <pthread.h>
- pdftex.wasm/xpdf/goo/gmem.cc:74 #    include <pthread.h>
- pdftex.wasm/xpdf/xpdf/TileCache.cc:22 #  include <pthread.h>
- pdftex.wasm/xpdf/goo/GMutex.h:20 #  include <pthread.h>

https://github.com/apache/nuttx
- sched/pthread/pthread.h:2  * sched/pthread/pthread.h
- sched/pthread/pthread_join.c:2  * sched/pthread/pthread_join.c
- sched/pthread/pthread_exit.c:2  * sched/pthread/pthread_exit.c
- sched/pthread/pthread_mutex.c:2  * sched/pthread/pthread_mutex.c
- sched/pthread/pthread_release.c:2  * sched/pthread/pthread_release.c

https://github.com/riba2534/TCP-IP-NetworkNote
- ch24/README.md:72 #include <pthread.h>
- ch18/mutex.c:4 #include <pthread.h>
- ch18/chat_server.c:8 #include <pthread.h>
- ch18/thread3.c:2 #include <pthread.h>
- ch18/thread1.c:2 #include <pthread.h>

https://github.com/ChenLittlePing/LearningVideo
- app/src/main/cpp/media/encoder/base_encoder.h:37     pthread_mutex_t m_mutex = PTHREAD_MUTEX_INITIALIZER;
- app/src/main/cpp/media/decoder/base_decoder.cpp:298     pthread_mutex_lock(&m_mutex);
- app/src/main/cpp/media/render/audio/opensl_render.h:14 #include <pthread.h>
- app/src/main/cpp/ffmpeg/include/libavcodec/avcodec.h:2871      * Also see avcodec_thread_init and e.g. the --enable-pthread configure option.
- app/src/main/cpp/media/decoder/base_decoder.h:72     pthread_mutex_t m_mutex = PTHREAD_MUTEX_INITIALIZER;

https://github.com/zrythm/zrythm
- inc/dsp/router.h:51 #include <pthread.h>
- src/dsp/graph_thread.c:291   size_t (*__pthread_get_minstack) (const pthread_attr_t * attr) = (size_t (*) (
- ext/qm-dsp/thread/Thread.cpp:294         pthread_join(m_id, 0);
- ext/zita-resampler/resampler_table.c:43 static pthread_mutex_t mutex;
- ext/weakjack/weak_libjack.def:142 	/* on POSIX systems, call pthread_join() when libjack does not provide jack_client_stop_thread */

https://github.com/waveshareteam/e-Paper
- STM32/STM32-F103ZET6/Drivers/CMSIS/RTOS2/Template/cmsis_os.h:189 typedef void (*os_pthread) (void const *argument);
- STM32/STM32-F103ZET6/Drivers/CMSIS/RTOS2/Template/cmsis_os1.c:39   return osThreadNew((osThreadFunc_t)thread_def->pthread, argument, &thread_def->attr);
- STM32/STM32-F103ZET6/Drivers/CMSIS/RTOS/Template/cmsis_os.h:124 /// \note MUST REMAIN UNCHANGED: \b os_pthread shall be consistent in every CMSIS-RTOS.

https://github.com/c3lang/c3c
- src/utils/taskqueue.c:8 #include <pthread.h>
- lib/std/os/posix/threads.c3:11 extern fn CInt pthread_create(Pthread_t*, Pthread_attr_t*, PosixThreadFn, void*);
- lib/std/threads/os/thread_posix.c3:22 	if (posix::pthread_mutexattr_init(&attr)) return ThreadFault.INIT_FAILED?;
- CMakeLists.txt:410     target_link_options(c3c PRIVATE -pthread)
- src/compiler/linker.c:218 	add_arg("-lpthread");

https://github.com/termux/termux-x11
- app/src/main/cpp/lorie/shm/shmem.c:5 #include <pthread.h>
- app/src/main/cpp/lorie/android.c:79     pthread_t t;
- app/src/main/cpp/lorie/InitOutput.c:169     pthread_t t;

https://github.com/chineseocr/darknet-ocr
- darknet/src/demo.c:199     pthread_t detect_thread;
- darknet/src/data.h:3 #include <pthread.h>
- darknet/examples/tag.c:18     pthread_t load_thread;
- darknet/examples/writing.c:36     pthread_t load_thread = load_data_in_thread(args);
- darknet/examples/classifier.c:93     pthread_t load_thread;

https://github.com/vroland/epdiy
- examples/demo/sdkconfig.defaults.esp32:1189 CONFIG_PTHREAD_TASK_NAME_DEFAULT="pthread"
- examples/demo/sdkconfig.defaults.esp32s3:1142 CONFIG_PTHREAD_TASK_NAME_DEFAULT="pthread"
- examples/weather/sdkconfig.defaults.esp32:1189 CONFIG_PTHREAD_TASK_NAME_DEFAULT="pthread"
- examples/weather/sdkconfig.defaults.esp32s3:1143 CONFIG_PTHREAD_TASK_NAME_DEFAULT="pthread"
- examples/dragon/sdkconfig.defaults.esp32:1189 CONFIG_PTHREAD_TASK_NAME_DEFAULT="pthread"

https://github.com/awslabs/amazon-kinesis-video-streams-webrtc-sdk-c
- README.md:118 cmake .. -DLWS_HAVE_PTHREAD_H=1 -DLWS_EXT_PTHREAD_INCLUDE_DIR="C:\Program Files (x86)\pthreads\include" -DLWS_EXT_PTHREAD_LIBRARIES="C:\Program Files (x86)\pthreads\lib\x64\libpthreadGC2.a" -DLWS_WITH_MINIMAL_EXAMPLES=1
- tst/suppressions/TSAN.supp:46 #     #0 pthread_create /tmp/final/llvm.src/projects/compiler-rt/lib/tsan/rtl/tsan_interceptors.cc:965:3 (webrtc_client_test+0x4de515)
- .github/build_windows_openssl.bat:5 cmake -G "NMake Makefiles" -DBUILD_TEST=TRUE -DENABLE_AWS_SDK_IN_TESTS=OFF -DEXT_PTHREAD_INCLUDE_DIR="C:/tools/pthreads-w32-2-9-1-release/Pre-built.2/include/" -DEXT_PTHREAD_LIBRARIES="C:/tools/pthreads-w32-2-9-1-release/Pre-built.2/lib/x64/libpthreadGC2.a" ..
- .github/workflows/ci.yml:471           curl.exe -o C:\tools\pthreads-w32-2-9-1-release.zip ftp://sourceware.org/pub/pthreads-win32/pthreads-w32-2-9-1-release.zip
- .github/build_windows_mbedtls.bat:5 cmake -G "NMake Makefiles" -DUSE_OPENSSL=OFF -DUSE_MBEDTLS=ON -DBUILD_TEST=TRUE -DEXT_PTHREAD_INCLUDE_DIR="C:/tools/pthreads-w32-2-9-1-release/Pre-built.2/include/" -DEXT_PTHREAD_LIBRARIES="C:/tools/pthreads-w32-2-9-1-release/Pre-built.2/lib/x64/libpthreadGC2.a" ..

https://github.com/IAIK/ZombieLoad
- victim/sgx_linux/Makefile:95 App_Link_Flags := $(SGX_COMMON_CFLAGS) -L$(SGX_LIBRARY_PATH) -l$(Urts_Library_Name) -lpthread 

https://github.com/AngelKitty/review_the_national_post-graduate_entrance_examination
- books_and_notes/professional_courses/computer_network/sources/hw/2016实验/2014011330_CN_EXP3/src/makefile:3 	g++ Server.o Client.o main.o -lglog -pthread -std=c++11 -o main.out
- books_and_notes/professional_courses/operating_system/sources/ucore_os_lab/related_info/lab7/semaphore_condition/philosophers-with-semaphore.c:8 #include <pthread.h>

https://github.com/roleoroleo/yi-hack-MStar
- src/ipc_cmd/ipc_cmd/ipc_read.h:11 #include <pthread.h>
- src/ipc_cmd/ipc_cmd/ipc2file.c:382             pthread_t sound_stop_pthread;
- src/snapshot/snapshot/add_water.h:16 #include <pthread.h>
- src/ipc_cmd/ipc_cmd/Makefile:6 LIBS_2 = -lrt -lpthread
- src/rRTSPServer/Makefile.rRTSPServer:80 	$(LINK)$@ $(CONSOLE_LINK_OPTS) $(rRTSPServer_OBJS) $(LIBS) -lpthread

https://github.com/Matheus-Garbelini/esp32_esp8266_attacks
- esp_client_test_codes/ESP32_EAP_Client/sdkconfig:468 CONFIG_ESP32_PTHREAD_TASK_NAME_DEFAULT="pthread"
- esp_client_test_codes/ESP32_EAP_Client/sdkconfig.old:468 CONFIG_ESP32_PTHREAD_TASK_NAME_DEFAULT="pthread"

https://github.com/simon987/sist2
- src/tpool.c:4 #include <pthread.h>
- src/util.h:104 #define pthread_cond_timedwait_ms(cond, mutex, delay_ms) do {\
- src/database/database.h:60     pthread_mutex_t mutex;
- CMakeLists.txt:155         pthread
- README.md:211     vcpkg install openblas curl[core,openssl] sqlite3[core,fts5] cpp-jwt pcre cjson brotli libarchive[core,bzip2,libxml2,lz4,lzma,lzo] pthread tesseract libxml2 libmupdf[ocr] gtest mongoose libmagic libraw gumbo ffmpeg[core,avcodec,avformat,swscale,swresample,webp,opus,mp3lame,vpx,zlib]

https://github.com/nongiach/sudo_inject
- extra_tools/doc.txt:18 gcc -o tsdump tsdump.o sudoers_debug.o locale.o -Wl,-z -Wl,relro -fPIE -pie -fstack-protector-strong  ../../lib/util/.libs/libsudo_util.a -lpthread -static

https://github.com/opuntiaOS-Project/opuntiaOS
- libs/libc/pthread/pthread.c:1 #include <pthread.h>
- libs/libc/include/pthread.h:11 int pthread_create(void* func);
- libs/libc/LIBC_SOURCES.gni:18   "pthread/pthread.c",
- userland/shell/onesh/main.c:1 #include <pthread.h>

https://github.com/SuperIlu/DOjS
- Makefile.linux:53 LIBS     = -lalleg -lloadpng -ljpgalleg -lmujs -lm -lz -lpthread -lm -lpthread -lrt -lXpm -lX11 -lXext -lXxf86vm -lXcursor -lXcursor -lasound -lpng -lcurl -lGL -lGLU -lglut -lGLEW -lglfw -lwebp -lsharpyuv

https://github.com/ldarren/QuickJS
- quickjs-libc.c:66 #include <pthread.h>
- Makefile:173 HOST_LIBS=-lm -ldl -lpthread
- qjsc.c:454     *arg++ = "-lpthread";
- run-test262.c:422 #include <pthread.h>

https://github.com/bsauce/kernel-security-learning
- CVE/4-20-BPF-interger-overflow/exp.c:1 //$ gcc -O3 -pthread -static -g -masm=intel ./exp.c -o exp

https://github.com/threatland/TL-BOTS
- TL.P2P/P2P.Demon/NSA.22f38a.py:68     run("./"+cc+"/bin/"+arch+"-gcc -static -lpthread -pthread -D" + arch.upper() + " -o " + compiles[num] + " " + bot + " > /dev/null")
- TL.P2P/P2P.Venom/venom.93a229.c:12 #include <pthread.h>
- TL.TOOLS/TOOLS.Tutorials/qbot_cnc_setup.txt:12 gcc -o reaper reaper.c -pthread
- TL.IRC/IRC.ZBOT/zbot-build.3d3d54.sh:117 ./cross-compiler-mipsel/bin/mipsel-gcc -static -lpthread -pthread -DMIPSEL -o $L1 $1 > /dev/null 2>&1
- TL.P2P/P2P.Zekrom/Zekrom.49a9dd.c:27 #include <pthread.h>

https://github.com/bluez/bluez
- android/hal-ipc.c:7 #include <pthread.h>
- android/client/if-sco.c:8 #include <pthread.h>
- android/Makefile.am:145 android_haltest_LDFLAGS = $(AM_LDFLAGS) -pthread
- android/hal-sco.c:9 #include <pthread.h>
- configure.ac:67 AC_CHECK_LIB(pthread, pthread_create, dummy=yes,

https://github.com/ufbx/ufbx
- test/runner.c:39 		#include <pthread.h>
- misc/run_tests.py:399             args.append("-pthread")
- examples/viewer/external/dummy_sokol_app.h:68     - on Linux: X11, Xi, Xcursor, GL, dl, pthread, m(?)
- .github/workflows/ci.yml:320           g++ -Wall -Wextra -Werror -Wno-unused-function -pthread -std=c++11 build/ufbx-c11.o test/threadcheck.cpp -lm -o build/threadcheck-c11

https://github.com/SebKrantz/collapse
- misc/legacy/sorted out 1.0.0 - 1.1.0/data.table_openmp-utils.c:3 #include <pthread.h>

https://github.com/theduke/quickjs-rs
- libquickjs-sys/embed/quickjs/quickjs-libc.c:66 #include <pthread.h>
- libquickjs-sys/embed/quickjs/Makefile:177 HOST_LIBS=-lm -ldl -lpthread
- libquickjs-sys/embed/quickjs/qjsc.c:454     *arg++ = "-lpthread";

https://github.com/debian-calibre/html5-parser
- unix_build.py:160     cflags.append('-pthread')

https://github.com/tkestack/vcuda-controller
- src/hijack_call.c:21 #include <pthread.h>
- src/loader.c:24 #include <pthread.h>
- CMakeLists.txt:53     target_link_libraries(nvml-monitor ${STATIC_C_LIBRARIES} -ldl -lpthread)
- src/nvml_entry.c:22 #include <pthread.h>

https://github.com/gregkh/linux
- tools/mm/Makefile:11 CFLAGS += -Wall -Wextra -I../lib/ -pthread
- Documentation/block/ublk.rst:119   pthread & io_uring for handling ublk IO), this command is sent to the
- tools/perf/ui/ui.h:34 void pthread__block_sigwinch(void);
- tools/usb/testusb.c:2 /* $(CROSS_COMPILE)cc -Wall -Wextra -g -lpthread -o testusb testusb.c */
- Documentation/locking/rt-mutex.rst:6 which enable pthread_mutex_t priority inheritance attributes

https://github.com/jakeajames/rootlessJB3
- rootlessJB/libs/IOKit.tbd:757                        _getEffectivePageSize, _hid_dispatch_pthread_root_queue_create, 
- rootlessJB/exploit/v3ntex/exploit.m:23 #include <pthread/pthread.h>
- rootlessJB/exploit/voucher_swap/kernel_alloc.c:9 #include <pthread.h>
- rootlessJB/payloads_source/pspawn_payload/launchd_payload.m:16 #include <pthread.h>
- rootlessJB/payloads_source/TweakInject/TweakInject.xm:6 #import <pthread.h>

https://github.com/8bitbubsy/pt2-clone
- vs2019_project/pt2-clone/sdl/include/SDL2/SDL_hints.h:1562 *  apply a thread priority.  For example on systems using pthreads the scheduler policy
- release/macos/pt2-clone-macos.app/Contents/Frameworks/SDL2.framework/Versions/A/Headers/SDL_hints.h:1562 *  apply a thread priority.  For example on systems using pthreads the scheduler policy
- pt_pal_editor/release/macos/pt_pal_editor-macos.app/Contents/Frameworks/SDL2.framework/Versions/A/Headers/SDL_hints.h:1542 *  apply a thread priority.  For example on systems using pthreads the scheduler policy

https://github.com/cyberbotics/webots_ros2
- webots_ros2_driver/webots/include/plugins/physics.h:20 #include <pthread.h>
- webots_ros2_driver/webots/src/controller/c/robot.c:71 #include <pthread.h>
- webots_ros2_driver/webots/src/controller/c/Makefile:57 SHARED_LIBS = -lm -lpthread -ldl -lrt

https://github.com/Jean-MarcHarvengt/MCUME
- MCUME_esp32/esp81/sdkconfig:613 CONFIG_ESP32_PTHREAD_TASK_NAME_DEFAULT="pthread"
- MCUME_teensy41/teensyuae/custom.c:4545     /* ??? does libpthread do that for us? */
- MCUME_esp32/esp8086/sdkconfig:655 CONFIG_ESP32_PTHREAD_TASK_NAME_DEFAULT="pthread"
- MCUME_esp32/espboot/sdkconfig:613 CONFIG_ESP32_PTHREAD_TASK_NAME_DEFAULT="pthread"
- MCUME_esp32/espboot/sdkconfig.old:612 CONFIG_ESP32_PTHREAD_TASK_NAME_DEFAULT="pthread"

https://github.com/aros-development-team/AROS
- compiler/pthread/pthread.h:56 // POSIX pthread types
- compiler/pthread/pthread.conf:9 #include <pthread.h>
- compiler/pthread/pthread.c:34 #include "pthread_intern.h"
- compiler/pthread/pthread_exit.c:21 #include "pthread_intern.h"
- compiler/pthread/pthread_intern.h:34 #include "pthread.h"

https://github.com/notrynohigh/BabyOS
- test/port.c:12 #include <pthread.h>
- test/kv/Makefile:121 LDFLAGS = -T$(LDSCRIPT) -lpthread
- test/utc/Makefile:120 LDFLAGS = -T$(LDSCRIPT) -lpthread
- test/task/Makefile:121 LDFLAGS = -T$(LDSCRIPT) -lpthread
- test/qrcode/Makefile:122 LDFLAGS = -T$(LDSCRIPT) -lpthread

https://github.com/bannedbook/v2ray.vpn
- core/src/main/jni/libevent/m4/acx_pthread.m4:1 ##### http://autoconf-archive.cryp.to/acx_pthread.html
- core/src/main/jni/libevent/evthread_pthread.c:32 #include <pthread.h>
- core/src/main/jni/libsodium/m4/ax_pthread.m4:2 #        https://www.gnu.org/software/autoconf-archive/ax_pthread.html
- core/src/main/jni/mbedtls/programs/ssl/ssl_pthread_server.c:2  *  SSL server demonstration program using pthread for handling multiple
- core/src/main/jni/libevent/libevent_pthreads.pc.in:8 Name: libevent_pthreads

https://github.com/marek-simonik/record3d
- libs/win/libusbmuxd/src/thread.c:37 	int res = pthread_create(thread, NULL, thread_func, data);
- libs/unix/libusbmuxd/CMakeLists.txt:35     target_link_libraries(usbmuxd pthread)
- libs/unix/libusbmuxd/src/thread.h:39 #include <pthread.h>
- libs/win/libusbmuxd/libs/libplist/src/plist.c:35 #include <pthread.h>
- python-bindings/pybind11/include/pybind11/detail/internals.h:194         // PyThread_tss_delete just calls TlsFree (on Windows) or pthread_key_delete (on *NIX).

https://github.com/noxworld-dev/opennox
- docs/build-windows.md:117    - `libwinpthread-1.dll`

https://github.com/zkwlx/ADI
- adi_lib/adi/src/main/cpp/clooper/looper.h:8 #include <pthread.h>
- adi_lib/adi/src/main/cpp/clooper/looper.c:53         pthread_mutex_lock(&(looper->queue_mutex));
- adi_lib/adi/src/main/cpp/handler/VMObjectAllocHandler.cpp:50 static pthread_mutex_t mtx = PTHREAD_MUTEX_INITIALIZER;
- adi_lib/matrix-io-canary/src/main/cpp/libxhook/xh_core.c:30 #include <pthread.h>
- adi_lib/adi/src/main/cpp/handler/MonitorContendedHandler.cpp:6 #include <pthread.h>

https://github.com/jwcpp/jwEngine
- premake/premake.lua:122 	linkoptions {"-pthread"}
- src/common/Tools.cpp:52 	return pthread_self();
- dependencies/libuv/src/unix/pthread-fixes.c:32 /* Android versions < 4.1 have a broken pthread_sigmask. */
- dependencies/mysql/thr_cond.h:26        Other OSes - pthread
- dependencies/mysql/my_thread.h:24 #include <pthread.h>

https://github.com/sld-columbia/esp
- soft/common/drivers/linux/libesp/libesp.c:97 	pthread_t *threads = malloc(nacc * sizeof(pthread_t));
- soft/common/drivers/linux/include/libesp.h:11 #include <pthread.h>
- tools/mmi64/mmi64.c:13 #include <pthread.h>
- soft/common/drivers/linux/contig_alloc/lib.c:19 #include <pthread.h>
- accelerators/catapult_hls/common/systemc.mk:63 LDFLAGS += -lpthread

https://github.com/MaJerle/lwmem
- examples/lib/FreeRTOS/CMSIS_RTOS_V2/cmsis_os.h:175 typedef void (*os_pthread) (void const *argument);

https://github.com/alexpevzner/sane-airscan
- airscan-os.c:13 #include <pthread.h>
- airscan-log.c:21 static pthread_mutex_t log_mutex = PTHREAD_MUTEX_INITIALIZER;
- Makefile:32 CFLAGS		+= -O2 -g -W -Wall -Werror -pthread $(CPPFLAGS)
- airscan-eloop.c:22 static pthread_t eloop_thread;
- airscan-zeroconf.c:47 static pthread_cond_t zeroconf_initscan_cond;

https://github.com/evansun922/nginx-quic
- README.md:54                                     # dynamic library: pthread or static library: /path/xxx.a
- mk2gn.py:162                         if item in ("-ldl","-lpthread","-lm"):
- README-CN.md:52                                     # dynamic library: pthread or static library: /path/xxx.a

https://github.com/netdiscover-scanner/netdiscover
- src/main.c:34 #include <pthread.h>
- src/screen.c:37 #include <pthread.h>
- src/ifaces.c:142      pthread_mutex_lock(data_access);
- src/data_al.h:31 #include <pthread.h>
- src/data_unique.c:32 #include <pthread.h>

https://github.com/ArduCAM/MIPI_Camera
- RPI/opencvGui.cpp:14 #include <pthread.h>
- RPI/arducamstill.c:9 #include <pthread.h>
- RPI/Makefile:14 LIBS	:= -larducam_mipicamera -lpthread #-lwiringPi

https://github.com/puppet-meteor/MOpt-AFL
- MOpt/qemu_mode/patches/afl-qemu-cpu-inl.h:151   /* pthread_atfork() seems somewhat broken in util/rcu.c, and I'm
- seed sets/100 seeds/objdump_seed/nspr-config:145       echo $libdirs -lpthread -ldl 
- MOpt/docs/status_screen.txt:335       ./configure options include --without-threads, --disable-pthreads, or
- MOpt/docs/ChangeLog:53   - Addressed a libtokencap / pthreads incompatibility issue. Likewise, spotted
- seed sets/100 seeds/objdump_seed/x86_64-linux-gnu-python2.7-config:39 LIBS="-lpython${VERSION}${ABIFLAGS} -lpthread -ldl  -lutil $SYSLIBS"

https://github.com/wolfpld/etcpak
- System.cpp:5 #  include <pthread.h>
- TaskDispatch.cpp:27             pthread_setname_np( tmp );
- unix/build.mk:5 LIBS := -lpthread

https://github.com/xerub/acorn
- rope5.c:34 extern pthread_get_stackaddr_np;
- stage6.js:342 var pthread_yield_np_ptr = dlsym("pthread_yield_np\x00");

https://github.com/shonm520/mu_event
- src/servermanager.c:2 #include <pthread.h>
- src/makefile:6 CFLAGS := -g -lpthread 
- src/example/echo/run.sh:3 gcc -o echosvr *.c ../../*.c -lpthread -g -I ../../ 
- src/example/timer/run.sh:4 gcc -o test_timer test_timer.c ../../*.c -lpthread  -g -I ../../ 

https://github.com/dagargo/elektroid
- test/Makefile.am:21 tests_scala_CFLAGS = -I$(top_srcdir)/src `$(PKG_CONFIG) --cflags $(tests_scala_LIBS)` -pthread

https://github.com/jamriska/styleblit
- glfw3/src/posix_thread.c:42     if (pthread_key_create(&tls->posix.key, NULL) != 0)
- glfw3/src/posix_thread.h:28 #include <pthread.h>

https://github.com/eliemichel/OpenMfxForBlender
- build_files/build_environment/cmake/pthreads.cmake:11     set(PTHREADS_BUILD cd ${BUILD_DIR}/pthreads/src/external_pthreads/ && cd && nmake VC-static /e CPPFLAGS=${PTHREAD_CPPFLAGS})
- intern/clog/clog.c:15  * to avoid having to link with pthreads. */
- intern/cycles/util/thread.h:16 #  include <pthread.h>
- source/creator/symbols_unix.map:36   pthread_*;
- intern/cycles/util/thread.cpp:17   pthread_attr_t attribute;

https://github.com/scandum/tintin
- src/config.h.in:52 /* Define to 1 if you have the `pthread' library (-lpthread). */
- src/configure.in:69 AC_CHECK_HEADERS([arpa/inet.h ctype.h fcntl.h net/errno.h netdb.h netinet/in.h param.h pthread.h socks.h stdlib.h string.h strings.h sys/ioctl.h sys/param.h sys/ptem.h sys/socket.h sys/termio.h sys/time.h time.h unistd.h util.h pty.h stropts.h]) 
- src/chat.c:37 	#include <pthread.h>
- mods/igr.mods:3134 chat.c         Configure now detects a missing pthread library.
- src/configure:3412 for ac_header in arpa/inet.h ctype.h fcntl.h net/errno.h netdb.h netinet/in.h param.h pthread.h socks.h stdlib.h string.h strings.h sys/ioctl.h sys/param.h sys/ptem.h sys/socket.h sys/termio.h sys/time.h time.h unistd.h util.h pty.h stropts.h

https://github.com/MolotovCherry/Android-ImageMagick7
- liblcms2-2.9/m4/acx_pthread.m4:1 ##### http://autoconf-archive.cryp.to/acx_pthread.html
- xz-5.2.4/config.h:193 /* Define to 1 if you have the `pthread_condattr_setclock' function. */
- xz-5.2.4/Makefile.in:96 	$(top_srcdir)/m4/ax_pthread.m4 $(top_srcdir)/m4/getopt.m4 \
- xz-5.2.4/common/mythread.h:100 // Using pthreads //
- libxml2-2.9.9/testThreads.c:12 #include <pthread.h>

https://github.com/xyzmos/GeekDNS
- Docker/data/unbound/ax_pthread.m4:2 #        http://www.gnu.org/software/autoconf-archive/ax_pthread.html
- Docker/data/unbound/util/locks.h:42  * If pthreads is available, these are used.
- Docker/data/unbound/util/locks.c:60 	if((err=pthread_sigmask(SIG_SETMASK, &sigset, NULL)))
- Docker/data/unbound/testcode/checklocks.h:69 #error "Need pthreads for checked locks"
- Docker/data/unbound/config.h.in:416 /* Define to 1 if the system has the type `pthread_rwlock_t'. */

https://github.com/nptcl/npt
- src/thread.h:95 	pthread_mutex_init((mutex), NULL)
- configure.ac:24 AC_CHECK_LIB([pthread], [pthread_create], [lisp_thread=yes], [lisp_thread=no])
- src/thread_unix.h:50 	if (pthread_create(&arg->handle, NULL, start_routine, (void *)arg)) {
- src/typedef_thread.h:19 /* pthread mode */
- develop/amalgamation/amalgamation.lisp:22     "dirent.h" "dlfcn.h" "fcntl.h" "pthread.h" "pwd.h" "semaphore.h" "sys/ioctl.h"

https://github.com/jrincayc/ucblogo-code
- makefile.msys:78 	cp $(MINGW_BIN_DIR)/libgcc_s_dw2-1.dll $(MINGW_BIN_DIR)/libstdc++-6.dll $(MINGW_BIN_DIR)/libwinpthread-1.dll $(BINDIR)/

https://github.com/system76/coreboot
- util/lint/spelling.txt:7073 pthreds||pthreads

https://github.com/rtrussell/BBCSDL
- bin/wasm/makefile:6       -I . -I ../BBCSDL/include -Wall -Wno-pthreads-mem-growth
- src/bbccon.c:40 #include <pthread.h>
- bin/rpi64/makefile:12 CXX = gcc -Wall -pthread -I ../../include
- console/rpi64/makefile:34 	$(CXX) $(OBJ) -L . -L/usr/lib/ -ldl -lm -lrt -pthread \
- bin/linux/makefile:14 CXX = gcc -Wall -pthread -I ../../include

https://github.com/quadule/knobby
- sdkconfig.defaults:1180 CONFIG_PTHREAD_TASK_NAME_DEFAULT="pthread"

https://github.com/divonlan/genozip
- src/mutex.h:11 #include <pthread.h>
- src/mutex.c:30         int ret = pthread_mutex_init (&mutex->mutex, 0); 
- src/threads.c:10 #include <pthread.h>
- src/threads.h:21 extern pthread_t main_thread;
- src/version.c:9 #include <pthread.h>

https://github.com/NathanReeves/BlueCubeMod
- Firmware/BlueCubeMod/sdkconfig:473 CONFIG_ESP32_PTHREAD_TASK_NAME_DEFAULT="pthread"
- Firmware/BlueCubeModv2/sdkconfig:1326 CONFIG_PTHREAD_TASK_NAME_DEFAULT="pthread"

https://github.com/nextepc/nextepc
- lib/fd/fd_logger.c:10 static pthread_mutex_t mtx = PTHREAD_MUTEX_INITIALIZER;
- lib/fd/fd_logger.h:30     pthread_mutex_t stats_lock;
- lib/ipfw/missing.h:123 #include <pthread.h>
- configure.ac:227     pthread.h \
- lib/core/src/unix/cond.c:30     pthread_cond_t cond;

https://github.com/AlexGyver/GyverCore
- GyverCore/tools/avr-gcc/share/info/cpp.info:3979 '-pthread'
- GyverCore/tools/avr-gcc/share/man/man1/avr-cpp.1:280 .IP "\fB\-pthread\fR" 4
- GyverCore/tools/avr-gcc/share/info/gccinstall.info:859           aix64, pthread, softfloat, powercpu, powerpccpu, powerpcos,

https://github.com/jonathanmetzman/wasm-fuzzing-demo
- crash/crash.js:177 // Note that this includes Node.js workers when relevant (pthreads is enabled).
- sqlite/sqlite.js:177 // Note that this includes Node.js workers when relevant (pthreads is enabled).
- lzma/7z_fuzzer.js:177 // Note that this includes Node.js workers when relevant (pthreads is enabled).
- lzma/xzdec_fuzzer.js:177 // Note that this includes Node.js workers when relevant (pthreads is enabled).
- lzma/xzenc_fuzzer.js:177 // Note that this includes Node.js workers when relevant (pthreads is enabled).

https://github.com/iotivity/iotivity-lite
- apps/simpleclient.c:23 #include <pthread.h>
- api/unittest/maintest.cpp:36 #include <pthread.h>
- port/linux/tcpcontext.c:20 #include <pthread.h>
- port/android/ipcontext.h:23 #include <pthread.h>
- port/linux/iotivity-lite-client.pc.in:24 Libs.private: -lm -pthread

https://github.com/robertobucher/pysimCoder
- CodeGen/src/nuttx_main.c:9 #include <pthread.h>
- CodeGen/Common/posix/TCPdqf.h:42   pthread_mutex_t tcp_lock;
- CodeGen/nuttx/devices/sensors/nuttxDHTXX.c:32 static pthread_t  rt_rcv;
- CodeGen/Common/AR2INO/ar2inoSetup.c:26 #include <pthread.h>
- CodeGen/templates/rt_mz_apo.tmf:45 	$(CC) -o $@  $(OBJSSTAN) $(LIB) -lrt -lpthread -lm

https://github.com/r00tk1ts/apue
- src/11_Threads/rwlock.c:10 #include <pthread.h>
- src/11_Threads/Makefile:2 EXTRALIBS=-pthread
- src/13_Daemons/reread.c:2  * @file SIGHUP处理-pthread版本
- src/11_Threads/mutex2.c:10 #include <pthread.h>
- src/11_Threads/mutex1.c:10 #include <pthread.h>

https://github.com/vanhoefm/dragonslayer
- wpa_supplicant/Makefile:989 # -lpthread may not be needed depending on how pcsc-lite was configured
- wpa_supplicant/Android.mk:949 # -lpthread may not be needed depending on how pcsc-lite was configured

https://github.com/janet-lang/jaylib
- project.janet:22     :macos '["-lpthread" "-framework" "Cocoa" "-framework" "CoreVideo" "-framework" "IOKit" "-framework" "OpenGL"]

https://github.com/SmartThingsCommunity/st-device-sdk-c
- src/port/bsp/linux/CMakeLists.txt:19 target_link_libraries(iotcore PUBLIC pthread rt ${GIO2_LIBRARIES} ${GLIB2_LIBRARIES})
- src/port/os/tizenrt/event_groups.c:62 #include <pthread.h>
- src/port/os/posix/iot_os_util_posix.c:22 #include <pthread.h>
- src/port/os/tizenrt/iot_os_util_tizenrt.c:30 #include <pthread.h>
- example/esp32/sdkconfig:1324 CONFIG_PTHREAD_TASK_NAME_DEFAULT="pthread"

https://github.com/myhighland/ShadowCoel
- Library/libmaxminddb/t/Makefile.am:23 threads_t_CFLAGS = $(CFLAGS) -pthread
- Library/libmaxminddb/t/threads_t.c:2 #include <pthread.h>
- Library/libmaxminddb/xcode/config.h:146    <pthread.h>, or <semaphore.h> is not used. If the typedef were allowed, the
- Library/ShadowPath/ShadowPath/Privoxy/jcc.h:66 #include <pthread.h>
- Library/ShadowPath/ShadowPath/Antinat/client/an_core.m:13 #include <pthread.h>

https://github.com/nikhilroxtomar/Chatroom-in-C
- Makefile:2 	gcc -Wall -g3 -fsanitize=address -pthread server.c -o server
- client.c:10 #include <pthread.h>
- server.c:9 #include <pthread.h>

https://github.com/JeffyCN/meta-rockchip
- recipes-benchmark/glmark2/glmark2_%.bbappend:5 LDFLAGS:append = " -pthread"
- recipes-multimedia/v4l2apps/v4l-utils/0001-libv4l2-Support-mmap-to-libv4l-plugin.patch:34 +		pthread_mutex_lock(&devices[index].stream_lock);
- recipes-multimedia/v4l2apps/v4l-utils/0003-libv4l-Support-V4L2_MEMORY_DMABUF.patch:79  		pthread_mutex_lock(&devices[index].stream_lock);
- recipes-multimedia/v4l2apps/v4l-utils/0005-Support-builtin-v4l-plugins.patch:102  libv4l_mplane_la_LDFLAGS = -avoid-version -module -shared -export-dynamic -lpthread

https://github.com/fatgrass/OsirisJailbreak12
- osirisJB12/Osiris/Kern Utils/kexecute.c:1 #include <pthread.h>
- osirisJB12/Osiris/exploit/voucher_swap/kernel_alloc.c:9 #include <pthread.h>

https://github.com/arsitektur-jaringan-komputer/Modul-Sisop
- Modul3/playthread.c:3 #include<pthread.h>
- Modul3/README - English.md:41 #include <pthread.h> //library thread
- Modul3/thread_join.c:3 #include <pthread.h> //library thread
- Modul3/README.md:79 #include <pthread.h> //library thread
- Modul3/threadmutex.c:3 #include<pthread.h>

https://github.com/balloonwj/WebSocketServer
- base/Singleton.h:9 		//pthread_once(&ponce_, &Singleton::init);

https://github.com/fengjixuchui/vm-escape
- qemu-escape/cve-2019-6778/exp.c:172             lock = pthread_mutex_t = {
- qemu-escape/cve-2015-5165_and_cve-2015-7504/exp/cve-2015-7504.c:41 #include <pthread.h>

https://github.com/STMicroelectronics/STM32CubeL0
- Drivers/CMSIS/docs/RTOS/html/search/all_9.js:5   ['pthread',['pthread',['../cmsis__os_8h.html#ad3c9624ee214329fb34e71f544a6933e',1,'osThreadDef_t']]],
- Drivers/CMSIS/docs/RTOS/html/structosThreadDef__t.js:4     [ "pthread", "structosThreadDef__t.html#ad3c9624ee214329fb34e71f544a6933e", null ],
- Drivers/CMSIS/docs/RTOS/html/cmsis__os_8h_structosThreadDef__t.js:4     [ "pthread", "cmsis__os_8h.html#ad3c9624ee214329fb34e71f544a6933e", null ],
- Drivers/CMSIS/RTOS2/Template/cmsis_os.h:189 typedef void (*os_pthread) (void const *argument);
- Drivers/CMSIS/docs/RTOS/html/structosThreadDef__t.html:129 <tr class="memitem:ad3c9624ee214329fb34e71f544a6933e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="cmsis__os_8h.html#aee631e5ea1b700fc35695cc7bc574cf7">os_pthread</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structosThreadDef__t.html#ad3c9624ee214329fb34e71f544a6933e">pthread</a></td></tr>

https://github.com/UtsavBalar1231/kernel_xiaomi_raphael
- Documentation/pi-futex.txt:64 locks (such as futex-based pthread mutexes) is priority inheritance:
- tools/perf/perf.h:35 void pthread__unblock_sigwinch(void);
- tools/usb/Makefile:4 PTHREAD_LIBS = -lpthread
- tools/perf/ui/ui.h:5 #include <pthread.h>
- Documentation/robust-futexes.txt:31 process exits prematurely while holding a pthread_mutex_t lock that is

https://github.com/STMicroelectronics/STM32CubeMP1
- Drivers/CMSIS/docs/RTOS/html/search/all_9.js:5   ['pthread',['pthread',['../cmsis__os_8h.html#ad3c9624ee214329fb34e71f544a6933e',1,'osThreadDef_t']]],
- Drivers/CMSIS/docs/RTOS/html/cmsis__os_8h_structosThreadDef__t.js:4     [ "pthread", "cmsis__os_8h.html#ad3c9624ee214329fb34e71f544a6933e", null ],
- Drivers/CMSIS/RTOS2/Template/cmsis_os.h:189 typedef void (*os_pthread) (void const *argument);
- Drivers/CMSIS/docs/RTOS/html/index.doxyidx:50 os_pthread, cmsis__os_8h.html#aee631e5ea1b700fc35695cc7bc574cf7, cmsis_os.h
- Drivers/CMSIS/docs/RTOS/html/functions.html:147 <li>pthread

https://github.com/LineageOS/android_kernel_samsung_universal7580
- Documentation/pi-futex.txt:63 locks (such as futex-based pthread mutexes) is priority inheritance:
- tools/perf/ui/ui.h:4 #include <pthread.h>
- tools/usb/Makefile:4 PTHREAD_LIBS = -lpthread
- Documentation/rt-mutex.txt:5 which enable pthread_mutex_t priority inheritance attributes
- Documentation/robust-futexes.txt:27 process exits prematurely while holding a pthread_mutex_t lock that is

https://github.com/omec-project/ngic-rtc
- interface/zmq/zmqpub.h:24 #include <pthread.h>
- dp/pipeline/epc_arp.c:1537  * Create pthread to read or receive data/events from netlink socket.
- dp/pipeline/epc_packet_framework.c:105 	pthread_t t;
- interface/zmq/zmqsub.h:23 #include <pthread.h>
- cp/nb.c:16 #include <pthread.h>

https://github.com/Embedfire/ebf_6ull_linux
- Documentation/pi-futex.txt:63 locks (such as futex-based pthread mutexes) is priority inheritance:
- tools/perf/perf.h:38 void pthread__unblock_sigwinch(void);
- tools/hv/Makefile:4 PTHREAD_LIBS = -lpthread
- tools/perf/ui/ui.h:4 #include <pthread.h>
- Documentation/robust-futexes.txt:27 process exits prematurely while holding a pthread_mutex_t lock that is

https://github.com/uavs3/uavs3d
- source/CMakeLists.txt:130   file(APPEND "${pc_file}" "Libs: -L\${libdir} -l${LIBNAME} -lm -lpthread\n")
- source/decore/threadpool.c:66     uavs3d_pthread_mutex_destroy(&job->mutex);
- source/decore/threadpool.h:14 #include <pthread.h>
- build/android/ndk/jni/uavs3d_main.mk:2 ### for posix pthread
- source/decore/win32thread.c:23 typedef void (WINAPI *cond_func_t)(uavs3d_pthread_cond_t *cond);

https://github.com/zowe/zss
- c/zssLogging.c:31 #include <pthread.h>
- c/unixFileService.c:17 #include "pthread.h"
- c/serviceUtils.c:28 #include <pthread.h>
- c/storageApiml.c:22 #include <pthread.h>
- c/zosDiscovery.c:28 #include <pthread.h>

https://github.com/zephyrproject-rtos/mbedtls
- programs/ssl/ssl_pthread_server.c:2  *  SSL server demonstration program using pthread for handling multiple
- programs/Makefile:141 APPS +=	ssl/ssl_pthread_server
- programs/README.md:77 * [`ssl/ssl_pthread_server.c`](ssl/ssl_pthread_server.c): a simple HTTPS server using one thread per client to send a fixed response. This program requires the pthread library.
- library/threading.c:65 static void threading_mutex_init_pthread(mbedtls_threading_mutex_t *mutex)
- programs/ssl/CMakeLists.txt:54     add_executable(ssl_pthread_server ssl_pthread_server.c $<TARGET_OBJECTS:mbedtls_test>)

https://github.com/zengwangfa/Underwater-Vehicle
- software/rt-thread-master/components/libc/pthreads/pthread.h:35 typedef rt_thread_t pthread_t;
- software/rt-thread-master/components/libc/pthreads/pthread.c:8  * 2018-01-26     Bernard      Fix pthread_detach issue for a none-joinable
- software/rt-thread-master/components/libc/pthreads/pthread_tls.c:11 #include <pthread.h>
- software/rt-thread-master/components/libc/pthreads/pthread_cond.c:11 #include <pthread.h>
- software/rt-thread-master/components/libc/pthreads/pthread_spin.c:11 #include <pthread.h>

https://github.com/LinuxPerfStudy/LEBench
- TEST_DIR/makefile:2 libs=-pthread -O0
- TEST_DIR/OS_Eval.c:14 #include <pthread.h>

https://github.com/magma/S1APTester
- Trfgen/src/trfgen.c:10 #include <pthread.h>
- TestCntlrApp/src/sec/gnu.h:27 #include <pthread.h>
- TestCntlrApp/src/ssi/mt_ss.h:133 #define SLockId                         pthread_mutex_t
- TestCntlrApp/src/rlog/rl_platform.c:41 #include <pthread.h>
- TestCntlrApp/src/ssi/mt_ss.x:46    pthread_t            tId;

https://github.com/zephyrproject-rtos/hal_ti
- simplelink/source/ti/drivers/net/wifi/porting/cc_pal.c:433 int Mutex_create_handle(pthread_mutex_t *pMutexHandle)
- simplelink/source/ti/drivers/net/wifi/porting/cc_pal.h:54 #include <zephyr/posix/pthread.h>
- simplelink/source/ti/drivers/net/wifi/porting/user.h:948 #define _SlLockObj_t                         pthread_mutex_t 
- simplelink/source/ti/drivers/net/wifi/source/driver.h:463 /* Note: pthread_self() previously declared here */

https://github.com/LineageOS/android_kernel_nokia_sdm660
- Documentation/pi-futex.txt:63 locks (such as futex-based pthread mutexes) is priority inheritance:
- tools/hv/Makefile:4 PTHREAD_LIBS = -lpthread
- tools/perf/perf.h:40 void pthread__unblock_sigwinch(void);
- tools/perf/ui/ui.h:4 #include <pthread.h>
- Documentation/robust-futexes.txt:27 process exits prematurely while holding a pthread_mutex_t lock that is

https://github.com/yundiantech/FFMPEG_DEMO
- source/FFMPEG_Qt/src/compat/atomics/pthread/stdatomic.c:24 #include <pthread.h>
- source/AudioEncode/src/Mutex/Cond.h:4 /// 注意Mingw的话使用的是linux下的api pthread
- source/AudioEncode/src/Mutex/Cond.cpp:9     pthread_mutex_init(&m_mutex, NULL);
- source/AudioEncode/src/Mutex/Mutex.cpp:8     pthread_mutex_init(&mutex, NULL);
- source/FFMPEG_Qt/src/libavutil/thread.h:30 #include <pthread.h>

https://github.com/longnguyen1997/comp_graphics
- assn1/starter1/glfw/src/posix_tls.h:31 #include <pthread.h>
- assn0/starter0/glfw/src/posix_tls.c:37     if (pthread_key_create(&_glfw.posix_tls.context, NULL) != 0)
- assn0/starter0/glfw/deps/tinycthread.c:65   pthread_mutexattr_t attr;
- assn0/starter0/glfw/src/mir_window.c:66     pthread_mutex_lock(&_glfw.mir.event_mutex);
- assn0/starter0/glfw/deps/tinycthread.h:40 * classes, while for other systems, the POSIX threads API (pthread) is used.

https://github.com/flightlessmango/MangoHud
- meson.build:115 dep_pthread = dependency('threads')
- src/meson.build:184     dep_pthread,

https://github.com/zeldaret/oot
- spec:32     include "build/src/libultra/os/stopthread.o"

https://github.com/jdah/minecraft-weekend
- Makefile:16 	LDFLAGS += -ldl -lpthread

https://github.com/arthenica/ffmpeg-kit
- linux/src/fftools_thread_queue.c:65     pthread_mutex_t lock;
- tools/patch/make/rubberband/configure.ac:19 AC_CHECK_HEADERS(pthread.h)
- tools/patch/make/libvpx/configure.sh:1125             # some gcc specific options such as -lm and -lpthread.
- linux/src/fftools_ffmpeg_mux.h:139     pthread_t    thread;
- apple/src/FFmpegKitConfig.h:24 #import <pthread.h>

https://github.com/Lienol/openwrt
- include/site/linux:32 ac_cv_func_pthread_key_delete=yes
- package/network/services/shellsync/Makefile:12   DEPENDS:=+libpthread
- scripts/ext-toolchain.sh:36 	pthread:  libpthread-* libpthread
- package/devel/trace-cmd/patches/100-musl.patch:7 * set pthread affinity using pthread_setaffinity_np after creating the thread
- tools/cmake/patches/120-curl-fix-libressl-linking.patch:31 +  check_library_exists("pthread" pthread_once "" HAVE_PTHREAD)

https://github.com/Perfare/Zygisk-Il2CppDumper
- module/src/main/cpp/xdl/xdl_linker.c:27 #include <pthread.h>
- module/src/main/cpp/xdl/xdl.c:31 #include <pthread.h>
- module/src/main/cpp/xdl/xdl_iterate.c:32 #include <pthread.h>

https://github.com/mgerdes/Open-Golf
- src/common/thread.c:38 #include <pthread.h>
- build/ios/ios.toolchain.cmake:226 set(CMAKE_THREAD_LIBS_INIT "-lpthread")
- src/editor/CMakeLists.txt:23         -lpthread
- src/golf/CMakeLists.txt:50             -lpthread

https://github.com/Lojii/Knot
- TunnelServices/NIOSSL/CNIOBoringSSL/CNIOBoringSSL/crypto/thread_pthread.c:19 #include <pthread.h>
- Lib/AxLogger/AxLogger/SFLoger.swift:70         let threadid = pthread_mach_thread_np(pthread_self())
- TunnelServices/NIO/NIO/NIO/Thread.swift:22 private let sys_pthread_getname_np = CNIOLinux_pthread_getname_np
- TunnelServices/NIO/NIO/NIO/LinuxCPUSet.swift:58                     CNIOLinux_pthread_getaffinity_np(p, MemoryLayout.size(ofValue: cpuset), &cpuset)
- TunnelServices/NIO/CNIOLinux/CNIOLinux/CNIOLinux.h:27 #include <pthread.h>

https://github.com/dog-qiuqiu/MobileNet-Yolo
- src/tag.c:27     pthread_t load_thread;
- CMakeLists.txt:85   set(PThreads_windows_DIR ${CMAKE_CURRENT_LIST_DIR}/3rdparty/pthreads CACHE PATH "Path where pthreads for windows can be located")
- src/data.h:3 #include <pthread.h>
- src/network_kernels.cu:403 pthread_t train_network_in_thread(network net, data d, float *err)
- src/httplib.h:122 #include <pthread.h>

https://github.com/numberwolf/h265web.js
- src/FFmpeg-n4.2.3/libavcodec/pthread_slice.c:29 #include "pthread_internal.h"
- src/FFmpeg-n4.2.3/libavcodec/pthread_frame.c:33 #include "pthread_internal.h"
- src/FFmpeg-n4.2.3/compat/atomics/pthread/stdatomic.c:24 #include <pthread.h>
- src/src-wasm/CMakeLists.txt:64 link_libraries(pthread)
- src/FFmpeg-n4.2.3/libavdevice/decklink_common.h:82     pthread_mutex_t mutex;

https://github.com/TorqueGameEngines/Torque2D
- engine/source/testing/googleTest/m4/acx_pthread.m4:2 #    http://svn.0pointer.de/viewvc/trunk/common/acx_pthread.m4?revision=1277&root=avahi
- engine/source/platformiOS/iOSMutex.mm:23 #include <pthread.h>
- engine/source/platformWin32/winTLS.cc:67 pthread_key_t mThreadKey;
- engine/source/platformOSX/osxMutex.mm:23 #import <pthread.h>
- engine/source/testing/googleTest/README:264 Google Test is thread-safe where the pthread library is available.

https://github.com/dddrrreee/cs140e-20win
- labs/12-fuse/0-examples/examples/fsel.c:22 #include <pthread.h>
- labs/12-fuse/README.md:45    3. Add a `pthread` thread to your FS that will pull output from
- labs/12-fuse/0-examples/fuse-examples/invalidate_path.c:41 #include <pthread.h>
- labs/12-fuse/0-examples/fuse-examples/notify_inval_entry.c:87 #include <pthread.h>
- labs/12-fuse/0-examples/fuse-examples/notify_store_retrieve.c:72 #include <pthread.h>

https://github.com/bsauce/kernel-exploit-factory
- CVE-2016-9793/exp.c:2 // gcc -pthread exploit.c -o exploit
- CVE-2022-0185/exploit/util.h:10 #include <pthread.h>
- CVE-2021-41073/exploit/exploit.c:1 // $ gcc -no-pie -static exploit.c hellofuse.c bpf.c -I./libfuse libfuse3.a -l:liburing.a -o exploit -masm=intel -lpthread
- CVE-2021-4154/exploit/exploit-DirtyCred.c:1 // gcc -static -pthread ./exploit -o ./exploit
- CVE-2017-11176/exp-slab-4119.c:1 // gcc exploit.c -lpthread -static -o exploit

https://github.com/justjake/quickjs-emscripten
- quickjs/quickjs-libc.c:66 #include <pthread.h>
- ts/generated/emscripten-module.WASM_DEBUG_ASYNCIFY.js:223 // Note that this includes Node.js workers when relevant (pthreads is enabled).
- quickjs/release.sh:59 cp $dlldir/libwinpthread-1.dll $outdir
- quickjs/Makefile:177 HOST_LIBS=-lm -ldl -lpthread
- quickjs/qjsc.c:454     *arg++ = "-lpthread";

https://github.com/danoon2/Boxedwine
- lib/sdl2/src/hidapi/m4/ax_pthread.m4:2 #        http://www.gnu.org/software/autoconf-archive/ax_pthread.html
- lib/sdl2/src/thread/pthread/SDL_systls.c:26 #include <pthread.h>
- lib/sdl2/src/thread/pthread/SDL_syscond.c:27 #include <pthread.h>
- lib/sdl2/src/thread/pthread/SDL_sysmutex.c:24 #include <pthread.h>
- lib/sdl2/src/thread/pthread/SDL_systhread.c:25 #include <pthread.h>

https://github.com/TimeToogo/ff-proxy
- src/server.c:10 #include <pthread.h>
- src/server_p.h:1 #include <pthread.h>
- src/hash_table.c:6 #include <pthread.h>
- Makefile:19 SERVER_LIBS=-lm -lssl -lcrypto -lpthread

https://github.com/Echocipher/AUTO-EARN
- tools/masscan/src/pixie-threads.c:10 #include <pthread.h>
- tools/masscan/Makefile:27 LIBS = -lm -lrt -ldl -lpthread

https://github.com/p7zip-project/p7zip
- C/lzham_codec/lzhamcomp/lzham_pthreads_threading.h:1 // File: lzham_task_pool_pthreads.h
- C/lzham_codec/lzhamcomp/lzham_pthreads_threading.cpp:1 // File: lzham_task_pool_pthreads.cpp
- C/Threads.h:21 #include <pthread.h>
- C/Threads.c:197 // _GNU_SOURCE can be required for pthread_setaffinity_np() / CPU_ZERO / CPU_SET
- C/fast-lzma2/Makefile:5 CFLAGS:=-Wall -O2 -pthread -fPIC

https://github.com/ultravnc/UltraVNC
- xz/config.h.in:209 /* Define to 1 if you have the `pthread_condattr_setclock' function. */
- udt4/src/api.h:80    pthread_cond_t m_AcceptCond;              // used to block "accept" call
- xz/src/Makefile.in:96 	$(top_srcdir)/m4/ax_pthread.m4 $(top_srcdir)/m4/getopt.m4 \
- udt4/src/queue.h:211    pthread_mutex_t m_ListLock;
- zstd/lib/common/pool.c:26 #include "threading.h"   /* pthread adaptation */

https://github.com/vial-kb/vial-qmk
- builddefs/build_test.mk:35 LDFLAGS += -lstdc++ -lpthread -shared-libgcc

https://github.com/openmiko/openmiko
- custompackages/package/ingenic_samples/libimp-samples/sample-OSD.c:7 #include <pthread.h>
- custompackages/package/ingenic_samples/libimp-samples/sample-Setfps.c:89 	pthread_t tid; /* Stream capture in another thread */
- custompackages/package/ingenic_samples/libimp-samples/sample-Change-Resolution.c:53 	pthread_t stream_tid[] = {-1, -1};
- custompackages/package/ingenic_samples/libimp-samples/sample-Encoder-h264-IVS-move.c:200 static int sample_ivs_move_get_result_start(int chn_num, pthread_t *ptid)
- custompackages/package/ingenic_samples/include/imp/imp_common.h:11 #include <pthread.h>

https://github.com/inclavare-containers/inclavare-containers
- rune/libenclave/internal/runtime/pal/kvmtool/term.c:24 static pthread_t term_poll_thread;
- rune/libenclave/internal/runtime/pal/kvmtool/libvmm.c:2 #include <pthread.h>
- rune/libenclave/internal/runtime/pal/kvmtool/kvm-cpu.c:129 			pthread_kill(kvm->cpus[i]->thread, SIGKVMTASK);
- rune/libenclave/internal/runtime/pal/kvmtool/net/uip/buf.c:14 		pthread_cond_wait(&info->buf_used_cond, &info->buf_lock.mutex);
- rune/libenclave/internal/runtime/pal/kvmtool/include/kvm/uip.h:194 	pthread_cond_t buf_free_cond;

https://github.com/lcodecorex/KeepAlive
- library/src/main/cpp/include/libc/pthread.h:49 } pthread_mutex_t;
- library/src/main/cpp/include/utils/Mutex.h:25 # include <pthread.h>
- library/src/main/cpp/include/utils/RWLock.h:24 # include <pthread.h>
- library/src/main/cpp/include/cutils/threads.h:34 #include  <pthread.h>
- library/src/main/cpp/include/libc/sys/types.h:107  * declare then in <pthread.h> instead */

https://github.com/scriptiot/evm
- modules/iotjs/linux/evm_main.c:334     pthread_t pid;
- modules/iotjs/linux/evm_module_net.c:3 #include <pthread.h>
- bsp/linux/app/app.pro:180     ../../../components/micropython/py/mpthread.h \
- bsp/rt-thread/qemu-vexpress-a9/.cproject:81 									<listOptionValue builtIn="false" value="&quot;${workspace_loc:/${ProjName}/rt-thread/components/libc/pthreads}&quot;"/>
- modules/iotjs/linux/evm_module_http.c:4 #include <pthread.h>

https://github.com/sharandac/My-TTGO-Watch
- src/hardware/hardware.cpp:54     #include <pthread.h>

https://github.com/datoviz/datoviz
- src/fifo.c:19     if (pthread_mutex_init(&fifo.lock, NULL) != 0)
- src/common.c:272     if (pthread_create(&thread.thread, NULL, callback, user_data) != 0)
- include/datoviz/fifo.h:50     pthread_mutex_t lock;
- CMakeLists.txt:213 set(LINK_LIBS m glfw cglm pthread)
- include/datoviz/common.h:24 #include <pthread.h>

https://github.com/snowcone-ltd/libmatoya
- src/unix/rwlock.h:9 #include <pthread.h>
- src/unix/thread.c:14 #include <pthread.h>
- src/unix/linux/rwlockattr.h:9 #include <pthread.h>
- GNUmakefile:103 	-pthread
- src/thread.c:5 #define _DEFAULT_SOURCE // pthread_rwlock_t

https://github.com/C-Chads/tinygl
- include-demo/lockstepthread.h:12 #include <pthread.h>

https://github.com/yangkun19921001/AVSample
- camera_recorder/src/main/cpp/audio_packet_queue.h:4 #include <pthread.h>
- camera_recorder/src/main/cpp/audio_packet_queue.cpp:18 	int initLockCode = pthread_mutex_init(&mLock, NULL);
- build_static_lib/ffmpeg/arm64-v8a/lib/pkgconfig/libavcodec.pc:12 Libs: -L${libdir}  -lavcodec -lx264 -lfdk-aac -lm -lz -pthread -pthread
- camera_recorder/src/main/cpp/AVPacketPool.h:56     pthread_rwlock_t mRwlock;
- build_static_lib/ffmpeg/arm64-v8a/lib/pkgconfig/libavfilter.pc:12 Libs: -L${libdir}  -lavfilter -lx264 -lfdk-aac -lm -lz -pthread -pthread

https://github.com/QuantumLeaps/modern-embedded-programming-course
- lesson-40/tm4c123-qpc-keil/TimeBomb.qm:350 LIBS += -lpthread
- lesson-34/tm4c123-uc_ao-keil/TimeBomb.qm:313 LIBS += -lpthread
- lesson-38/tm4c123-uc_ao-keil/TimeBomb.qm:325 LIBS += -lpthread
- lesson-40/tm4c123-uc_ao-keil/TimeBomb.qm:350 LIBS += -lpthread
- lesson-35/tm4c123-uc_ao-keil/TimeBomb.qm:313 LIBS += -lpthread

https://github.com/n64decomp/007
- tools/extractor/main.c:4 #include <pthread.h>
- tools/Makefile:16 	$(CXX) $(CXXFLAGS) -fno-exceptions -fno-rtti -pipe $^ -o $@ -lpthread $(ARMIPS_FLAGS)
- tools/extractor/makefile:15 LIBS = -lpthread
- ld/lib.bss.ld.inc:55       build/OUTCODE/src/libultra/os/stopthread.o (.bss);
- ld/lib.text.ld.inc:56       build/OUTCODE/src/libultra/os/stopthread.o (.text);

https://github.com/openeuler-mirror/iSulad
- cmake/set_build_flags.cmake:18 set(CMAKE_SHARED_LINKER_FLAGS "-Wl,-E -Wl,-z,relro -Wl,-z,now -Wl,-z,noexecstack -Wtrampolines -shared -pthread")
- src/cmd/isulad-shim/process.h:19 #include <pthread.h>
- src/utils/cutils/util_atomic.c:17 pthread_mutex_t g_atomic_lock = PTHREAD_MUTEX_INITIALIZER;
- src/daemon/entry/cri/network_plugin.h:165         int ret = pthread_mutex_lock(&m_mu);
- src/daemon/modules/container/container_gc/containers_gc.c:47     if (pthread_mutex_lock(&(g_gc_containers.mutex)) != 0) {

https://github.com/baulk/baulk
- lib/archive/zstd/common/pool.c:26 #include "threading.h"   /* pthread adaptation */
- lib/archive/zlib/cpu_features.c:39 #include <pthread.h>
- lib/archive/zstd/README.md:26 - for POSIX systems : compile with pthread (`-pthread` compilation flag for `gcc`)
- lib/archive/zstd/common/threading.h:49 #define ZSTD_pthread_mutex_t           CRITICAL_SECTION
- lib/archive/xz/src/liblzma/api/Makefile.in:94 	$(top_srcdir)/m4/ax_pthread.m4 $(top_srcdir)/m4/getopt.m4 \

https://github.com/chjj/liburkel
- src/io_posix.c:75 #include <pthread.h>
- CMakeLists.txt:133     message(FATAL_ERROR "pthread not found")

https://github.com/nakst/luigi
- experimental/luigi_multithreaded.h:21 #include <pthread.h>

https://github.com/michaelrsweet/pappl
- configure.ac:137 AC_CHECK_HEADER([pthread.h])
- pappl/base-private.h:41 #    define _papplRWLockRead(obj) fprintf(stderr, "%p/%s: rdlock %p(%s)\n", (void *)pthread_self(), __func__, (void *)obj, obj->name), cupsRWLockRead(&obj->rwlock)
- pappl/system-status-macos.m:27   pthread_rwlock_t	rwlock;		// Reader/writer lock
- pappl/printer-usb.c:63   pthread_mutex_t mutex;		// Mutex for accessing socket
- testsuite/testpappl.c:211   pthread_t		sysid;		// System thread ID

https://github.com/kdrag0n/proton-clang
- lib/cmake/llvm/LLVMConfig.cmake:174 if (NOT "-lpthread" STREQUAL "")
- lib/clang/13.0.0/lib/linux/libclang_rt.hwasan-x86_64.a.syms:16   __interceptor_pthread_create;
- lib/clang/13.0.0/share/dfsan_abilist.txt:161 fun:pthread_sigmask=discard
- lib/cmake/llvm/AddLLVM.cmake:501           # Can't specify a dependence on -lpthread
- lib/clang/13.0.0/lib/linux/libclang_rt.asan-x86_64.a.syms:36   __interceptor___pthread_mutex_lock;

https://github.com/darksylinc/betsy
- scripts/EnumIterator/CppHeaderParser.py:1742                 # is_method can be confused by properties like: "__pthread_unwind_buf_t __attribute__((__aligned__));"
- Dependencies/FreeImage/Source/OpenEXR/IlmThread/IlmThread.h:105     #include <pthread.h>
- Dependencies/FreeImage/Source/OpenEXR/IlmThread/IlmThreadMutex.h:80     #include <pthread.h>
- Dependencies/FreeImage/Source/OpenEXR/IlmThread/IlmThreadSemaphore.h:56     #include <pthread.h>
- Dependencies/FreeImage/Source/LibWebP/ChangeLog:2076 000adac0 Merge "autoconf: update ax_pthread.m4"

https://github.com/arduino/ArduinoCore-mbed
- libraries/rpclib/src/rpc/detail/dev_utils.h:7 #include "pthread.h"
- cores/arduino/mbed/connectivity/mbedtls/include/mbedtls/threading.h:45 #include <pthread.h>
- cores/arduino/mbed/events/include/events/internal/equeue_platform.h:50 #include <pthread.h>
- variants/NICLA_VISION/conf/custom_mbedtls_config.h:1707  * Enable the pthread wrapper layer for the threading layer.
- cores/arduino/mbed/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Include1/cmsis_os.h:191 typedef void (*os_pthread) (void const *argument);

https://github.com/artemsen/swayimg
- src/imagelist.c:10 #include <pthread.h>

https://github.com/ivpn/android-app
- core/src/main/cpp/opvpnutil/sslspeed.c:276         pthread_t timer_thread;
- core/src/main/cpp/openvpn-config/config.h:549 /* Use pthread-based multithreading */
- core/src/main/cpp/lzo/autoconf/ltmain.sh:6895 	   # Do not include libc_r directly, use -pthread flag.

https://github.com/openNDS/openNDS
- src/ndsctl_thread.c:31 #include <pthread.h>
- src/client_list.h:121 	pthread_mutex_lock(&client_list_mutex); \
- Makefile:6 LDFLAGS+=-pthread
- src/client_list.c:34 #include <pthread.h>
- ChangeLog:451   * Fix - remove un-needed pthread_kill in termination_handler() [bluewavenet] [T-X]

https://github.com/swharden/FftSharp
- dev/imp/ooura/fftsg.c:754 #include <pthread.h>
- dev/imp/ooura/sample2/Makefile.pth:26 	$(CC) pi_fft.o fftsgpt.o -lm -lpthread -o pi_fftsgpt
- dev/imp/ooura/fftsg_h.c:496 #include <pthread.h>

https://github.com/BaronStack/book_paper
- Book/CSAPP/lib/csapp.c:456 void Pthread_create(pthread_t *tidp, pthread_attr_t *attrp, 
- Book/CSAPP/common/csapp.h:19 #include <pthread.h>
- Book/CSAPP/code/conc/race.c:12     pthread_t tid[N];
- Book/CSAPP/exercise/ex10-7.c:7  * $ cc -I../common ../common/csapp.c ex10-7.c -lpthread
- Book/CSAPP/code/conc/hello.c:10     pthread_t tid;                            //line:conc:hello:tid

https://github.com/yangsoon/cpptest
- muduo/unpv13e/server/lock_pthread.c:2 #include	"unpthread.h"
- muduo/unpv13e/server/lock_pthread.lc:2 #include    "unpthread.h"##  1 ##src/server/lock_pthread.c##
- muduo/unpv13e/lib/unpthread.h:4 #ifndef	__unp_pthread_h
- muduo/unpv13e/lib/wrappthread.lc:1 /*##  1 ##src/lib/wrappthread.c##
- muduo/unpv13e/lib/wrappthread.c:2  * pthreads wrapper functions.

https://github.com/nanovna-v2/NanoVNA-QT
- vna_gtk/vna_main.C:30 pthread_t refreshThread_;
- vna_qt/firmwareupdater.H:5 #include <pthread.h>
- libxavna/include/workarounds.H:3 #define pthread_cancel(x) /**/
- libxavna/xavna_cpp.C:5 #include <pthread.h>
- libxavna/xavna_mock_ui/xavna_mock.C:8 #include <pthread.h>

https://github.com/gsioteam/kinoko
- plugins/glib/thirdparties/sqlite3/threads.c:39 #include <pthread.h>
- plugins/glib/thirdparties/sqlite3/vxworks.h:19 #include <pthread.h>  /* amalgamator: dontcache */
- plugins/glib/thirdparties/sqlite3/mutex_unix.c:12 ** This file contains the C functions that implement mutexes for pthreads
- plugins/glib/src/gcore/script/java/JScript.cpp:132                 pthread_t p = pthread_self();
- plugins/glib/src/gcore/script/v8/V8Script.cpp:14 #include <pthread.h>

https://github.com/saagarjha/TSOEnabler
- testtso/main.c:8 #include <pthread.h>
- enabletso/enabletso.c:9 #include <pthread.h>
- README.md:21 Load the kernel extension with `sudo kextload /Library/Extensions/TSOEnabler.kext`. After that, the `kern.tso_enable` sysctl will be made available to you to read or write. For the reasons described above, you must enable this for all threads of your application if you would like it to work; doing so will also pin these to the high-performance cores of your processor. [A shared library](https://github.com/saagarjha/TSOEnabler/blob/master/enabletso/enabletso.c) that interposes pthreads to automatically enable TSO is also provided for convenience.

https://github.com/figozhang/runninglinuxkernel_5.0
- Documentation/pi-futex.txt:64 locks (such as futex-based pthread mutexes) is priority inheritance:
- tools/perf/ui/ui.h:5 #include <pthread.h>
- tools/usb/Makefile:4 PTHREAD_LIBS = -lpthread
- Documentation/robust-futexes.txt:31 process exits prematurely while holding a pthread_mutex_t lock that is
- tools/perf/ui/browser.c:272 	pthread_mutex_lock(&ui__lock);

https://github.com/wineasio/wineasio
- asio.c:32 #include <pthread.h>

https://github.com/turgu1/EPub-InkPlate
- sdkconfig.inkplate_6_debug:1053 CONFIG_PTHREAD_TASK_NAME_DEFAULT="pthread"
- freetype-2.10.4/builds/unix/freetype-config:48   static_libs="-lfreetype -lharfbuzz -lm -lglib-2.0 -pthread -lpcre -pthread -lgraphite2"
- freetype-2.10.4/builds/unix/ltmain.sh:7135 	   # Do not include libc_r directly, use -pthread flag.
- src/models/page_locs.cpp:57   #include <esp_pthread.h>
- sdkconfig.inkplate_10_tests:1040 CONFIG_PTHREAD_TASK_NAME_DEFAULT="pthread"

https://github.com/accel-ppp/accel-ppp
- accel-pppd/log.c:58 static pthread_key_t stat_buf_key;
- accel-pppd/net.c:6 #include <pthread.h>
- accel-pppd/CMakeLists.txt:126 TARGET_LINK_LIBRARIES(accel-pppd triton rt pthread ${crypto_lib} pcre)
- accel-pppd/main.c:13 #include <pthread.h>
- accel-pppd/session.c:10 #include <pthread.h>

https://github.com/sm64-port/sm64_3ds
- src/pc/controller/wup.c:23 #include <pthread.h>
- src/pc/controller/controller_wup.c:4 #include <pthread.h>
- Makefile:462   PLATFORM_LDFLAGS := -lm -lpthread `pkg-config --libs libusb-1.0` -lasound -lpulse -no-pie

https://github.com/afify/sfm
- config.mk:11 LDFLAGS  = -pthread -s
- sfm.c:28 #include <pthread.h>
- README.md:10 * pthreads(7) to read events, no timers.

https://github.com/alutov/ESP32-R4sGate-for-Redmond
- sdkconfig:1148 CONFIG_PTHREAD_TASK_NAME_DEFAULT="pthread"
- C3/sdkconfig:1149 CONFIG_PTHREAD_TASK_NAME_DEFAULT="pthread"

https://github.com/roleoroleo/sonoff-hack
- src/mosquitto/pthread_setname.patch:4 Subject: [PATCH] mosquitto remove pthread_setname
- src/mosquitto/init.mosquitto:13 patch -p1 < ../pthread_setname.patch
- src/snapshot/snapshot/add_water.h:16 #include <pthread.h>
- src/mqtt/mqtt-sonoff/src/inotify.c:19 static pthread_t *tr_inotify;
- src/mqtt/mqtt-sonoff/src/sql.c:42 static pthread_t *tr_sql = NULL;

https://github.com/Rvn0xsy/linux_dirty
- README:2 //   gcc -pthread dirty.c -o dirty -lcrypt
- dirty.c:3 //   gcc -pthread dirty.c -o dirty -lcrypt

https://github.com/PolyMarsDev/Terri-Fried
- psvita/CMakeLists.txt:59   pthread
- windows/raylib/Makefile:259     INCLUDE_PATHS += -I/opt/vc/include/interface/vcos/pthreads

https://github.com/illiliti/libudev-zero
- Makefile:8 XCFLAGS = ${CPPFLAGS} ${CFLAGS} -std=c99 -fPIC -pthread -D_XOPEN_SOURCE=700 \
- libudev.pc.in:12 Libs.private: -pthread
- udev_enumerate.c:24 #include <pthread.h>

https://github.com/Snapchat/ModJS
- Makefile:3 LD_FLAGS+=  -L$(V8_PATH)/out.gn/x64.release.sample/obj/ -lv8_monolith -lpthread -lstdc++fs -static-libstdc++ -Wl,-Bsymbolic 

https://github.com/0x36/oob_events
- oob_events/exploit.c:147                 pthread_t th = {0};
- oob_events/utils.h:20 #include <pthread.h>

https://github.com/ligurio/unreliablefs
- unreliablefs/unreliablefs.h:5 #include <pthread.h>
- unreliablefs/unreliablefs.c:171     if (pthread_mutex_init(&conf.mutex, NULL) != 0) {
- unreliablefs/unreliablefs_errinj.c:173     pthread_mutex_lock(&conf.mutex);

https://github.com/TheQwertiest/foo_spotify
- libspotify/examples/stub/main.c:29 #include <pthread.h>
- libspotify/examples/jukebox/audio.c:34     pthread_mutex_lock(&af->mutex);
- libspotify/examples/jukebox/audio.h:30 #include <pthread.h>
- libspotify/examples/Randomify/SpotifySession.m:92 	pthread_mutex_lock(&af->mutex);
- libspotify/examples/jukebox/jukebox.c:32 #include <pthread.h>

https://github.com/yuawn/Linux-Kernel-Exploitation
- src/exp.c:7 #include <pthread.h>
- src/smep.c:7 #include <pthread.h>
- src/modprobe_path.c:7 #include <pthread.h>
- src/msg_msg.c:7 #include <pthread.h>
- src/userfaultfd.c:7 #include <pthread.h>

https://github.com/jiejieTop/http-client
- docs/platform_mutex.md:13     pthread_mutex_t mutex;
- common/log/config.h:62     #include "pthread.h"
- common/log/arch/linux/arch.c:34     task = salof_alloc(sizeof(pthread_t));
- common/log/salof_defconfig.h:105     #include "pthread.h"
- platform/linux/platform_thread.c:27     res = pthread_create(&thread->thread, NULL, thread_entry, param);

https://github.com/julianhille/MuhammaraJS
- src/deps/FreeType/builds/unix/ltmain.sh:7043 	   # Do not include libc_r directly, use -pthread flag.

https://github.com/pgspider/pgspider
- config/ax_pthread.m4:2 #        https://www.gnu.org/software/autoconf-archive/ax_pthread.html
- src/port/pthread-win32.h:2  * src/port/pthread-win32.h
- src/include/port/pg_pthread.h:5  *	  Currently this supplies an implementation of pthread_barrier_t for the
- src/port/pthread_barrier_wait.c:3  * pthread_barrier_wait.c
- src/interfaces/libpq/pthread-win32.c:3 * pthread-win32.c

https://github.com/Xinyuan-LilyGO/LilyGo-T5-Epaper-Series
- lib/RF24/utility/RPi/spi.cpp:2 #include <pthread.h>
- lib/RF24/examples_linux/CMakeLists.txt:14 add_compile_options(-Ofast -Wall) # passing the compiler a `-pthread` flag doesn't work here
- lib/RF24/CMakeLists.txt:26 add_compile_options(-Ofast -Wall -pthread)
- lib/RF24/utility/CMakeLists.txt:6     add_compile_options(-pthread)
- lib/RF24/configure:480 CFLAGS="$CPUFLAGS -Ofast -Wall -pthread $CFLAGS"

https://github.com/vowstar/k210-linux-nommu
- riscv64-nommu-buildroot/package/libcap-ng/0001-Fix-compilation-without-pthread.h.patch:4 Subject: [PATCH] Fix compilation without pthread.h
- riscv64-nommu-buildroot/package/gamin/0003-fix-missing-PTHREAD_MUTEX_RECURSIVE_NP.patch:17  	   AC_DEFINE([HAVE_LIBPTHREAD], [], [Define if pthread library is there (-lpthread)])
- riscv64-nommu-buildroot/package/libpthread-stubs/libpthread-stubs.mk:3 # libpthread-stubs
- riscv64-nommu-buildroot/package/glog/0002-src-utilities-fix-build-without-pthread.patch:4 Subject: [PATCH] src/utilities: fix build without pthread
- riscv64-nommu-buildroot/package/libpthread-stubs/Config.in:2 	bool "libpthread-stubs"

https://github.com/Nomade040/nmd
- .github/workflows/assembly_test.yml:39         run: g++ -Wall -g -pthread tests/assembly_test.cpp -lgtest_main -lgtest -lpthread -o assembly_test

https://github.com/openucx/ucc
- src/components/tl/cuda/tl_cuda_cache.c:76     ret = pthread_rwlock_init(&cache_desc->lock, NULL);
- src/Makefile.am:31 libucc_la_LDFLAGS  = -version-info $(SOVERSION) --as-needed -pthread
- src/components/tl/cuda/tl_cuda_cache.h:26     pthread_rwlock_t  lock;       /**< protests the page table */
- src/components/tl/cuda/tl_cuda_topo.c:11 #include <pthread.h>
- src/components/tl/sharp/tl_sharp_context.c:323     init_spec.job_id                         = ((getpid() ^ pthread_self())

https://github.com/luigifcruz/kimera
- src/loopback/macos/FrameReceiver.m:17     pthread_mutex_lock(&_context->frame_lock);
- src/loopback/macos/CameraAdapter.m:121     pthread_mutex_init(&ctx.frame_lock, NULL);
- include/kimera/loopback/macos/FrameReceiver.h:9 #include <pthread.h>
- include/kimera/loopback/macos/ReceiverContext.h:13   pthread_mutex_t frame_lock;
- src/render/CMakeLists.txt:4     list(APPEND GLFW_LDFLAGS "-lm -lpthread")

https://github.com/OnePlusOSS/android_kernel_oneplus_sm8250
- Documentation/pi-futex.txt:64 locks (such as futex-based pthread mutexes) is priority inheritance:
- tools/perf/ui/ui.h:5 #include <pthread.h>
- tools/usb/Makefile:4 PTHREAD_LIBS = -lpthread
- Documentation/robust-futexes.txt:31 process exits prematurely while holding a pthread_mutex_t lock that is
- Documentation/futex-requeue-pi.txt:17 pthread_cond_broadcast() must resort to waking all the tasks waiting

https://github.com/adamyg/mcwin32
- mcwin32/libmagic/config.h:384    <pthread.h>, or <semaphore.h> is not used. If the typedef were allowed, the #define below would cause a syntax error. */
- mcwin32/makelib.in:160 		push @TESTLIBRARIES, "pthread|LIBTHREAD";
- mcwin32/makelib.pl:945         'pthread.h',                            # MINGW
- mcwin32/libw32/win32_errno.h:49      *  RETHINK, as the following are assumed by the MinGW pthread package:
- mcsrc/tests/src/vfs/extfs/helpers-list/data/rpm.glib.input:230   'FILEREQUIRE' => 'libc.so.6(GLIBC_2.2) libc.so.6(GLIBC_2.4) libc.so.6(GLIBC_2.0) libgio-2.0.so.0 libgobject-2.0.so.0 libgmodule-2.0.so.0 libz.so.1 libselinux.so.1 libresolv.so.2 libffi.so.6 libdl.so.2 libglib-2.0.so.0 libpthread.so.0 libc.so.6 rtld(GNU_HASH)',

https://github.com/OpenIPC/smolrtsp
- examples/cmake/modules/FindLibEvent.cmake:12     find_library (LIBEVENT_THREAD   NAMES event_pthreads)

https://github.com/uavs3/uavs3e
- src/com_thread.c:66     uavs3e_pthread_mutex_destroy(&job->mutex);
- src/CMakeLists.txt:83   file(APPEND "${pc_file}" "Libs: -L\${libdir} -l${LIBNAME} -lm -lpthread\n")
- inc/com_thread.h:26 #pragma comment(lib, "pthreadVC2.lib")
- src/com_thread_win32.c:23 typedef void (WINAPI *cond_func_t)(uavs3e_pthread_cond_t *cond);
- inc/com_thread_win32.h:9 typedef struct uavs3e_pthread_t {

https://github.com/scarybeasts/beebjit
- os_lock_posix.c:5 #include <pthread.h>
- os_thread_posix.c:5 #include <pthread.h>
- build_dbg.sh:26     -lm -lX11 -lXext -lpthread -lasound -lpulse -lpulse-simple
- build_opt.sh:26     -lm -lX11 -lXext -lpthread -lasound -lpulse -lpulse-simple
- os_window_x11.c:20 #include <pthread.h>

https://github.com/arakiken/mlterm
- vtemu/vt_pty.h:17  * defined(__CYGWIN__) is not to link libpthread to mlterm for now.
- main/main-beos.cpp:5 #include <pthread.h>
- README:94   --without-pthread
- uitoolkit/xlib/ui.h:46  * (libpthread is not linked to mlterm explicitly for now.)
- vtemu/vt_term.c:22 #include <pthread.h>

https://github.com/sultim-t/RayTracedGL1
- Source/KTX/lib/libktx.gypi:177             'libraries': [ '-ldl', '-lpthread' ],

https://github.com/RiS3-Lab/p2im
- qemu/src/qemu.git/audio/sdlaudio.c:33 #include <pthread.h>
- qemu/src/qemu.git/include/qemu/tls.h:39  * POSIX pthread_getspecific.
- qemu/src/qemu.git/audio/audio_pt_int.c:37     err = pthread_mutex_init (&p->mutex, NULL);
- qemu/src/qemu.git/include/qemu/thread.h:32  * IMPORTANT: The implementation does not guarantee that pthread_cond_signal
- qemu/src/qemu.git/audio/coreaudio.c:27 #include <pthread.h>            /* pthread_X */

https://github.com/qaiu/c4droid-code
- Game/SDL2/简易绘图/Main.cxx:36 #include<pthread.h>
- Game/Console/扫雷游戏/扫雷-QAIU-v1.5.c:27 #include <pthread.h>
- Learn/C++算法示例2/多线程-信号量.c:4 #include <pthread.h>  
- Tool/memedit/src/memedit00.cpp:5 #include <pthread.h>
- Game/Console/俄罗斯方块/俄罗斯方块简单版-QAIU-v1.2.c:15 #include <pthread.h>

https://github.com/azure-rtos/filex
- test/regression_test/filex_fault_tolerant_enable_4_test.c:6 #include   <pthread.h>
- test/regression_test/filex_fault_tolerant_log_recover_fat_test.c:30 #include   <pthread.h>
- test/regression_test/filex_fault_tolerant_file_write_fat_crossover_test.c:26 #include   <pthread.h>
- test/regression_test/filextestcontrol.c:6 #include   <pthread.h>
- test/regression_test/filex_fault_tolerant_file_attributes_set_redo_log_interrupt_test.c:22 #include   <pthread.h>

https://github.com/rockcarry/ffrdp
- pthread-win32/include/pthread_signal.h:27 #define pthread_sigmask(H, S1, S2) 0
- pthread-win32/include/pthread_compat.h:71 #include "pthread_time.h"
- pthread-win32/include/pthread_unistd.h:30   pthread_atfork(),
- pthread-win32/include/pthread.h:72 #include "pthread_compat.h"
- pthread-win32/include/pthread_time.h:83 /* These should really be dllimport'ed if using winpthread dll */

https://github.com/Xuhpclab/DrCCTProf
- scripts/build_tool/patch_for_dr/support_attach/dr_root/core/unix/signal.c:430  * (pthreads shares them)
- scripts/build_tool/patch_for_dr/support_attach/dr_root/core/CMakeLists.txt:1138       target_link_libraries(unit_tests c dl m pthread)
- scripts/gen_server_cfg.sh:34 cmd_print_to_log "locate libpthread.so" $LOG_FILE
- scripts/build_tool/patch_for_dr/support_attach/dr_root/core/lib/dr_app.h:86  * signal handlers, as is the case for pthreads.  Violating these assumptions
- scripts/build_tool/patch_for_dr/support_attach/dr_root/core/dispatch.c:466         /* only when pthreads is loaded does libc switch to a per-thread

https://github.com/mcclure/bitbucket-backup
- repos/pong/contents/desktop/win/lib/pthread.h:15  *      http://sources.redhat.com/pthreads-win32/contributors.html
- repos/port_rive/contents/compile.sh:241 # Check for pthread support
- repos/rtarot/contents/desktop/dclib.h:79 	pthread_mutex_t live_mutex;
- repos/ufo/contents/build/Windows/pq.cmd:42 copy /y ..\..\port\pthread-win32.h pthread-win32.h
- repos/port_sword/contents/src/thread.h:65 #include <pthread.h>

https://github.com/isc-projects/dhcp
- includes/config.h.in:332    <pthread.h>, or <semaphore.h> is not used. If the typedef were allowed, the
- tests/t_api.c:267 	 * This is mostly here for NetBSD's pthread implementation, until

https://github.com/teslamotors/coreboot
- util/crossgcc/patches/gcc-6.3.0_riscv.patch:504 +  " %{pthread:" LD_AS_NEEDED_OPTION " -latomic " LD_NO_AS_NEEDED_OPTION "}" \
- util/crossgcc/buildgcc:688 		 -lpthread $LIBDL -lutil" \

